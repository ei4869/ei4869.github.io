<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>文献翻译(七)</title>
      <link href="/2024/12/09/%E6%96%87%E7%8C%AE%E7%BF%BB%E8%AF%91-%E4%B8%83/"/>
      <url>/2024/12/09/%E6%96%87%E7%8C%AE%E7%BF%BB%E8%AF%91-%E4%B8%83/</url>
      
        <content type="html"><![CDATA[<h1 align="center"><strong><b>棕色铁矿型 SrCoO₂.₅ 向钙钛矿型 SrCoO₃–<sub>δ</sub> 的拓扑相变(Topotactic Phase Transformation of the Brownmillerite SrCoO₂.₅ to the Perovskite SrCoO₃–<sub>δ</sub>)</b></strong></h1><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>氧化物中的氧化学计量比是决定过渡金属氧化物（TMO）物理性能的最重要因素之一。氧含量的微小变化会导致过渡金属的价态发生变化，从而极大地改变材料的功能特性。这些功能特性包括（超）导电性、磁性、铁电性、体离子传导性和催化表面反应等。特别地，在众多应用中，具有混合价态的TMO因其在环境保护和可再生能源领域的广泛用途而受到关注，包括催化剂、水分解制氢、可充电电池和固体氧化物燃料电池的阴极材料，以及氧分离膜等。例如，以往研究表明，控制TMO中$d$能带电子的数量和详细的自旋构型对于改善其催化性能至关重要。在此背景下，$SrCoO_x$（$2.5 \leq x \leq 3.0$）是一类理想的材料，可通过改变过渡金属氧化物中的价态研究其物理性能的演变。这是因为其存在两种结构明显不同的拓扑相，即棕色铁矿型$SrCoO_{2.5}$（BM-SCO，见图1a）和钙钛矿型$SrCoO_3$。特别是，BM-SCO具有原子级有序的一维氧空位通道（见图1a），当$Co$的价态发生变化时，这些通道能够容纳额外的氧。此外，$SrCoO_x$的物理性能范围广泛，随着氧化学计量比的变化，从反铁磁绝缘体转变为铁磁金属。由于$SrCoO_x$的$Co$价态调节仅依赖于氧含量$x$，而无需进行阳离子掺杂，因此可以系统地研究价态（即氧含量）对物理性能的影响。然而，目前高质量单晶材料的制备仍面临挑战，原因在于难以准确控制氧化态。</p><p>在本研究中，我们通过脉冲激光外延（PLE）技术，在$SrTiO_3$（STO）基底上成功生长了高质量的BM-SCO单晶薄膜。为了研究其向钙钛矿型$SrCoO_{3-\delta}$（P-SCO）的拓扑相变，我们对部分样品在不同的氧气压力（$P(O_2)$）下进行了原位退火，以填充氧空位。尽管直接生长$x=3.0$的P-SCO薄膜较为困难，但我们发现，在高氧气压力（超过数百托）的条件下进行后续退火，可以填充足够的氧空位，从而实现电子、磁性和热电性能的系统演变。</p><p>图1b显示了BM-SCO薄膜（厚度为25 nm）的X射线衍射（XRD）$\theta-2\theta$扫描图案。需要注意的是，BM-SCO为正交晶系，其晶格常数为$a_o=5.5739 \, \text{Å}$，$b_o=5.4697 \, \text{Å}$，$c_o=15.7450 \, \text{Å}$，但为了估算晶格失配程度，可表示为伪四方晶系（$a_t=3.905 \, \text{Å}$，$c_t/2=3.936 \, \text{Å}$）。本文将全程使用正交晶系标记法。所有薄膜均在(001)取向的STO基底（$a=3.905 \, \text{Å}$）上生长。通过比较不同晶向的晶格失配，可以发现BM-SCO相倾向于以$c$轴取向在STO基底上生长，因为面内失配几乎为零。从图1b的XRD扫描结果可以清晰地验证这一点。此外，起源于交替堆叠的八面体与四面体子层的$c$晶格常数的特征性增加（$c/2=7.860 \, \text{Å}$）也显而易见。图2a中的X射线倒易空间映射（RSM）进一步证实了在与STO基底完美匹配的晶格上实现的相干生长，而图1b中清晰的Kiessig条纹和尖锐的衍射峰表明薄膜质量较高。X射线摇摆曲线$\omega$扫描显示，薄膜的全宽半高（FWHM）小于0.04°，进一步表明其结晶质量优异（相比之下，STO的002峰的FWHM约为0.02°，数据未展示）。</p><p>尽管我们展示了经过优化的高质量薄膜的XRD数据，值得一提的是，BM-SCO薄膜只能在非常狭窄的生长窗口内合成。通过系统生长数十个样品（见图2d），我们发现这可能与钴的多种氧化态密切相关。需要注意的是，最常见的两种价态为$Co^{2+}$（$3d^7$）和$Co^{3+}$（$3d^6$）。特别是在低氧分压（$P(O_2) &lt; 10 \, \text{mTorr}$）条件下生长时，XRD $\theta-2\theta$扫描中容易检测到$CoO$杂质相。通过将$P(O_2)$提高到200 mTorr，可以避免杂质相的形成。  此外，我们发现薄膜的相纯度对生长温度非常敏感，而生长温度在获得具有正确化学计量比的薄膜中起到了关键作用。实验表明，750°C是STO基底上薄膜的最佳生长温度。在较低温度下生长的薄膜中，除了BM相外，我们经常观察到可能是菱方晶系$Sr_6Co_5O_{15-\delta}$杂质相的存在。这可以解释为BM结构向低温多晶型相（如$Sr_6Co_5O_{15-\delta}$）的容易发生的结构转变，这种转变在低生长温度和低$P(O_2)$条件下热力学上更为有利。需要注意的是，后续冷却的氧分压保持与生长时相同，以尽量减少氧含量的波动，因为钴酸盐薄膜的氧含量甚至在冷却过程中也可能发生变化。</p><p>尽管我们能够优化BM-SCO薄膜的生长条件以获得高质量薄膜，但尝试直接生长具有较高氧含量的薄膜（即$x &gt; 2.5$的$SrCoO_x$）未获成功。如前所述，即使在极高氧分压条件下（例如，甚至几百毫托范围），也无法稳定钙钛矿相，而是生成了$Co-O$杂质相。需要注意的是，大多数钙钛矿氧化物可以在如此高的氧分压下轻松生长，并且不含氧空位。这可能与形成含有$Co^{4+}$的钙钛矿相的热力学势垒过高有关，在典型的脉冲激光沉积（PLE）条件下，更稳定的$Co^{2+}$和/或$Co^{3+}$相更易形成。值得一提的是，对于其他钙钛矿（如锰酸盐薄膜），钙钛矿相的形成通常优于褐钙矿相。对于锰酸盐薄膜，即使在高真空条件下生长，也只会形成钙钛矿相。有趣的是，在锰酸盐薄膜旁边使用一个吸氧层被发现是一种稳定锰基褐钙矿相的方法。</p><p>由于直接生长$x &gt; 2.5$的$SrCoO_x$薄膜不可行，这一点也在之前的研究中得到了证实，我们尝试通过在更高氧分压下的原位氧气退火来诱导拓扑氧化，以形成$x &gt; 2.5$的$SCO$相。图1c和图1d显示了分别在$P(O_2) = 300 \, \text{Torr}$和$P(O_2) = 600 \, \text{Torr}$条件下，于600°C退火5分钟的样品的XRD $\theta-2\theta$扫描结果。其对应的倒易空间映射（RSM）结果显示在图2b和图2c中。如图1d所示，当$BM-SCO$薄膜在600°C和$P(O_2) = 600 \, \text{Torr}$条件下退火时，$BM$相的半阶衍射峰完全被抑制。该温度最低可为400°C，但在更高温度（&gt;600°C）下退火会显著降低薄膜的结构质量，导致生成含$Co-O$杂质相的多晶薄膜。    在XRD图谱中出现了一组新的衍射峰，表明沿$c$轴方向的晶格常数显著降低了约3\%。$c$轴晶格常数的减小表明成功地将氧插入$BM$相的四面体子晶格中。同时，半阶衍射峰的消失也表明通过氧插入消除了八面体和四面体子层之间的化学与结构差异。这一转变表明成功地形成了钙钛矿$SrCoO_x$（$P-SCO$）结构。据文献报道，$BM-SCO$的特征XRD峰完全消失时，$x$接近2.75。</p><p>此外，$P-SCO$相的形成对退火压力非常敏感。如图1c和图2b所示，当$BM-SCO$薄膜在较低的氧分压条件下（100 &lt; $P(O_2) \leq 300$ Torr）进行退火时，薄膜中主要观察到$BM-SCO$和$P-SCO$的混合相（$Mix-SCO$）。虽然尚不清楚这两种相在薄膜中的具体物理位置，但混合相薄膜中两种相的XRD衍射峰位置与单独$BM-SCO$和$P-SCO$薄膜的衍射峰完全一致。此外，我们未能发现任何可能对应中间相的衍射峰，这表明$BM$相向$P-SCO$相的结构转变类似于一级相变。将$BM-SCO$转变为$P-SCO$所需的高氧分压（&gt;300 Torr）似乎解释了为何无法直接在氧气中生长$P-SCO$相。（需要注意的是，在如此高的氧分压下进行$PLE$生长是不切实际的，因为背景气体会显著增加对激光烧蚀物质的散射。）</p><p><span style="color:red"><strong>图1.</strong><br>(a) 沿$c$轴取向的$BM-SCO$薄膜在(001) $STO$基底上的外延生长示意图。<br>(b) $BM-SCO$、(c) $Mix-SCO$和(d) $P-SCO$薄膜在$STO$基底上的XRD $\theta-2\theta$图谱。<br>请注意，$Mix-SCO$和$P-SCO$薄膜分别在600°C、300和600 Torr的氧分压条件下<strong>原位</strong>退火5分钟。$STO$基底的衍射峰用星号（∗）标出。</span><br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/post/文献图片/翻译七/img38.jpg" style="width:400px;"/></div></div></p><p>我们还注意到，氧空位的填充似乎导致了薄膜的应变松弛，这可能是由于$P-SCO$薄膜与$STO$衬底之间存在较大的晶格失配（约2%）。如图2a–c所示对比，$BM-SCO$相保持完全应变状态（图2a,b），而$P-SCO$相则表现为应变松弛（图2b,c）。需要注意的是，图2b中所示的混合相薄膜仍然具有完全应变的$BM$相。</p><p><span style="color:red"><strong>图2.</strong><br>(a) $BM-SCO$薄膜、(b) $Mix-SCO$薄膜和(c) $P-SCO$薄膜在103 $STO$布拉格反射附近的倒空间图。<br>(d) 外延$BM-SCO$薄膜的生长相图，以氧分压和生长温度为变量。无杂相（主要是$Co-O$）的纯相$BM-SCO$外延薄膜仅能在窄的生长窗口内制备（蓝绿色区域，标有空心圆圈和三角形符号）。在标有叉号的条件下生长的薄膜不是外延的或包含杂相。空心三角形表示尽管未观察到杂相，但薄膜的结晶质量较差。</span><br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/post/文献图片/翻译七/img37.jpg" style="width:400px;"/></div></div></p><p>尽管通过氧插入确认了整体的结构演变，但从XRD数据中精确确定价态或氧含量的具体变化仍然具有挑战性。因此，我们使用了偏振X射线吸收光谱（XAS）来探测元素分辨的化学价态细节。由于氧空位的形成会改变$SCO$中$Co$的价态，通过检测$Co$的价态变化可以追踪氧化学计量比的变化。如图3a所示，$Co$ L边的XAS数据显示，与$BM-SCO$相比，$P-SCO$的峰位向更高能量方向发生了偏移。该峰位能量的偏移明确表明，随着氧插入，$Co$的价态从3+向4+发生了变化。正如预期的那样，总体趋势表明，$P-SCO$薄膜中$Co$离子的价态高于$BM-SCO$。   我们进一步比较了$BM-SCO$和$P-SCO$薄膜的$O$ K边XAS数据。该数据反映了$O-2p$与相邻阳离子轨道（例如$Co-3d$和$Sr-4d$）之间的不同杂化。在这些杂化中，$O$ K边约526.5 eV处的预峰（pre-peak）来源于$O-2p$和$Co-3d$之间的杂化。需要注意的是，该预峰对氧含量非常敏感，即随着$Co$价态从3+向4+变化，预峰强度显著增加。如图3b所示，$P-SCO$在约527 eV处的预峰明显可见，而在$BM-SCO$中，该预峰几乎完全被抑制。这清楚地表明，通过氧插入成功实现了$BM-SCO$的氧化以及随后的$Co$价态变化。需要指出的是，该XAS测量采用了对体敏感的荧光产额模式，而较高能量处的特征由于衬底的贡献而被遮蔽。</p><p><span style="color:red"><strong>图3.</strong><br>(a) BM-SCO和P-SCO薄膜的XAS Co L边谱图，显示出氧化过程中峰位向高能方向的偏移，证实了Co价态的变化。<br>(b) 相应样品的XAS O K边谱图。在P-SCO薄膜中，由于氧的插入，可以清晰观察到氧预峰的增强（见箭头所示）。</span><br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/post/文献图片/翻译七/img49.jpg" style="width:400px;"/></div></div></p><p>通过测量温度相关的磁化强度（$M(T)$）和磁滞回线（$M(H)$），进一步验证了通过价态改变引起的磁性变化。这些测量是使用超导量子干涉装置（SQUID）磁强计完成的。如图4a所示，BM-SCO的磁化强度接近零，并且$M(T)$中没有明显的变化，即未观察到磁相变。此外，在10 K（图4b）和250 K（数据未显示）进行的$M(H)$测量表明，磁滞回线具有相似的特征，并且无矫顽场。由于BM-SCO薄膜的生长不存在晶格失配，其磁性行为与体相BM-SCO材料中的反铁磁性一致（注意到后者的$T_N = 570 \, \text{K}$）。这种体相行为清楚地表明，我们的BM-SCO外延薄膜均匀生长，没有氧丰富的SCO相或顺磁性杂相，这与XRD结果一致。另一方面，经过氧退火处理的薄膜清晰地显示出铁磁性证据（图4a,b）。这种铁磁性源于氧插入引起的$Co^{4+}$的出现，从而增强了铁磁交换作用。假设纯P-SCO已稳定下来，我们可以从$T_C$和饱和磁化强度估算P-SCO薄膜中的氧含量。需要注意的是，由于P-SCO是松弛状态，本估算未考虑应变的影响。$T_C$处于SCO体相材料中$x = 2.75$和$x = 2.88$的值之间。此外，饱和磁化强度（约$0.7 \, \mu_B/\text{Co}$，在6 T下）大于$x = 2.75$的体相SCO。因此，我们得出结论，在不破坏外延性的情况下，通过原位氧退火在STO上获得的P-SCO最大氧化态（$x$）为$2.75 &lt; x &lt; 2.88$。进一步研究与应变（或晶格失配）相关的氧化行为将有助于深入理解应变对氧化及其相关物理性质的影响。</p><p>此外，$M(T)$测量表明，Mix-SCO和P-SCO薄膜的$T_C$相近（约200 K），这表明Mix-SCO确实是BM和P相的物理混合体，$Co$离子中存在混合价态。这进一步表明，从BM-SCO到P-SCO的相转换或氧插入是一级相变，如前所述，即使完全氧化似乎具有挑战性。然而，值得注意的是，不通过阳离子掺杂即可实现具有混合价态的外延薄膜。通过比较纯P-SCO和Mix-SCO薄膜的剩磁（分别是$M_r = 47 \, \text{emu/cm}^3$和$22 \, \text{emu/cm}^3$），我们估算Mix-SCO薄膜中P-SCO的比例约为47%。</p><p>为了进一步研究SCO的电子传输特性，我们对其进行了温度相关的直流传导和热电性质的表征。如图4c所示，BM-SCO薄膜表现出高度绝缘的行为。根据电子传输数据，计算得出其热激活能为0.19 eV，该值接近于体相$SrCoO_{2.5}$的激活能（0.24 eV）。另一方面，P-SCO薄膜在室温下的电阻率显著降低（减少了三个数量级以上）。其温度依赖性表现明显不同于BM-SCO。然而，在STO上的P-SCO并未表现出清晰的金属行为（即电阻率随温度降低而减少的特性）。类似的$\rho(T)$行为也出现在Mix-SCO薄膜中，尽管其整体电阻率略高于P-SCO，如图4c所示。基于两种$\rho(T)$曲线的相似性，我们认为P-SCO中的绝缘特性源于前述的不完全氧化引起的长程有序缺失。</p><p>尽管在STO上的P-SCO未显示出明确的金属性，但SCO薄膜的特征结构可能提供其他有用的物理性质。因此，如图4d所示，我们测量了SCO薄膜在300 K下的热电势。需要注意的是，热电测量对空穴掺杂和/或氧含量变化引起的载流子浓度变化特别敏感。首先，随着SCO薄膜中氧含量或空穴掺杂的增加，热电势系统性地降低。这表明氧插入时SCO的载流子浓度增加，这与图4c中电子电导率的增强趋势相一致。此外，在室温下，所有样品的正热电势值清楚地表明SCO薄膜为$p$型导电。该现象由氧插入引起的空穴掺杂导致，这与化学计量比$SrCoO_3$中空穴载流子的特性一致。</p><p><span style="color:red"><strong>图4.</strong><br>(a) SCO薄膜的温度依赖磁化强度。尽管P-SCO薄膜的磁化强度高于Mix-SCO薄膜，但两者的居里温度 (Tc) 均相同（约200 K）。这证实了Mix-SCO薄膜包含BM相和P相的混合物，这一点在XRD结果中已有体现。<br>(b) 在10 K时三种SCO薄膜的面内磁滞回线。需要注意的是，对于P-SCO样品，100 emu cm⁻³对应于0.62 μB/Co。<br>(c) 温度依赖电阻率数据，表明氧化过程中电阻率显著降低。<br>(d) 300 K下SCO薄膜的热电动势。正的热电动势值证实了SCO薄膜的p型导电特性。</span><br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/post/文献图片/翻译七/img55.jpg" style="width:400px;"/></div></div></p><p>综上所述，高质量的BM-SCO外延薄膜通过脉冲激光沉积法（PLE）在STO基底上成功生长(于狭窄的生长窗口内)。生长在晶格匹配STO上的BM-SCO单晶薄膜清晰地展示了交替的八面体和四面体层结构。我们还发现，在高氧压（&gt;300 Torr O$2$）下进行的原位后退火处理表现出从棕色钙钛矿SrCoO${2.5}$到钙钛矿SrCoO$_{3-\delta}$（$\delta &gt; 0.12$）的明显相变。在100 &lt; P(O$_2$) ≤ 300 Torr范围内的退火条件下，还观察到了混合价态。总体而言，氧空位通道的填充（即相变）显著改变了包括电子传输、磁基态和电子结构在内的物理性质。因此，基于我们对成功外延合成和拓扑相控制的展示，进一步研究具有显著不同氧浓度和Co价态的两种拓扑相薄膜在电化学或表面催化效应方面的潜力，可能为开发高性能钙钛矿基氧化物离子器件提供新的机会。</p><h2 id="实验部分"><a href="#实验部分" class="headerlink" title="实验部分"></a>实验部分</h2><p>SrCoOₓ（SCO）薄膜通过脉冲激光沉积法（PLE，KrF激光器，波长 λ = 248 nm）在SrTiO₃（STO）基底上生长。为实现TiO₂终止表面，对基底进行了刻蚀和热处理。BM-SCO薄膜的生长条件为温度650–800°C，氧气压力为0.1–500 mTorr。激光能量密度和重复频率分别固定为1.7 J/cm²和5 Hz。对于原位氧后退火处理，生长后的BM-SCO薄膜被冷却至600°C，并在不同氧压下退火5分钟。  薄膜的结构通过高分辨率四轴X射线衍射仪（X’Pert, Panalytical Inc.）进行表征。SCO中价态的详细信息通过位于阿贡国家实验室先进光子源4-ID-C光束线的X射线吸收光谱（XAS）进行表征，使用了表面敏感的电子产额模式和体敏感的荧光产额模式。  磁性测量采用7 T超导量子干涉器（SQUID，Quantum Design）完成。温度相关的直流传输测量由14 T物性测量系统（Quantum Design）完成。热电势的测量采用传统的稳态方法，利用两个放置在薄膜下方的佩尔帖器件产生温差（ΔT ≈ 10 K）。</p>]]></content>
      
      
      <categories>
          
          <category> 文献翻译 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文献翻译(六)</title>
      <link href="/2024/12/06/%E6%96%87%E7%8C%AE%E7%BF%BB%E8%AF%91-%E5%85%AD/"/>
      <url>/2024/12/06/%E6%96%87%E7%8C%AE%E7%BF%BB%E8%AF%91-%E5%85%AD/</url>
      
        <content type="html"><![CDATA[<p><h1 align="center"><strong><b>外延 SrCoOₓ 薄膜在拓扑相变附近的结构演化(Structural evolution of epitaxial SrCoOₓ films near topotactic phase transition)</b></strong></h1><br><!-- 修复以下内容，不要用\(\)的方式表示符号，而采用普通的方法表示，例如SrCoO\(_x\)写为SrCoOₓ，\(400^\circ \mathrm{C}\)写为400°C使用<span style="color:red"> </span>的方式使这段文字显示红色 --></p><h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>通过拓扑相变调控复杂氧化物中的氧化学计量比，不仅是改变物理性质的有趣途径，还在许多能源技术（如能源存储和催化剂）中具有广泛应用。然而，目前针对多价氧化物中接近拓扑相变的详细结构演化的研究相对较少。在本研究中，我们以脉冲激光外延（PLE）生长的钴酸锶（SrCoOₓ）作为模型体系，研究氧化驱动的结构、电子和磁性性质的演变。我们制备了具有共格应变的 SrCoO₂.₅ 薄膜，并通过不同温度的后退火处理实现了向钙钛矿相（SrCoO₃₋δ）的拓扑相变。研究清晰地显示，在棕色钙钛矿相向钙钛矿相的拓扑相变临界温度附近，电子输运、磁性和微观结构发生了显著变化。然而，整体晶体质量保持良好，未出现明显的结构退化。这表明，通过氧化还原反应反复实现物理性质调控的拓扑相变控制，是一种非常有前景的工具。</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>外延氧“海绵”材料作为一类新兴材料重新受到关注，因为它们能够在低至 200°C 的温度下快速实现晶体结构的转变。这种结构转变伴随着晶体对称性和化学成分的变化，表现为组成元素的得失。由于其晶体结构和化学计量比的可逆性，能够经历拓扑相变的复杂氧化物被认为是用于电池和固体氧化物燃料电池的潜在能源材料。除了氧化学计量比驱动的结构转变外，这类拓扑氧化还原反应还会改变过渡金属的氧化态，从而调控包括磁性和电子基态在内的物理性质。因此，拓扑氧化物在传感器和开关领域也显示出应用潜力，因为氧化学计量比的变化可显著改变其电子导电性。此外，通过可逆的拓扑还原或氧化反应，这类材料的基态可以恢复至初始状态。</p><p>为了利用具有多功能性的氧“海绵”材料，深入理解其在拓扑相变过程中的结构与物理性质的演变至关重要。作为这类研究的一部分，已有学者通过原位衍射和热重分析研究揭示了平均结构与质量的变化。这些原位探测手段提供了关于长程有序性和相变温度的信息。然而，目前关于结构与离子/电子导电性在拓扑相变中的关联的理解仍然有限。由于拓扑相变通过组成元素的移除发生，研究在相变每个阶段中电子和磁性性质以及晶体结构的变化，可以为理解原子级氧化过程提供重要信息。在这方面，外延氧“海绵”材料 SrCoOₓ（SCO, 2.5 ≤ x ≤ 3.0）被认为是一个有前景的研究体系，因为其具有低温氧化还原特性，并展现了结构、输运和磁性之间的耦合行为，这在最近的研究中已被报道。</p><p>在本研究中，我们通过脉冲激光外延（PLE）制备了 SrCoO₂.₅ 薄膜，并在不破坏真空的情况下进行氧化条件下的后退火，以捕捉不同温度下 SrCoO₂.₅ 的各个状态。对制备的薄膜进行的 X 射线衍射、输运和磁化测量表明，在接近拓扑相变温度时，薄膜的结构发生了显著变化，并伴随着电阻率的显著改变。</p><p>为了系统研究温度依赖的拓扑氧化过程，我们通过脉冲激光外延（PLE）在 (001) 面的 (LaAlO₃)₀.₃(SrAl₀.₅Ta₀.₅O₃)₀.₇ (LSAT) 基底上生长了 30 nm 厚的棕色钙钛矿 SrCoO₂.₅ (BM-SCO) 外延薄膜。选择 LSAT（晶格常数 a = 3.868 Å）作为基底，是因为其晶格常数位于高度氧化的钙钛矿 SrCoO₃ (P-SCO, a = 3.8289 Å) 和 BM-SCO (a = 3.905 Å, c = 3.936 Å，伪四方标记) 之间，可有效避免拓扑相变前后出现过大的晶格失配。这种晶格失配导致完全氧化的 P-SCO 中产生 1% 的拉伸应变，而在 BM-SCO 相中则形成 -0.95% 的压缩应变。 我们使用了相同的生长参数（可参考其他文献），薄膜厚度保持在 30 nm。此外，需要特别指出的是，这种厚度的薄膜能够在 LSAT 基底上维持完全应变状态，而不像其他基底（如 LaAlO₃、SrTiO₃ 和 GdScO₃）中会出现应变松弛，导致完全拓扑相变变得困难。</p><p>在确认 BM-SCO 薄膜的外延生长及其应变状态后，我们在相同的生长条件下制备了 BM-SCO 薄膜，并在不破坏真空的情况下进行后氧化处理，以避免表面污染。这种措施对于实现较低的氧化温度显得尤为重要。不同于我们之前通过调节氧分压（P(O₂)）进行氧化的方法，这次我们在固定的氧分压（约 500 Torr）下，对冷却后的 BM-SCO 薄膜进行了不同温度的退火处理。为了保持一致性并尽量减少其他可能影响退火过程的因素（如向腔室引入氧气所需的时间），我们将生长完成的 BM-SCO 样品冷却至 50°C 以下后，引入 500 Torr 的纯氧（O₂）。随后，以每分钟 10°C 的升温速率将温度升至目标退火温度。在每个退火温度下保持 5 分钟，然后在相同的氧气压力下将薄膜样品冷却至室温。 此外，为了确保氧能够扩散穿透整个薄膜，我们将退火时间固定为 5 分钟，并将薄膜厚度保持在 30 nm，这一时间和厚度已通过优化实验确定为足够。为了确定从棕色钙钛矿结构到钙钛矿结构的拓扑氧化临界温度，我们使用了多种表征方法，包括 X 射线衍射（XRD）、基于 Quantum Design 14T PPMS 的温度依赖性直流输运测量，以及基于 Quantum Design 7T 超导量子干涉器件（SQUID）的磁化测量。XRD 的 θ-2θ 扫描用于检查外延性、相纯度以及取向，同时测量了 BM-SCO 的 008 反射和 P-SCO 的 002 反射的 XRD 摆动曲线，以分析晶体质量和拓扑转变过程中的结构演变。电子输运测量采用范德堡（Van der Pauw）几何结构完成，测量电流则通过室温下的 I-V 曲线测试确定。</p><p>图 1 展示了在不同退火温度（Ta）下后退火处理的 SrCoOₓ（SCO）薄膜的 XRD θ-2θ 扫描结果。我们发现，在 50°C 退火的样品与生长完成的 c 轴取向 BM-SCO 薄膜结构基本一致，且所有衍射峰都非常尖锐。此外，除 00l 衍射峰外未检测到其他衍射峰。值得注意的是，c 轴方向的晶格常数为 3.963 Å，比体相 BM-SCO（伪四方标记下 c = 3.936 Å）膨胀了 0.7%。这种膨胀由基底引起的压缩应变导致。根据晶格失配计算，预期的双轴应变为 0.95%。这一结果表明薄膜保持了完全(连贯)应变状态，而 XRD 倒易空间映射（RSM，数据未展示）进一步清晰地确认了这一点。此外，通过摇摆曲线扫描获得的半高宽 (Δω) 值约为 0.05°，与任何生长完成的 BM-SCO 薄膜的数值相当。这一结果表明，50°C 的退火温度不足以引起结构变化。 以 50°C 作为 BM-SCO 薄膜的基准温度后，我们在不同温度下进行了后退火实验，并检查了因氧掺入导致的结构演变的转变温度。图 1 显示了在 50 至 400°C 不同温度退火后的 XRD θ-2θ 衍射图。我们观察到，退火温度高达 175°C 的样品保持了 BM-SCO 相，其特征性半阶衍射峰来源于八面体和四面体层交替堆叠的结构。而在 200°C 以上退火的样品中，清晰地出现了钙钛矿相的特征，表明由于氧化作用发生了拓扑相变。<br>由于退火温度较低，我们未观察到任何杂相或中间相（例如 Co-O 和 Sr₆Co₅O₁₅）。这一结果表明氧化确实是拓扑性的，因此较大的元素（如 Sr 和 Co）未受影响，而氧原子则较为自由地迁移。值得注意的是，即使发生了这种拓扑相变，薄膜的应变状态仍得以保持，这也得到了 RSM 的确认。此外，与 BM-SCO 相比，P-SCO 薄膜的 c 轴晶格常数因氧化作用显著减少了约 4%，这一现象表明氧空位对晶格膨胀起到了重要作用。</p><p>为了评估氧化过程对结晶度的影响，我们对每个退火样品的 X 射线摇摆曲线进行了测量【19】。图 2 展示了图 1 中样品的 008 棕褐铁矿（brownmillerite）衍射峰和 002 钙钛矿（perovskite）衍射峰的全宽半高（FWHM）值。对于低温退火（Ta ≤ 100°C）的棕褐铁矿薄膜，FWHM 值的变化可以忽略不计。然而，在 150°C 和 175°C 退火的薄膜中，FWHM 值显著增加，即镶嵌性（mosaicity）增强，这表明 BM-SCO 薄膜的微观结构处于拓扑相变的边缘。这种变化是由于 BM-SCO 中的氧空位通道被氧原子填充所导致。  这一拓扑过程在微观层面上引发了结构的不稳定性，改变了键长和键角。值得注意的是，我们未在这些样品中观察到任何混合相。</p><p><span style="color:red"><strong>图 1.</strong> 在 (001) LSAT 衬底上 SrCoOₓ 薄膜的 XRD θ-2θ 扫描结果。薄膜在最高 400°C 的温度下进行后退火，以观察从棕褐铁矿 SrCoO₂.₅ 到钙钛矿 SrCoO₃₋δ 的拓扑相变。钙钛矿相在 200°C 或更高温度下形成。</span><br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/post/文献图片/翻译六/img397.jpg" style="width:400px;"/></div></div></p><p><span style="color:red"><strong>图 2.</strong> 通过 XRD 摇摆曲线扫描得到的 FWHM 值，分别使用 008 反射对棕褐铁矿薄膜和 002 反射对钙钛矿薄膜进行测量(使用 008 衍射峰分析褐铁矿薄膜，002 衍射峰分析钙钛矿薄膜)。在拓扑转化临界点（约 175°C）从 BM-SCO 到 P-SCO 的过程中，FWHM 值明显增加。插图显示了在 200°C 下退火的 P-SCO 薄膜的摇摆曲线。</span><br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/post/文献图片/翻译六/img414.jpg" style="width:400px;"/></div></div></p><p>然而，对于在 175°C 以上退火的薄膜，我们清楚地观察到了 P-SCO 相的形成，同时其结晶度显著提高，这通过摇摆曲线扫描中减小的 FWHM 值得到了验证。这一结果表明，BM-SCO 的氧化引起的无序现象与棕褐铁矿结构中键角和键长的变化导致的结构重排密切相关。  当拓扑氧化在低至 200°C 时完成时，处于拓扑相变边缘的不稳定结构变得稳定。此外，XRD 扫描所揭示的这种低温转变表明氧化过程的能垒相当低。</p><p>为了阐明结构转变与电子结构演化之间的关系，我们进行了直流传输测量。如图 3 所示，退火温度高于 200°C 的样品一致表现出金属行为。这些退火于 200°C 以上的薄膜的传输数据为钙钛矿相的稳定化提供了明确证据，这与 XRD 结果一致。而退火于 150 和 175°C 的薄膜仍表现为绝缘行为，但其电阻率相较于原始棕褐铁矿薄膜显著降低。该结果表明，随着 BM-SCO 中氧含量的增加导致钴离子的价态从 Co³⁺ 转变为 Co⁴⁺，氧化物化学计量比可能发生了变化。  由于热电测量显示 SCO 是一种 p 型导体【1】，氧的嵌入可以增加导电电荷的数量。此外，为了研究热诱导激活能（Ea）在棕褐铁矿结构中的变化，我们计算了非金属样品的热激活能，其结果汇总于图 3 的插图中。生长在 LSAT 基底上的 BM-SCO 薄膜的 Ea 为 140 meV，这一值低于生长在 STO 基底上的 BM-SCO（190 meV）和块体 BM-SCO（240 meV）【14,20】。我们将较低的激活能归因于 BM-SCO/LSAT 中由双轴压应变引起的平面内跳跃距离的减少，特别是在过渡金属氧化物中，晶体结构与电子特性密切相关【10,21,22】。   此外，图 3 的插图清楚显示，随着局部氧化过程达到绝缘体-金属转变，Ea 显著降低。这种急剧的激活能下降表明，退火于 175°C 的样品可能在技术应用中具有潜力，例如固体氧化物燃料电池和催化剂，因为亚稳态(易变的)氧化物化学计量比在这些应用中起关键作用。  根据 XRD 和传输数据，我们估计该样品的氧浓度（SrCoOₓ）约为 x ∼ 2.75 或略低于此值。在这种化学计量比下，磁性和电子基态已知会显著变化【14,23】。</p><p>我们进一步研究了薄膜的磁性，以观察拓扑氧化过程中磁性转变的特性。与 XRD 结果类似，当宏观晶体结构从棕褐铁矿转变为钙钛矿时，我们观察到了明显的磁性基态变化。需要注意的是，在退火于 150 和 175°C 的薄膜中，并未发现因局部氧化引起的低温铁磁性迹象。如图 3 和图 4 所示，对退火于 200°C 以上的 P-SCO 薄膜的电子传输测量显示出了明显的金属特性和铁磁性。尽管与臭氧生长的 P-SCO 薄膜相比，拓扑氧化的薄膜的磁性临界温度有所降低【1】，但拓扑氧化的 P-SCO 在约 220 K 以下表现为明显的铁磁金属。 最后，我们注意到在 400°C 退火的 P-SCO 薄膜中，电阻率略有上升（见图 3）。这可能归因于随着热跳变增加，晶格氧克服背景氧压而逸出，导致氧化程度降低。正如图 4 所示，退火温度为 400°C 的样品表现出磁化强度的降低。这一结果表明，退火温度为 400°C 的薄膜可能由于局部氧空位的形成，其氧浓度低于 x = 2.90。(这一现象可能归因于热激发增强氧原子迁移能力，导致在高温下克服背景氧压从而形成局部氧空位，产生一个氧含量低于 x = 2.90 的状态。这一点也可以从 400°C 退火样品中观察到的磁化强度降低（见图 4）得到支持。)</p><p><span style="color:red"><strong>图 3.</strong> 不同退火温度下 SCO 薄膜的温度依赖电阻率数据。退火温度低于 150°C 的样品表现出明显的绝缘行为，表明氧插层受限。而退火温度为 200°C 或更高的样品则显示出明显的金属基态。有趣的是，尽管该样品的结晶性是所有样品中最差的，但在 175°C 退火的样品中仍然观察到不同程度的半导体行为，这是由于部分氧插层。插图显示了绝缘薄膜的热激活能（E<sub>a</sub>）。作为拓扑氧插层的结果，E<sub>a</sub> 观察到明显下降。需要注意的是，退火温度为 300°C 的 SCO 薄膜的电阻率数据来自于文献 [1]。</span><br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/post/文献图片/翻译六/img441.jpg" style="width:400px;"/></div></div></p><p><span style="color:red"><strong>图 4.</strong> SCO 薄膜在不同退火温度下(50, 175, 200, 300, 400°C)的磁性表征：<br>(a) 0.1 T 下的磁化强度与温度的关系；<br>(b) 10 K 下的磁化滞回曲线。<br>退火温度为 400°C 的薄膜相较于 200°C 和 300°C 退火的样品显示出较低的磁化强度和较高的电阻率，这反映出由于氧的热跳跃增加而导致氧浓度的降低。</span><br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/post/文献图片/翻译六/img434.jpg" style="width:400px;"/></div></div></p><p>结论：通过研究外延 SrCoOₓ（氧海绵）薄膜的结构及相关传输特性，我们清晰地观察到在拓扑相变温度（约 175°C）附近结构无序的增强。在该温度附近，氧插层显著降低了样品的热激活能，但薄膜仍表现为绝缘体且无铁磁性。相变温度以上，薄膜清晰地转变为钙钛矿相，并恢复了与原始外延棕褐铁矿薄膜相当的高结晶性。 这些结果表明，通过调控氧化物化学计量比实现的拓扑相控制，不仅能够制备高质量的晶体，还可以在无需化学掺杂重元素的情况下调控其物理特性。此外，由于即使在结构相变后薄膜仍保持良好的结晶性，氧海绵的相状态可以反复转换，这对于开发新型电化学器件（如固体氧化物燃料电池和可充电电池）具有重要的应用价值。</p>]]></content>
      
      
      <categories>
          
          <category> 文献翻译 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2dfan自动签到</title>
      <link href="/2024/12/05/2dfan%E8%87%AA%E5%8A%A8%E7%AD%BE%E5%88%B0/"/>
      <url>/2024/12/05/2dfan%E8%87%AA%E5%8A%A8%E7%AD%BE%E5%88%B0/</url>
      
        <content type="html"><![CDATA[<div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>编辑记录</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2024-12-05 18:11:45 第一次编辑</p></div></div><div class='timeline-item-content'><p>正文。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2024-12-06 15:51:45 第二次编辑</p></div></div><div class='timeline-item-content'><p>完善主代码，设置无痕模式(防止保存密码窗口弹出)，并改进登录机制(报错尝试重新登录)。</p></div></div></div><h2 id="开发历程"><a href="#开发历程" class="headerlink" title="开发历程"></a>开发历程</h2><p>&emsp;&emsp;一开始使用selenium进行网页自动化任务，但后面发现会被cloudflare检测到，导致验证失败，而且该方法还需要下载对应的chromedriver，麻烦且不适用。<br>&emsp;&emsp;但后面打算放弃时，逛github项目无意中发现一个好用的网页自动化的库DrissonPage，比selenium简单且功能强大，尝试性地去进行cloudflare验证后，发现居然可以验证通过。于是后续用此库进行开发。</p><h3 id="点击验证框"><a href="#点击验证框" class="headerlink" title="点击验证框"></a>点击验证框</h3><p>&emsp;&emsp;作为最关键的一步，因为cloudflare里的元素无法通过普通的网页定位获得，所有难以点击。最简单的就是通过其在屏幕坐标的形式点击，但受限很大。通过AI在github找到一个项目，是用opencv模板匹配做的，我居然忘了还有这个。运行后发现，确实能获取到checkbox的位置并点击。只需要提供一张模板图片和网页截图，再根据情况修改下点击的位置通过验证了。主要代码如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;Hansimov/captcha-bypass&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> pyautogui</span><br><span class="line"><span class="keyword">from</span> mss <span class="keyword">import</span> mss</span><br><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> ImageGrab</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ImageMatcher</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, source_image_path, template_image_path</span>):</span><br><span class="line">        <span class="variable language_">self</span>.source_image = cv2.imread(<span class="built_in">str</span>(source_image_path))</span><br><span class="line">        <span class="variable language_">self</span>.template_image = cv2.imread(<span class="built_in">str</span>(template_image_path))</span><br><span class="line">        <span class="variable language_">self</span>.detected_image_path = source_image_path.parent / <span class="string">&quot;screenshot_detected.png&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">match</span>(<span class="params">self</span>):</span><br><span class="line">        res = cv2.matchTemplate(</span><br><span class="line">            <span class="variable language_">self</span>.source_image, <span class="variable language_">self</span>.template_image, cv2.TM_CCOEFF_NORMED</span><br><span class="line">        )</span><br><span class="line">        _, _, _, match_location = cv2.minMaxLoc(res)</span><br><span class="line">        match_left = match_location[<span class="number">0</span>]</span><br><span class="line">        match_top = match_location[<span class="number">1</span>]</span><br><span class="line">        match_right = match_location[<span class="number">0</span>] + <span class="variable language_">self</span>.template_image.shape[<span class="number">1</span>]</span><br><span class="line">        match_bottom = match_location[<span class="number">1</span>] + <span class="variable language_">self</span>.template_image.shape[<span class="number">0</span>]</span><br><span class="line">        match_region = (match_left, match_top, match_right, match_bottom)</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">self</span>.match_region = match_region</span><br><span class="line">        <span class="keyword">return</span> match_region</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">draw_rectangle</span>(<span class="params">self</span>):</span><br><span class="line">        cv2.rectangle(</span><br><span class="line">            img=<span class="variable language_">self</span>.source_image,</span><br><span class="line">            pt1=<span class="variable language_">self</span>.match_region[:<span class="number">2</span>],</span><br><span class="line">            pt2=<span class="variable language_">self</span>.match_region[<span class="number">2</span>:],</span><br><span class="line">            color=(<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>),</span><br><span class="line">            thickness=<span class="number">2</span>,</span><br><span class="line">        )</span><br><span class="line">        cv2.imwrite(<span class="built_in">str</span>(<span class="variable language_">self</span>.detected_image_path), <span class="variable language_">self</span>.source_image)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CaptchaBypasser</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.captcha_image_path = (</span><br><span class="line">            Path(__file__).parent / <span class="string">&quot;captcha-verify-you-are-human-eg.png&quot;</span>  <span class="comment"># 自动部署图片加eg，本地不加</span></span><br><span class="line">        )</span><br><span class="line">        <span class="variable language_">self</span>.screen_shot_image_path = Path(__file__).parent / <span class="string">&quot;screenshot.png&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_screen_shots</span>(<span class="params">self</span>):</span><br><span class="line">        ImageGrab.grab(all_screens=<span class="literal">True</span>).save(<span class="variable language_">self</span>.screen_shot_image_path)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_captcha_location</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">with</span> mss() <span class="keyword">as</span> sct:</span><br><span class="line">            all_monitor = sct.monitors[<span class="number">0</span>]</span><br><span class="line">            monitor_left_offset = all_monitor[<span class="string">&quot;left&quot;</span>]</span><br><span class="line">            monitor_top_offset = all_monitor[<span class="string">&quot;top&quot;</span>]</span><br><span class="line"></span><br><span class="line">        image_matcher = ImageMatcher(</span><br><span class="line">            source_image_path=<span class="variable language_">self</span>.screen_shot_image_path,</span><br><span class="line">            template_image_path=<span class="variable language_">self</span>.captcha_image_path,</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        match_region = image_matcher.<span class="keyword">match</span>()</span><br><span class="line">        image_matcher.draw_rectangle()</span><br><span class="line">        match_region_in_monitor = (</span><br><span class="line">            match_region[<span class="number">0</span>] + monitor_left_offset,</span><br><span class="line">            match_region[<span class="number">1</span>] + monitor_top_offset,</span><br><span class="line">            match_region[<span class="number">2</span>] + monitor_left_offset,</span><br><span class="line">            match_region[<span class="number">3</span>] + monitor_top_offset,</span><br><span class="line">        )</span><br><span class="line">        checkbox_center = (</span><br><span class="line">            <span class="built_in">int</span>(match_region_in_monitor[<span class="number">0</span>] + <span class="number">40</span>), <span class="comment">#本地60 自动部署40</span></span><br><span class="line">            <span class="built_in">int</span>((match_region_in_monitor[<span class="number">1</span>] + match_region_in_monitor[<span class="number">3</span>]) / <span class="number">2</span>),</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 该处画点并保存图片</span></span><br><span class="line">        cv2.circle(</span><br><span class="line">            img=image_matcher.source_image,</span><br><span class="line">            center=checkbox_center,</span><br><span class="line">            radius=<span class="number">2</span>,</span><br><span class="line">            color=(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>),</span><br><span class="line">            thickness=-<span class="number">1</span>,</span><br><span class="line">        )</span><br><span class="line">        cv2.imwrite(<span class="built_in">str</span>(image_matcher.detected_image_path), image_matcher.source_image)</span><br><span class="line">        <span class="keyword">return</span> checkbox_center</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">click_target_checkbox</span>(<span class="params">self</span>):</span><br><span class="line">        captcha_checkbox_center = <span class="variable language_">self</span>.get_captcha_location()</span><br><span class="line">        pyautogui.moveTo(*captcha_checkbox_center)</span><br><span class="line">        pyautogui.click()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.get_screen_shots()</span><br><span class="line">        <span class="variable language_">self</span>.get_captcha_location()</span><br><span class="line">        <span class="variable language_">self</span>.click_target_checkbox()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    captcha_bypasser = CaptchaBypasser()</span><br><span class="line">    captcha_bypasser.run()</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><br>&emsp;&emsp;在本地运行时，使用显示中文的模板图片，自动部署时则使用英文的模板图片，另外本地的间距是60，自动部署的间距是40。<br>&emsp;&emsp;在主代码中，只需要引入该代码，运行：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">captcha_bypasser = CaptchaBypasser()</span><br><span class="line">captcha_bypasser.run()</span><br></pre></td></tr></table></figure><br>就能实现点击checkbox通过验证。</p><h3 id="自动部署"><a href="#自动部署" class="headerlink" title="自动部署"></a>自动部署</h3><p>&emsp;&emsp;还是在github actions中实现，借助gpt得到了代码并修改完整吧。在<code>.github\workflows</code>里创建yml文件。主要代码为：<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">2dfan</span> <span class="string">Task</span> <span class="string">Runner</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">main</span></span><br><span class="line">  <span class="attr">schedule:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">cron:</span> <span class="string">&#x27;0 19 * * *&#x27;</span>  <span class="comment"># UTC时间19点对应北京时间3点.</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">cron:</span> <span class="string">&#x27;0 22 * * *&#x27;</span>  <span class="comment"># UTC时间22点对应北京时间6点.</span></span><br><span class="line">  <span class="attr">workflow_dispatch:</span> <span class="comment"># 手动触发</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">run-task:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span> <span class="string">code</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/checkout@v3</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Set</span> <span class="string">up</span> <span class="string">Python</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/setup-python@v4</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">python-version:</span> <span class="number">3.9</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">dependencies</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        sudo apt-get update</span></span><br><span class="line"><span class="string">        sudo apt-get install -y xvfb libx11-dev xauth fonts-noto-cjk  # 安装中文字体</span></span><br><span class="line"><span class="string">        python -m pip install --upgrade pip</span></span><br><span class="line"><span class="string">        pip install -r requirements.txt</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Start</span> <span class="string">Xvfb</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        nohup Xvfb :99 -screen 0 1280x1024x24 &amp;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Set</span> <span class="string">DISPLAY</span> <span class="string">and</span> <span class="string">XAUTHORITY</span> <span class="string">environment</span> <span class="string">variables</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        echo &quot;DISPLAY=:99&quot; &gt;&gt; $GITHUB_ENV</span></span><br><span class="line"><span class="string">        echo &quot;XAUTHORITY=/home/runner/.Xauthority&quot; &gt;&gt; $GITHUB_ENV</span></span><br><span class="line"><span class="string">        touch /home/runner/.Xauthority  # 创建一个空的 Xauthority 文件</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Run</span> <span class="string">Python</span> <span class="string">script</span></span><br><span class="line">      <span class="attr">env:</span></span><br><span class="line">        <span class="attr">USER_EMAIL:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.USER_EMAIL</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">USER_PASSWORD:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.USER_PASSWORD</span> <span class="string">&#125;&#125;</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        python 2dfan_DrissionPage.py</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Upload</span> <span class="string">screenshots</span> <span class="string">as</span> <span class="string">artifacts</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/upload-artifact@v3</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">screenshots</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          ./screenshot.png</span></span><br><span class="line"><span class="string">          ./screenshot_detected.png</span></span><br><span class="line"><span class="string">          ./pic1.png</span></span><br><span class="line"><span class="string">          ./pic2.png</span></span><br><span class="line"><span class="string">          ./pic3.png</span></span><br><span class="line"><span class="string">          ./pic4.png</span></span><br></pre></td></tr></table></figure><br>&emsp;&emsp;自动部署遇到的难点之一是自动化需要一个屏幕，所有这里使用了虚拟屏幕Xvfb，在安装依赖性里，安装了虚拟屏幕以及中文字体（使网页中文能正常显示），以及需要使用到的包（包含在requirements.txt里）。后面就是虚拟屏幕的一些关键配置保证屏幕能正常运行。接下来就是运行python代码，这里先添加了github actions的secrets，分别是2dfan网站的邮箱和密码用于登录。最后一步就是用于调试，由于看不到屏幕情况，在代码中添加截图代码，再在自动部署代码中获取这些图片，这些图片会下载到<code>screenshots.zip</code>中，这里图片保存在代码同一目录，所以路径为<code>./xxx.png</code>。  触发方式为推送代码、定时、手动。<br>&emsp;&emsp;补充：后续需要批量删除过多的workflow时，可以使用命令行，步骤为：</p><ol><li>安装 <code>GitHub CLI</code></li><li>cmd终端运行 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gh auth login</span><br></pre></td></tr></table></figure> 按提示登录，并确保选择正确的权限。</li><li>验证登录成功 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gh auth status</span><br></pre></td></tr></table></figure></li><li>执行命令批量删除，这里是在git bash里执行，因为cmd不支持xargs <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gh api repos/USER/REPO/actions/runs --paginate | \</span><br><span class="line">jq -r <span class="string">&#x27;.workflow_runs[].id&#x27;</span> | \</span><br><span class="line"><span class="built_in">tr</span> -d <span class="string">&#x27;\r&#x27;</span> | \</span><br><span class="line">xargs -I &#123;&#125; gh api -X DELETE repos/USER/REPO/actions/runs/&#123;&#125;</span><br></pre></td></tr></table></figure> 其中的<code>USER</code>是github用户名，<code>REPO</code>是要进行操作的仓库名(注意有两处修改)，执行命令后会批量删除该仓库下actions的所有workflow。<br> 单个的删除命令为： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gh api -X DELETE repos/USER/REPO/actions/runs/123456789</span><br></pre></td></tr></table></figure> 最后的数字为Workflow Run ID。</li></ol><h3 id="主代码"><a href="#主代码" class="headerlink" title="主代码"></a>主代码</h3><p>&emsp;&emsp;其实难点就在于那个cloudflare的元素获取吧，普通的方式难以获取，受<code>https://github.com/sarperavci/CloudflareBypassForScraping.git</code>启发，找到了定位的思路。完成全部代码并由gpt优化结构和命名等，代码为：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time, os</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">from</span> DrissionPage <span class="keyword">import</span> ChromiumPage</span><br><span class="line"><span class="keyword">from</span> bypass_captcha <span class="keyword">import</span> CaptchaBypasser</span><br><span class="line"><span class="keyword">from</span> DrissionPage <span class="keyword">import</span> ChromiumOptions</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置日志记录</span></span><br><span class="line">logging.basicConfig(level=logging.DEBUG, <span class="built_in">format</span>=<span class="string">&#x27;%(asctime)s - %(levelname)s - %(message)s&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 全局变量</span></span><br><span class="line">LOGIN_URL = <span class="string">&quot;https://2dfan.com/users/421136/recheckin&quot;</span></span><br><span class="line">MAX_RETRIES = <span class="number">3</span>     <span class="comment"># 最大重试次数</span></span><br><span class="line">MAX_LOGIN_ATTEMPTS = <span class="number">3</span>  <span class="comment"># 最大重新登录次数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">locate_button</span>(<span class="params">ele, tag=<span class="string">&quot;tag:svg&quot;</span>, retries=MAX_RETRIES</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    尝试定位按钮，最多尝试 `retries` 次。</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> attempt <span class="keyword">in</span> <span class="built_in">range</span>(retries):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            button = ele.parent().shadow_root.child()(<span class="string">f&quot;tag:body&quot;</span>).shadow_root(tag)</span><br><span class="line">            <span class="keyword">if</span> button:</span><br><span class="line">                logging.info(<span class="string">f&quot;按钮定位成功 (尝试次数: <span class="subst">&#123;attempt + <span class="number">1</span>&#125;</span>)&quot;</span>)</span><br><span class="line">                <span class="keyword">return</span> button</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                logging.warning(<span class="string">f&quot;按钮为空，重新尝试定位 (尝试次数: <span class="subst">&#123;attempt + <span class="number">1</span>&#125;</span>)&quot;</span>)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            logging.error(<span class="string">f&quot;定位按钮时出错: <span class="subst">&#123;e&#125;</span> (尝试次数: <span class="subst">&#123;attempt + <span class="number">1</span>&#125;</span>)&quot;</span>)</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">raise</span> RuntimeError(<span class="string">&quot;按钮定位失败，已达到最大重试次数&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">process_captcha</span>(<span class="params">tab, eles, tag=<span class="string">&quot;tag:circle&quot;</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    定位验证码中相关元素并返回该元素。</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> ele <span class="keyword">in</span> eles:</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;name&quot;</span> <span class="keyword">in</span> ele.attrs <span class="keyword">and</span> <span class="string">&quot;type&quot;</span> <span class="keyword">in</span> ele.attrs:</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;turnstile&quot;</span> <span class="keyword">in</span> ele.attrs[<span class="string">&quot;name&quot;</span>] <span class="keyword">and</span> ele.attrs[<span class="string">&quot;type&quot;</span>] == <span class="string">&quot;hidden&quot;</span>:</span><br><span class="line">                button = locate_button(ele, tag=tag)</span><br><span class="line">                logging.info(<span class="string">f&quot;验证相关按钮：<span class="subst">&#123;button&#125;</span>&quot;</span>)</span><br><span class="line">                tab.wait(<span class="number">1</span>)</span><br><span class="line">                <span class="keyword">return</span> button</span><br><span class="line">    <span class="keyword">raise</span> RuntimeError(<span class="string">&quot;未找到验证码相关按钮&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login_process</span>(<span class="params">tab</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    执行登录的输入账号、密码和验证码绕过的流程。</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 输入账号</span></span><br><span class="line">    user_email = os.getenv(<span class="string">&quot;USER_EMAIL&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> user_email:</span><br><span class="line">        <span class="keyword">raise</span> ValueError(<span class="string">&quot;环境变量 USER_EMAIL 未设置&quot;</span>)</span><br><span class="line">    logging.info(<span class="string">f&quot;输入账号: <span class="subst">&#123;user_email&#125;</span>&quot;</span>)</span><br><span class="line">    tab.ele(<span class="string">&#x27;@name=login&#x27;</span>).<span class="built_in">input</span>(user_email)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 输入密码</span></span><br><span class="line">    user_password = os.getenv(<span class="string">&quot;USER_PASSWORD&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> user_password:</span><br><span class="line">        <span class="keyword">raise</span> ValueError(<span class="string">&quot;环境变量 USER_PASSWORD 未设置&quot;</span>)</span><br><span class="line">    logging.info(<span class="string">&quot;输入密码&quot;</span>)</span><br><span class="line">    tab.ele(<span class="string">&#x27;@name=password&#x27;</span>).<span class="built_in">input</span>(user_password)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 验证验证码</span></span><br><span class="line">    tab.wait.eles_loaded(<span class="string">&quot;tag:input&quot;</span>)</span><br><span class="line">    eles = tab.eles(<span class="string">&quot;tag:input&quot;</span>)</span><br><span class="line">    button = process_captcha(tab, eles, tag=<span class="string">&quot;tag:svg&quot;</span>)</span><br><span class="line">    tab.wait.ele_hidden(button)</span><br><span class="line">    logging.info(<span class="string">&quot;开始验证&quot;</span>)</span><br><span class="line">    tab.wait(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 初始化验证码绕过程序</span></span><br><span class="line">    logging.info(<span class="string">&quot;初始化验证码绕过程序...&quot;</span>)</span><br><span class="line">    captcha_bypasser = CaptchaBypasser()</span><br><span class="line">    logging.info(<span class="string">&quot;运行验证码绕过程序...&quot;</span>)</span><br><span class="line">    captcha_bypasser.run()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 检验是否成功</span></span><br><span class="line">    button = process_captcha(tab, eles, tag=<span class="string">&quot;tag:circle&quot;</span>)</span><br><span class="line">    tab.wait.ele_displayed(button)</span><br><span class="line">    logging.info(<span class="string">&quot;验证成功&quot;</span>)</span><br><span class="line">    tab.wait(<span class="number">2</span>)</span><br><span class="line">    tab.get_screenshot(name=<span class="string">&#x27;pic1.png&#x27;</span>, full_page=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 点击登录按钮</span></span><br><span class="line">    logging.info(<span class="string">&quot;查找并点击登录按钮...&quot;</span>)</span><br><span class="line">    login_button = tab.ele(<span class="string">&#x27;@type=submit&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> login_button:</span><br><span class="line">        login_button.click()</span><br><span class="line">        logging.info(<span class="string">&quot;登录按钮已点击&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">raise</span> RuntimeError(<span class="string">&quot;未找到登录按钮&quot;</span>)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 启动浏览器</span></span><br><span class="line">        logging.info(<span class="string">&quot;启动浏览器...&quot;</span>)</span><br><span class="line">        co = ChromiumOptions()</span><br><span class="line">        <span class="comment"># 禁止所有弹出窗口</span></span><br><span class="line">        <span class="comment"># co.set_pref(arg=&#x27;profile.default_content_settings.popups&#x27;, value=&#x27;0&#x27;)</span></span><br><span class="line">        <span class="comment"># # 隐藏是否保存密码的提示</span></span><br><span class="line">        <span class="comment"># co.set_pref(&#x27;credentials_enable_service&#x27;, False)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#设置无痕模式，防止弹出是否保存密码的提示.</span></span><br><span class="line">        co.incognito(<span class="literal">True</span>)</span><br><span class="line">        tab = ChromiumPage(co)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 跳转到登录页面</span></span><br><span class="line">        logging.info(<span class="string">&quot;跳转到登录页面...&quot;</span>)</span><br><span class="line">        tab.get(LOGIN_URL)</span><br><span class="line">        logging.info(<span class="string">&quot;已跳转到登录页面&quot;</span>)</span><br><span class="line"></span><br><span class="line">        login_attempts = <span class="number">0</span>  <span class="comment"># 登录尝试计数</span></span><br><span class="line">        <span class="keyword">while</span> login_attempts &lt; MAX_LOGIN_ATTEMPTS:</span><br><span class="line">            login_attempts += <span class="number">1</span></span><br><span class="line">            logging.info(<span class="string">f&quot;执行登录流程（尝试第 <span class="subst">&#123;login_attempts&#125;</span> 次）...&quot;</span>)</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 执行登录流程</span></span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                login_process(tab)</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 检查当前页面URL</span></span><br><span class="line">                tab.wait.new_tab()</span><br><span class="line">                current_url = tab.url</span><br><span class="line">                logging.info(<span class="string">f&quot;当前页面URL: <span class="subst">&#123;current_url&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> current_url == <span class="string">&quot;https://2dfan.com/users/sign_in&quot;</span>:</span><br><span class="line">                    logging.warning(<span class="string">&quot;仍处于登录页面，重新尝试登录...&quot;</span>)</span><br><span class="line">                    tab.refresh()</span><br><span class="line">                    tab.wait.doc_loaded()</span><br><span class="line">                    tab.get_screenshot(name=<span class="string">&#x27;pic_error.png&#x27;</span>, full_page=<span class="literal">True</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    logging.info(<span class="string">&quot;成功跳转到主页，继续后续操作...&quot;</span>)</span><br><span class="line">                    <span class="keyword">break</span>  <span class="comment"># 登录成功，退出循环</span></span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                logging.error(<span class="string">f&quot;登录尝试失败: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            logging.error(<span class="string">&quot;达到最大登录尝试次数，退出程序&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 等待页面加载</span></span><br><span class="line">        tab.wait.eles_loaded(<span class="string">&quot;tag:input&quot;</span>)</span><br><span class="line">        eles = tab.eles(<span class="string">&quot;tag:input&quot;</span>)</span><br><span class="line">        logging.info(<span class="string">&quot;登录成功&quot;</span>)</span><br><span class="line">        tab.get_screenshot(name=<span class="string">&#x27;pic2.png&#x27;</span>, full_page=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 检测签到状态</span></span><br><span class="line">        checkin_status = tab.ele(<span class="string">&#x27;text:今日已签到&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> checkin_status:</span><br><span class="line">            logging.info(<span class="string">&quot;今日已签到！&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            logging.info(<span class="string">&quot;未签到，尝试签到...&quot;</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 再次运行验证码绕过程序</span></span><br><span class="line">            logging.info(<span class="string">&quot;再次运行验证码绕过程序...&quot;</span>)</span><br><span class="line">            captcha_bypasser = CaptchaBypasser()</span><br><span class="line">            captcha_bypasser.run()</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 检验是否成功</span></span><br><span class="line">            button = process_captcha(tab, eles, tag=<span class="string">&quot;tag:circle&quot;</span>)</span><br><span class="line">            tab.wait.ele_displayed(button)</span><br><span class="line">            logging.info(<span class="string">&quot;验证成功&quot;</span>)</span><br><span class="line">            tab.wait(<span class="number">2</span>)</span><br><span class="line">            tab.get_screenshot(name=<span class="string">&#x27;pic3.png&#x27;</span>, full_page=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 点击签到按钮</span></span><br><span class="line">            logging.info(<span class="string">&quot;查找并点击签到按钮...&quot;</span>)</span><br><span class="line">            checkin_button = tab.ele(<span class="string">&#x27;@type=submit&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> checkin_button:</span><br><span class="line">                checkin_button.click()</span><br><span class="line">                logging.info(<span class="string">&quot;签到按钮已点击&quot;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">raise</span> RuntimeError(<span class="string">&quot;未找到签到按钮&quot;</span>)</span><br><span class="line"></span><br><span class="line">            tab.wait(<span class="number">5</span>)</span><br><span class="line">            tab.refresh()</span><br><span class="line">            tab.wait.doc_loaded()</span><br><span class="line">            tab.wait(<span class="number">3</span>)</span><br><span class="line">            logging.info(<span class="string">&quot;刷新页面成功&quot;</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 检测签到状态</span></span><br><span class="line">            checkin_status = tab.ele(<span class="string">&#x27;text:今日已签到&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> checkin_status:</span><br><span class="line">                logging.info(<span class="string">&quot;签到成功！&quot;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                logging.info(<span class="string">&quot;签到失败！&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        logging.error(<span class="string">f&quot;运行过程中发生错误: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="comment"># 确保浏览器关闭</span></span><br><span class="line">        logging.info(<span class="string">&quot;关闭浏览器...&quot;</span>)</span><br><span class="line">        tab.close()</span><br><span class="line">        logging.info(<span class="string">&quot;浏览器已关闭&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><br>&emsp;&emsp;主要解决不知道什么时候进行下一步的问题，通过sleep来延时和下一步的时间间隔，会使在自动部署下每次运行不稳定，难以确定合适的间隔。于是，通过cloudflare的加载变化来确定时间点。验证刚加载时会一直转圈，获取对应的元素”tag:svg”，当其变为隐藏时，开始验证，使用了<code>tab.wait.ele_hidden(button)</code>函数等待。点击验证后，获取元素”tag:circle”(就是成功的圈圈)，当其变为显示时，使用了<code>tab.wait.ele_displayed(button)</code>函数等待，表明验证成功，之后稍微间隔下<code>tab.wait(1)</code>再点击登录按钮。此时会切换界面，使用了函数<code>tab.wait.new_tab()</code>等待页面加载完成。之后就是先检测是否已签到，如果没有则直接开始点击验证，验证是否成功使用前面的方法等待”tag:circle”显示。验证成功后则点击签到按钮，之后刷新网页验证是否签到成功。<br>&emsp;&emsp;其中还加入了多次检测机制，因为可能第一次定位不到，需要多次定位，于是写了<code>locate_button(ele, tag=&quot;tag:svg&quot;, retries=MAX_RETRIES)</code>函数。定位cloudflare内元素采用了<code>process_captcha(tab, eles, tag=&quot;tag:circle&quot;)</code>函数，原理就是先<code>eles = tab.eles(&quot;tag:input&quot;)</code>找所有input标签，这些eles判断是否有属性name和type，再进一步判断name的值中是否有”turnstile”，type的值是否为”hidden”，同时满足时则为对应的cloudflare区域，使用<code>locate_button()</code>设置其中的参数tag来获取到需要的元素。部分代码：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">process_captcha</span>(<span class="params">tab, eles, tag=<span class="string">&quot;tag:circle&quot;</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    定位验证码中相关元素并返回该元素。</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> ele <span class="keyword">in</span> eles:</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;name&quot;</span> <span class="keyword">in</span> ele.attrs <span class="keyword">and</span> <span class="string">&quot;type&quot;</span> <span class="keyword">in</span> ele.attrs:</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;turnstile&quot;</span> <span class="keyword">in</span> ele.attrs[<span class="string">&quot;name&quot;</span>] <span class="keyword">and</span> ele.attrs[<span class="string">&quot;type&quot;</span>] == <span class="string">&quot;hidden&quot;</span>:</span><br><span class="line">                button = locate_button(ele, tag=tag)</span><br><span class="line">                logging.info(<span class="string">f&quot;验证相关按钮：<span class="subst">&#123;button&#125;</span>&quot;</span>)</span><br><span class="line">                tab.wait(<span class="number">1</span>)</span><br><span class="line">                <span class="keyword">return</span> button</span><br><span class="line">    <span class="keyword">raise</span> RuntimeError(<span class="string">&quot;未找到验证码相关按钮&quot;</span>)</span><br></pre></td></tr></table></figure></p><h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>&emsp;&emsp;至此，代码相对稳定，在自动部署下，各环节没有异常，都能实现预计的操作并完成签到任务。</p>]]></content>
      
      
      <categories>
          
          <category> 整活探索 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文献翻译(五)</title>
      <link href="/2024/11/25/%E6%96%87%E7%8C%AE%E7%BF%BB%E8%AF%91-%E4%BA%94/"/>
      <url>/2024/11/25/%E6%96%87%E7%8C%AE%E7%BF%BB%E8%AF%91-%E4%BA%94/</url>
      
        <content type="html"><![CDATA[<h1 align="center"><strong><b>利用La0.7Sr0.3MnO3（LSMO）底电极改进SrFeOx拓扑相变忆阻器的循环稳定性和开关比(Improved cycling stability and ON/OFF ratio of SrFeOx topological phase transition memristors using a La0.7Sr0.3MnO3 bottom electrode)</b></strong></h1><h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>在SrFeOx（SFO）拓扑相变（TPT）忆阻器中，电阻功能层通常外延生长在钙钛矿底电极上，因此底电极在SFO功能层的微观结构和电阻切换性能中起着重要作用。不幸的是，底电极中氧的过度扩散导致SrFeOx的电阻功能层微结构发生不可控的畸变，从而损害了器件的整体性能。本研究通过脉冲激光沉积（PLD）技术，在$La_{0.7}Sr_{0.3}MnO_3$（LSMO）和$SrRuO_3$（SRO）两种不同的底电极上外延生长了SFO膜。结果表明，采用LSMO电极的SFO忆阻器表现出优异的循环稳定性、开关比、数据保持性和耐久性能。此外，通过X射线衍射（XRD）、透射电子显微镜（TEM）和X射线光电子能谱（XPS）分别对SFO/LSMO和SFO/SRO异质结构的相组成、超晶格条纹和元素价态进行了表征。此外，通过第一性原理计算得出了两种器件中底电极的氧迁移自由能垒。上述研究结果表明，LSMO电极不易扩散氧离子，显著提高了SFO/LSMO异质结构的结构稳定性和性能。最后，通过紫外光电子能谱（UPS）和紫外可见光谱（UV-Vis）分析了BM-SFO与Au顶电极及LSMO底电极之间的能带结构和肖特基势垒，为解释其导电机制提供了实验依据。</p><h1 id="1-引言"><a href="#1-引言" class="headerlink" title="1. 引言"></a>1. 引言</h1><p>对于拓扑相变（TPT）材料，通过提取某些组成元素可以在两种具有不同晶体结构和物理化学性质的相之间实现可逆转换，同时保持整体晶体结构的相对稳定性。作为一种典型的TPT材料，$SrFeO_x$（SFO）由于氧化学计量比的不同而具有多种状态。当$x = 2.5$时，$SrFeO_{2.5}$是一种缺氧的布朗米勒相（BM-SFO），其价带由$O\ 2p$轨道组成，导带由$Fe\ 3d$轨道组成。此时，电荷转移能量为正，表现为绝缘体的特性。而当$x = 3$时，材料完全氧化，转变为具有负电荷转移能量的导电钙钛矿相（PV-SFO）。   值得注意的是，$SrFeO_x$具有较高的氧迁移能力，并且在TPT材料中BM相到PV相的吉布斯自由能变化小于钴基和锰基过渡金属氧化物（TMO）材料，这有助于在室温下实现相变。因此，SFO在忆阻器领域具有广阔的应用前景，并逐渐成为研究热点。</p><p>忆阻器的典型结构为“夹心(三明治)”配置，包括两个电极和一个功能层。电极主要促进电子在电极和功能层之间的传输。特别是，SFO忆阻器的制备需要将SFO功能层外延生长在导电钙钛矿电极上。因此，SFO薄膜的结构和性能容易受到钙钛矿底电极的影响。目前，$SrRuO_3$（SRO）被广泛用作TPT忆阻器的底电极，并在研究中取得了显著进展。然而，有研究表明，在SRO沉积过程中，大量氧离子或空位会富集在SRO层表面。在SFO功能层外延生长过程中，氧离子/氧空位自发扩散到SFO薄膜中，最终在SFO/SRO界面形成富氧/缺氧缓冲层，从而导致功能层晶体结构的畸变，并对忆阻器件的整体性能产生不可控的影响。  $La_{0.7}Sr_{0.3}MnO_3$（LSMO）因其半金属性、铁磁性和高居里温度（$T_c = 369\ \text{K}$）在自旋电子器件中得到了广泛应用。最近的研究表明，$La_{0.7}Sr_{0.3}MnO_3-\delta$也是一种TPT材料，能够在导电钙钛矿相和绝缘布朗米勒相之间发生相变。此外，与其他TPT材料相比，LSMO对氧具有更高的亲和性，这使得$La_{0.7}Sr_{0.3}MnO_{3-\delta}$的非完全氧化高阻结构易于吸收氧并转变为完全氧化的导电钙钛矿结构$La_{0.7}Sr_{0.3}MnO_3$。这一特性表明LSMO有潜力替代SRO作为TPT忆阻器的底电极。   目前，关于以LSMO为底电极的TPT忆阻器的研究仍然较少。尽管在LSMO电极上成功外延生长了高质量的BM-SFO层，但现有研究主要集中于器件的磁性特性，而较少系统性地探索BM-SFO/LSMO器件的电阻切换性能和导电机制。因此，有必要对基于SFO的TPT忆阻器采用LSMO底电极的电阻切换特性进行全面研究。</p><p>在本研究中，通过外延生长成功制备了具有水平超晶格状（SLL）条纹的纯相布朗米勒相$SrFeO_{2.5}$（BM-SFO）电阻层，并进一步构建了$Au/BM\text{-}SFO/LSMO/STO$忆阻器。由于$La_{0.7}Sr_{0.3}MnO_3$（LSMO）底电极中氧离子具有更稳定的特性，该器件表现出良好的循环稳定性、开关比、数据保持性和耐久性能。为对比研究，还制备了在相同条件下的$Au/BM\text{-}SFO/SRO/STO$忆阻器。此外，通过X射线衍射（XRD）、X射线光电子能谱（XPS）和高分辨透射电子显微镜（HRTEM）表征，研究了两种不同底电极上外延生长BM-SFO的微观结构差异和氧离子迁移效率。通过第一性原理计算进一步分析了氧离子从两种底电极迁移到SFO层的自由能障。最后，通过紫外-可见光谱（UV-vis）和紫外光电子能谱（UPS）表征方法研究了生长在LSMO上的BM-SFO薄膜的能带结构，以探讨器件的电阻切换机制。</p><h1 id="2-实验细节"><a href="#2-实验细节" class="headerlink" title="2.  实验细节"></a>2.  实验细节</h1><p>在本研究中，$La_{0.7}Sr_{0.3}MnO_3$（LSMO）底电极通过脉冲激光沉积（PLD）方法沉积在$SrTiO_3$（001）衬底上，沉积温度为700℃，氧气压力为$3 \times 10^{-1}$ mTorr。在沉积过程中，激光能量和频率分别保持在250 mJ和5 Hz。沉积完成后，氧气压力提高至10 mTorr，并进行原位退火10分钟，以填补底电极中的氧空位，达到足够的氧化化学计量比，进而获得具有改善导电性的完全氧化LSMO底电极。随后，在相同条件下沉积了完全氧化的$SrRuO_3$（SRO）电极。沉积完这两个电极后，激光能量和重复频率保持不变，且以650℃沉积了30 nm的BM-SFO功能层。为了获得纯净的BM-SFO，将氧气压力降至$1 \times 10^{-2}$ mTorr，并进行原位退火10分钟。沉积完成后，所合成的BM-SFO薄膜在相同的氧气压力下冷却至室温。Au顶电极通过电子束蒸发制备，厚度为120 nm，尺寸为80×80 $\mu m^2$。</p><p>所合成薄膜的晶体结构通过X射线衍射（XRD，Bruker D2 PHASER）表征。器件的横截面微观结构通过高分辨率透射电子显微镜（HRTEM，Tecnai G2 F30）观察。通过X射线光电子能谱（XPS，AXIS-ULTRA DLD-600W）分析了所合成的BM-SFO薄膜的结合能，结合能校准采用C 1s = 284.6 eV作为参考。带隙和功函数通过紫外-可见光谱（UV-vis，SolidSpec-3700）和紫外光电子能谱（UPS，AXIS-ULTRA DLD-600W）分别研究。直流和脉冲的I-V特性通过半导体分析仪（Agilent B1500A）进行测试。</p><p>第一性原理计算通过维也纳自洽模拟软件包（VASP）进行，采用广义梯度近似（GGA）和PW91功能。平面波扩展的截止能量设置为520 eV。为了确保计算的准确性，每个单元格的能量收敛到$10^{-5}$ eV以下，每个离子的力收敛到$0.02$ eV/Å以下。为了进行布里渊区积分，采用了Γ中心的$4 \times 4 \times 1$ Monkhorst-Pack网格k点。考虑到$d/f$轨道电子的强库仑相互作用，本文采用了GGA+U方法，并选择了$La$的$f$轨道电子$U_{eff}$值为6 eV，$Mn$的$d$轨道电子$U_{eff}$值为4 eV，$Fe$的$d$轨道电子$U_{eff}$值为3.2 eV，$Ru$的$d$轨道电子$U_{eff}$值为1.5 eV。</p><h1 id="3-结果和讨论"><a href="#3-结果和讨论" class="headerlink" title="3. 结果和讨论"></a>3. 结果和讨论</h1><p>图1(a)展示了外延生长在$La_{0.7}Sr_{0.3}MnO_3$（LSMO）上的布朗米勒相$SrFeO_{2.5}$（BM-SFO）和外延生长在$SrRuO_3$（SRO）上的混合相SFO的X射线衍射（XRD）图谱。生长在LSMO上的BM-SFO薄膜衍射图谱显示了典型的BM相，除了$SrTiO_3$（STO）衬底和LSMO底电极的衍射峰外，没有其他杂质相的峰。特别地，衍射图谱中可以检测到对应于(020)、(060)和(0100)晶面的衍射峰，定义为BM-SFO的指纹特征。在SFO/SRO薄膜的衍射图谱中，虽然可以看到(020)的弱特征峰，但(060)和(0100)晶面的特征峰的缺失表明单晶性较差。此外，SFO薄膜中还出现了$SrFeO_3$的(001)和(002)晶面特征峰，表明该薄膜中存在BM-SFO和PV-SFO的混合相。另一个在31.51度处出现的低而宽的衍射峰表明SFO/SRO薄膜由于混合相的存在而晶化较差。   图1(b)展示了BM-SFO/LSMO和SFO/SRO薄膜的Fe 2p能级XPS谱图。BM-SFO结构中的Fe$^{3+}$对应的双峰特征分别出现在710.0 eV和723.6 eV的位置。第二组双峰位于711.9 eV和725.5 eV，归因于Fe$^{4+}$，表明薄膜表面略微氧化。值得注意的是，在Fe 2p3/2和Fe 2p1/2的双峰之间出现了718.9 eV的卫星峰，与BM-SFO薄膜中的Fe$^{3+}$特征一致，表明薄膜中Fe离子的价态主要为三价。此外，BM-SFO/LSMO薄膜中Fe$^{3+}$的比例高于SFO/SRO薄膜，表明BM-SFO在LSMO底电极上的化学结构比SFO/SRO薄膜更简单。  图1(c)展示了BM-SFO/LSMO和SFO/SRO薄膜的O 1s能级XPS谱图。能谱显示出不对称的O 1s峰，表明系统中存在不同的氧化学态。通过拟合谱图，发现了529 eV和530.8 eV的两个明显峰。其中，529 eV的峰归因于BM-SFO中的晶格氧（$O_o$），530.8 eV的峰则归因于氧空位（$V_o$）。BM-SFO/LSMO中的$V_o/O_o$比值高于SFO/SRO薄膜，与Fe 2p能谱一致。这进一步支持了BM-SFO在LSMO底电极上的生长以及SFO/SRO薄膜中BM-SFO和PV-SFO的混合相。</p><p><span style="color:red">图1</span></p><p><span style="color:red"><strong>(a)</strong> 合成的$BM\text{-}SFO/LSMO/STO(001)$和$BM\text{-}SFO/SRO/STO(001)$薄膜的X射线衍射（XRD）$\theta$-$2\theta$图谱</span><br> <span style="color:red"><strong>(b)</strong> $SFO/LSMO$和$SFO/SRO$薄膜的Fe 2p核心能级XPS谱图</span><br> <span style="color:red"><strong>(c)</strong> $SFO/LSMO$和$SFO/SRO$薄膜的O 1s核心能级XPS谱图</span><br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/post/文献图片/翻译五/img109.jpg" style="width:400px;"/></div></div></p><p>图2(a)和(b)展示了SFO拓扑相变（TPT）忆阻器的两种状态，即初始高电阻状态（HRS）和低电阻状态（LRS），在LRS中形成了导电丝状结构（CFs）。图2(a)中，电阻功能层由$FeO_4$四面体（蓝色）层和$FeO_6$八面体（红色）层交替堆叠，称为具有水平超晶格状（SLL）结构的BM-SFO。在没有外加偏压的情况下，由于氧离子在八面体和四面体层之间的迁移屏障较高，氧离子更倾向于沿氧空位通道（OVCs）水平扩散，而非垂直迁移形成导电丝状结构。当在电极上施加偏压时，如图2(b)所示，氧离子在电场方向上垂直迁移，从而形成连接顶底电极的PV-SFO导电丝，导致器件开启。有关BM-SFO TPT忆阻器电阻切换性能的更多细节将在后续图中讨论。</p><p> <span style="color:red">图2</span></p><p><span style="color:red"><strong>(a)</strong> $Au/BM\text{-}SFO/LSMO(SRO)$器件的示意图，显示水平有序的氧空位通道，器件处于高电阻状态（HRS）</span><br> <span style="color:red"><strong>(b)</strong> 在电场作用下，形成PV-SFO导电丝的示意图，器件处于低电阻状态（LRS）。红色和蓝色球体分别表示$FeO_6$八面体和$FeO_4$四面体</span><br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/post/文献图片/翻译五/img156.jpg" style="width:400px;"/></div></div></p><p>图3(a)展示了$Au/BM\text{-}SFO/LSMO$器件的循环特性，设置为-3 V的负电压，并且100次I-V循环曲线没有出现开关窗口的退化，显示出优异的循环稳定性。插图显示了在0.1 V和-0.1 V偏压下从器件提取的电阻累积分布图。$P\text{-}RHRS$（$P\text{-}RLRS$）和$N\text{-}RHRS$（$N\text{-}RLRS$）的相对波动（$\sigma/\mu$）分别为0.07（0.03）和0.09（0.04），表明在电阻切换过程中具有鲁棒的循环稳定性。图3(b)展示了$Au/BM\text{-}SFO/SRO$器件的循环特性，器件的设置电压极性为正（+2.5 V）。100次I-V循环曲线的重叠较差，显示出该忆阻器较差的循环一致性。插图展示了器件的HRS和LRS值的累积分布，$P\text{-}RHRS$（$P\text{-}RLRS$）和$N\text{-}RHRS$（$N\text{-}RLRS$）的离散度较大，分别为0.19（0.87）和0.18（0.86），表明循环稳定性较差。  图3(c)和(d)展示了具有两种不同底电极的BM-SFO忆阻器的保持性能。对于$BM\text{-}SFO/LSMO$，图3(c)表明，在10 mV的读出电压下，器件的高低电阻值可以在1$\times 10^4$秒内保持良好，并且几乎没有可见的波动。因此，器件具有良好的数据保持特性，可以与当前高性能电阻切换器件进行比较，并显示出在长期数据存储中的潜在应用。器件的开关比约为100，且与电阻积累曲线相符。在10 mV的读出电压下，HRS的电阻表现出不稳定的行为和较小的开关比（≈11），这可能是由于在功能层中存在BM-SFO和PV-SFO的混合相结构，表明器件的保持性能较弱。图3(e)展示了$BM\text{-}SFO/LSMO$器件的耐久性特性。施加在器件上的写（擦除）脉冲的幅度和宽度分别为-5 V（+2.8 V）和5 ms（500 $\mu s$）。该器件在1000次脉冲下表现出良好的稳定性，且开关比约为23。与保持测试相比，耐久性测试中表现出的开关比有所降低，认为是(suggest)BM-SFO电阻层中自由移动氧的影响。在单次短时设置脉冲下，氧离子难以迁移到原位置，从而难以形成稳固的导电丝，导致器件的LRS值较高。相反，在重置脉冲过程中，氧离子更倾向于返回原位置，因此导电丝更容易且更彻底地断裂，器件的HRS电阻与直流扫描模式下的电阻相等。图3(f)进一步测量了11个不同器件单元在$Au/BM\text{-}SFO/LSMO$器件上的电阻切换特性，并统计了相应的$R_{HRS}$和$R_{LRS}$值，以及开关比。如图3(f)所示，器件的高低电阻值及其相应的开关比的波动较小，表明$LSMO$作为电极的BM-SFO器件具有良好的均匀性。</p><p><span style="color:red">图3</span></p><p><span style="color:red"><strong>(a)</strong> $Au/BM\text{-}SFO/LSMO$器件的100次I-V循环曲线</span><br> <span style="color:red"><strong>(b)</strong> $Au/BM\text{-}SFO/SRO$器件的100次I-V循环曲线。插图为两种器件中电阻的累积分布概率</span><br> <span style="color:red"><strong>(c)</strong> $Au/BM\text{-}SFO/LSMO$器件的保持性能</span><br> <span style="color:red"><strong>(d)</strong> $Au/BM\text{-}SFO/SRO$器件的保持性能</span><br> <span style="color:red"><strong>(e)</strong> $Au/BM\text{-}SFO/LSMO$器件的耐久性能</span><br> <span style="color:red"><strong>(f)</strong> 11个不同$Au/BM\text{-}SFO/LSMO$器件单元的$R_{HRS}$、$R_{LRS}$以及对应的开关比（ON/OFF ratio）</span><br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/post/文献图片/翻译五/img47.jpg" style="width:400px;"/></div></div></p><p>图4(a)和(b)分别展示了具有两种不同底电极的BM-SFO忆阻器的高角环形暗场（HAADF）透射电子显微镜（TEM）图像及其相应的能量色散谱（EDS）元素映射图。横截面图像显示了器件中各层的均匀分布及清晰的界面边界。为了消除功能层厚度对器件整体电阻性能的影响，两种器件的功能层厚度均约为30 nm。值得注意，在LSMO的EDS映射图中，Sr元素的含量低于BM-SFO和STO中的Sr，这与LSMO的化学计量比（约0.3）一致。  图4(c)显示了BM-SFO/LSMO异质结构的高分辨透射电子显微镜（HRTEM）图像，在BM-SFO层中可以观察到清晰的水平超晶格状（SLL）条纹，并且底电极界面处没有由于氧扩散形成的PV-SFO区域。SLL条纹的宽度为0.778 nm，与报道的宽度（0.78 nm）非常接近。图4(d)展示了BM-SFO/LSMO异质结构中选定区域A的快速傅里叶变换（FFT）图像，显示了垂直排列的SLL条纹，证实了BM-SFO薄膜中的SLL条纹沿面内方向分布。图4(e)表明LSMO电极薄膜是具有晶格常数0.384 nm的标准钙钛矿结构。   对于BM-SFO/SRO，异质层结构如图4(f)所示，SRO电极薄膜仍为钙钛矿结构（见图4(h)）。然而，由于氧的自发扩散，在底电极界面附近形成了富氧的PV-SFO区域，从而在某些研究中报道的沿面外方向生成了SLL条纹，条纹间距为0.783 nm。此外，在SFO薄膜中还可以观察到水平SLL条纹以及一些交叉区域，这导致了SFO薄膜的晶体质量较差，与之前的XRD结果一致。图4(g)显示了SFO/SRO薄膜中选定区域C的FFT图像，其中水平排列的超晶格条纹证实了垂直方向的SLL条纹的存在。   结合TEM图像和之前的讨论，可以解释这两种器件在电阻切换过程中表现出相反的极性。在$Au/BM\text{-}SFO/LSMO$忆阻器中，BM-SFO薄膜的表面轻微氧化，底电极界面处没有氧扩散，也没有多余的氧离子。当在顶电极施加适当的负电压时，氧离子被驱动向下迁移，最终形成导电丝（CFs），完成设定过程。相应地，正电压驱使氧离子从CFs中逸出并返回初始位置，使器件恢复到高电阻状态（HRS）。   相比之下，对于$Au/BM\text{-}SFO/SRO$器件，大量氧从底电极扩散到SFO薄膜中，导致SFO底电极附近富集氧离子。在顶电极施加正电压会促使大量氧离子向上迁移，形成稳固的导电丝并完成设定过程，而负电压则完成重置过程。然而，在施加重置电压后，HRS中的导电丝并未完全且均匀地断裂。结果，在连续的读出电压下，导电丝逐渐断裂或产生额外的断裂，导致器件HRS值逐渐增加。因此，两种器件性能的差异归因于底电极的氧扩散行为。</p><p> <span style="color:red">图4</span></p><p><span style="color:red"><strong>(a)</strong> $Au/BM\text{-}SFO/LSMO$器件的高角环形暗场（HAADF）TEM图像及相应的EDS映射图</span><br> <span style="color:red"><strong>(b)</strong> $Au/BM\text{-}SFO/SRO$器件的HAADF TEM图像及相应的EDS映射图</span><br> <span style="color:red"><strong>(c)</strong> $BM\text{-}SFO/LSMO$层的高分辨率透射电子显微镜（HRTEM）图像</span><br> <span style="color:red"><strong>(d)</strong> 选定区域A的快速傅里叶变换（FFT）图像</span><br> <span style="color:red"><strong>(e)</strong> 选定区域B的FFT图像</span><br> <span style="color:red"><strong>(f)</strong> $BM\text{-}SFO/SRO$层的HRTEM图像</span><br> <span style="color:red"><strong>(g)</strong> 选定区域C的FFT图像</span><br> <span style="color:red"><strong>(h)</strong> 选定区域D的FFT图像</span><br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/post/文献图片/翻译五/img178.jpg" style="width:400px;"/></div></div></p><p>为了更好地理解氧离子从两种不同电极（$La_{0.7}Sr_{0.3}MnO_3$，LSMO 和 $SrRuO_3$，SRO）迁移到$BM\text{-}SFO$薄膜的过程，采用密度泛函理论（DFT）计算了在两电极间氧迁移过程中自由能的变化。图5(a)展示了在没有底电极氧扩散的情况下异质结构的示意图，此时界面的四面体层仅由$FeO_4$四面体组成。图5(b)展示了底电极中的氧离子迁移至$BM\text{-}SFO$四面体层后异质结构的示意图，形成了$FeO_5$五面体，同时在原位置留下了$MnO_5$或$RuO_5$五面体。此外，放大的图显示了氧离子的迁移路径。氧离子的迁移并非直接从位置1到位置3，而是先从位置1移动到位置2，然后位置2的氧离子迁移到位置3以填补现有氧空位。    进一步计算了氧迁移前后每个状态的吉布斯自由能及其变化，如表1所示。对于$BM\text{-}SFO/LSMO$，氧迁移前的吉布斯自由能为$-774.975$ eV，迁移后的自由能为$-772.749$ eV，对应的自由能变化$\Delta G = 2.226$ eV。在$BM\text{-}SFO/SRO$异质结构中，自由能分别为$-736.738$ eV和$-735.185$ eV，对应的$\Delta G = 1.553$ eV，比LSMO电极的器件更小。$\Delta G$的差异表明，SRO中的氧比LSMO中的更活跃，因此更容易迁移。在两种底电极的制备过程中，薄膜在10 mTorr的高氧压下退火，以填补表面的氧空位并形成富氧界面。在后续$BM\text{-}SFO$沉积过程中，SRO表面的氧自发扩散至$BM\text{-}SFO$，形成了富氧的$PV\text{-}SFO$层，这导致垂直方向的SLL形成，使最终晶体结构较为无序，且$BM\text{-}SFO/SRO$器件的电阻切换性能不稳定。相比之下，LSMO底电极即使在相同的高氧压下退火，其氧向$BM\text{-}SFO$薄膜的自发扩散量也少得多。因此，最终合成的薄膜为纯的$BM\text{-}SFO$相，整体结构不会产生不可控的变化，从而使器件表现出更稳定的电阻性能。</p><p><span style="color:red">表1</span></p><p><span style="color:red">两种异质结构中氧从底电极界面迁移至$BM\text{-}SFO$四面体层时的初始和最终吉布斯自由能及对应的自由能变化（$\Delta G$）</span><br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/post/文献图片/翻译五/1.jpg" style="width:400px;"/></div></div></p><p> <span style="color:red">图5</span></p><p><span style="color:red"><strong>(a)</strong> 无氧离子迁移时$BM\text{-}SFO$与钙钛矿结构底电极的结构示意图</span><br> <span style="color:red"><strong>(b)</strong> 底电极的氧迁移到$BM\text{-}SFO$中并填补四面体层氧空位后的异质界面结构示意图（放大图显示了氧离子的迁移路径）</span><br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/post/文献图片/翻译五/img214.jpg" style="width:400px;"/></div></div></p><p>图6(a)显示了$Au/BM\text{-}SFO/LSMO$器件导电机制的拟合曲线。在整个正负电压扫描过程中，器件表现出欧姆导电、肖特基发射和空间电荷限制电流（SCLC）导电机制。在HRS中，器件仅通过肖特基发射导电。当器件切换到LRS时，仅表现出欧姆导电和SCLC导电机制，表明此时形成了导电丝（CFs）。当器件恢复到HRS时，导电机制再次表现为肖特基发射，表明导电丝已断裂。基于典型的肖特基发射模型，图中展示了电压扫描范围0至-0.81 V和0.9至-0.125 V内$\sqrt{V}$与$\ln I$的线性拟合曲线。负电压扫描下的拟合曲线斜率和截距大于正电压扫描下的对应值，表明肖特基势垒有所降低。   此外，通过Kubelka-Munk函数对扩散反射光谱进行外推获得了外延生长在LSMO上的$BM\text{-}SFO$薄膜的带隙（$E_g$），如图6(b)所示。根据Kubelka-Munk函数绘制了$(F(R)\cdot h\nu)^2$与光子能量$h\nu$的曲线，带隙$E_g$约为2.07 eV，与先前报道一致。图6(c)显示了$BM\text{-}SFO$和LSMO的高结合能，分别为16.45 eV和16.49 eV。He激发源的结合能为21.22 eV，得出$BM\text{-}SFO$和LSMO的功函数分别为4.77 eV和4.73 eV。图6(d)展示了$BM\text{-}SFO$的低结合能截止点，表明价带顶部（VBM）与费米能级之间的能量差为1.25 eV。此外，已有研究表明LSMO是一种无带隙导电材料，Au的功函数为5.1 eV。因此，基于上述能带测试结果，图6(e)和(f)分别示意了$Au/BM\text{-}SFO$和$BM\text{-}SFO/LSMO$异质结的能带结构。图6(e)显示，当Au与$BM\text{-}SFO$接触时，由于功函数的差异，$BM\text{-}SFO$的能带下移0.33 eV，形成1.15 eV的肖特基势垒。类似地，图6(f)显示当$BM\text{-}SFO$与LSMO接触形成异质结时，形成了0.78 eV的肖特基势垒，这与图6(a)中插图所示的线性拟合斜率和截距相吻合。$BM\text{-}SFO$与顶电极和底电极之间肖特基势垒的差异影响了I-V循环中正负偏压下累积曲线的一致性。</p><p> <span style="color:red">图6</span></p><p><span style="color:red"><strong>(a)</strong> $Au/BM\text{-}SFO/LSMO$器件的导电机制拟合曲线（插图为$\sqrt{V}$与$\ln I$的拟合曲线）</span><br> <span style="color:red"><strong>(b)</strong> 合成的$BM\text{-}SFO$薄膜的$(F(R)h\nu)^2$与光子能量$h\nu$的关系曲线</span><br> <span style="color:red"><strong>(c)</strong> 通过UPS光谱获得的$BM\text{-}SFO$和LSMO的功函数</span><br> <span style="color:red"><strong>(d)</strong> 通过UPS光谱分析的$BM\text{-}SFO$价带能量</span><br> <span style="color:red"><strong>(e)</strong> $Au/BM\text{-}SFO$异质结构的能带结构示意图</span><br> <span style="color:red"><strong>(f)</strong> $BM\text{-}SFO/LSMO$异质结构的能带结构示意图</span><br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/post/文献图片/翻译五/img248.jpg" style="width:400px;"/></div></div></p><h1 id="4-结论"><a href="#4-结论" class="headerlink" title="4. 结论"></a>4. 结论</h1><p>综上所述，成功制备了$Au/BM\text{-}SFO/LSMO/STO$和$Au/BM\text{-}SFO/SRO/STO$拓扑相变（TPT）忆阻器，并详细研究了采用两种不同底电极的SFO忆阻器的微观结构和电阻切换性能。XRD图谱表明，基于LSMO底电极制备的BM-SFO表现出优于SRO基器件的单晶格结构。TEM及其对应的FFT图像进一步确认，在采用LSMO底电极的SFO薄膜中仅出现水平的超晶格状（SLL）条纹，且BM-SFO/LSMO界面处氧扩散较少，而在SRO上生长的SFO薄膜不仅存在水平和垂直SLL条纹，还由于氧扩散形成了PV-SFO相，表明BM-SFO更倾向于在LSMO上实现外延生长。   XPS谱图显示，与SRO相比，在LSMO底电极上合成的BM-SFO薄膜具有更高的$Fe^{3+}$和氧空位（$V_o$）含量，化学结构更加一致。此外，第一性原理计算结果表明，LSMO薄膜中的氧迁移能量较高，因此氧在LSMO中的稳定性优于SRO中的氧。因此，与$Au/BM\text{-}SFO/SRO$器件相比，$Au/BM\text{-}SFO/LSMO$器件展现出更优异的循环稳定性，且其开关比提高了9倍，这归因于LSMO底电极中氧的增强稳定性。  此外，还分析了$Au/BM\text{-}SFO/LSMO$器件的能带结构，并计算了BM-SFO与顶电极（Au）和底电极（LSMO）之间的肖特基势垒，较好地解释了正负偏压下的肖特基导电机制。总之，本文提出的基于LSMO底电极的BM-SFO忆阻器，其改进的电阻切换特性为设计新型SFO TPT忆阻器提供了有价值的参考。</p>]]></content>
      
      
      <categories>
          
          <category> 文献翻译 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文献翻译(四)</title>
      <link href="/2024/11/24/%E6%96%87%E7%8C%AE%E7%BF%BB%E8%AF%91-%E5%9B%9B/"/>
      <url>/2024/11/24/%E6%96%87%E7%8C%AE%E7%BF%BB%E8%AF%91-%E5%9B%9B/</url>
      
        <content type="html"><![CDATA[<h1 align="center"><strong><b>基于拓扑相变的模拟忆阻突触：用于高性能神经形态计算和神经网络剪枝(Analog memristive synapse based on topotactic phase transition for high-performance neuromorphic computing and neural network pruning)</b></strong></h1><h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>受人脑启发，基于非易失性存储器（NVM）的神经形态计算被认为是构建高能效人工智能计算硬件的一个有前途的范式。然而，现有的NVM仍然存在物理器件特性不完善的问题。在本研究中，我们展示了一种基于SrCoO(_x)的拓扑相变随机存取存储器（TPT-RAM），其具有独特的扩散性非易失双模式特性。通过沿高度有序的氧空位通道的氧离子迁移，可精确控制SrCoO(_x)的可逆相变，从而实现可重复的模拟开关特性并减少变异性。结合密度泛函理论和动力学蒙特卡罗模拟，系统研究了TPT-RAM的方向依赖型开关机制。此外，双模式TPT-RAM被用来模拟突触选择性稳定过程，并实现神经网络剪枝，成功减少了约84.2%的冗余突触，同时将图像分类精度提升至99%。本研究为设计神经形态计算中仿生忆阻突触提供了新的方向。</p><h1 id="1-引言"><a href="#1-引言" class="headerlink" title="1. 引言"></a>1. 引言</h1><p>数字硬件（包括中央处理器和图形处理器）算力的增长推动了人工智能的快速发展。然而，这反过来也对硬件性能提出了越来越高的要求，甚至超出了摩尔定律的发展速度。其中的一个关键瓶颈来源于广泛采用的冯·诺依曼架构中存储单元与计算单元的物理分离，这导致了内存墙问题这一重大挑战。受神经生物系统的启发，神经形态计算作为一种极具前景的计算范式出现，其特点是在存储器中实现大规模并行计算，从而打破了所谓的冯·诺依曼瓶颈（参考文献1, 2）。各种非易失性存储器（NVM），例如阻变随机存取存储器（RRAM）（参考文献3, 4）和相变存储器（PCM）（参考文献5），已经被广泛研究，用作人工突触和神经元以构建人工智能芯片原型（参考文献6-8）。与数字存储应用不同，在这里需要可重复的模拟开关特性（例如，多级电导状态、权重更新的线性和对称性以及低变异性），以满足高计算精度和能效的要求（参考文献9, 10）。</p><p>不幸的是，目前的非易失性存储器（NVMs）仍然存在非理想的器件特性（如图 S1 所示），这是大规模神经形态计算系统硬件实现中的主要挑战之一。例如，传统的细丝型阻变存储器（RRAM）依赖于无定形切换氧化物中的随机氧空位（Vo）迁移，导致器件固有的高变异性；而界面型 RRAM 由于缺乏局部焦耳热效应，通常表现出较差的保持特性和较低的速度（参考文献11）。对于相变存储器（PCM），由于晶态到无定形相变中的骤冷过程，其切换通常表现出不对称性，并且还存在电导漂移问题（参考文献12）。这些不理想的器件特性源自其内在的工作机制，因此难以通过简单优化器件结构来消除（参考文献13, 14）。此外，目前这些器件主要限于模拟单个神经元或突触的功能（例如突触可塑性、神经元触发等），而许多重要的网络级特性的生物模拟（如在生物认知学习中关键的神经网络修剪）尚未被探索。因此，为实现未来高性能的神经形态计算，亟需在材料和器件工作机制方面的创新，以获得更可控的模拟切换特性并构建更符合生物学的神经网络（参考文献15, 16）。</p><p>为了寻求低变异模拟切换忆阻器的新材料和结构，我们提出了一种基于拓扑相变的新型突触，即拓扑相变随机存取存储器（TPT-RAM），其使用棕米勒氧化物（BM）[如 SrCoO₂.₅（SCO）（参考文献17, 18）和 SrFeO₂.₅（参考文献19-21）]作为阻变切换氧化物。我们选择了 SCO 作为示例材料，其独特的晶体结构由氧八面体和氧四面体交替堆叠而成，提供了实现均匀模拟切换的有利条件：<br>(i) 高度有序的一维氧空位通道（OVCs）为氧离子的迁移提供了预定义的“高速通道”，从而诱导相变和阻变切换（参考文献22）。相比于通过金属掺杂（参考文献23）或位错工程（参考文献15）等方法限制离子迁移，BM 氧化物中高度有序且原子级精确的 OVCs 更加均匀且易于操控，而无需额外的外部工艺（参考文献24）。<br>(ii) 多价态的钴离子在调整氧化学计量比的基础上，可在 BM 和钙钛矿（PV）结构之间可逆变化，而不会失去本征的晶格结构，从而实现渐进切换（参考文献25-27）。<br>(iii) 作为阻变切换层的高质量、稳定的 BM 氧化物，确保了多级电导状态下的优异保持特性以及增强的耐久性。  </p><p>在本研究中，为了实现低功耗的神经形态计算，我们设计并制造了基于 SCO 的 TPT-RAM，其具有可调的 OVCs，作为忆阻突触。这样的 TPT-RAM 提供了一个绝佳的平台，通过关联电学与结构表征以及全面的原子器件建模和仿真（参考文献28-30），深入研究与拓扑相变相关的切换机制。然而，这对于使用无定形氧化物（如 HfO₂）的传统 RRAM 来说是困难的（参考文献31）。实验表明，通过操控顶部和底部电极（BEs）的 OVC，可以实现高速且均匀的模拟 TPT-RAM。此外，受生物神经网络中突触选择性稳定的启发，我们实现了通过自动修剪在线训练稀疏神经网络，从而大幅减少了网络规模和功耗。</p><h1 id="2-结果"><a href="#2-结果" class="headerlink" title="2. 结果"></a>2. 结果</h1><h2 id="2-1-TPT-RAM的取向依赖性切换特性"><a href="#2-1-TPT-RAM的取向依赖性切换特性" class="headerlink" title="2.1 TPT-RAM的取向依赖性切换特性"></a>2.1 <strong>TPT-RAM的取向依赖性切换特性</strong></h2><p><strong>图 1 (A 和 B)</strong> 展示了具有可调节氧空位通道 (OVCs) 的 TPT-RAM 突触示意图及其相变机制。首先，通过脉冲激光沉积 (PLD) 方法，在 (001)- 和 (110)-取向的 SrTiO3 (STO) 衬底上外延生长了厚度分别为 35 nm 和 17 nm 的单晶棕镁矿 SrCoO₂.₅ (BM-SCO)/SrRuO₃ (SRO) 薄膜。BM-SCO 中氧八面体和四面体的交替堆叠形成了高度有序的氧空位通道。由于外延应变和晶体对称性，OVCs 在SCO (001)pc 取向的薄膜中主要沿面内方向排列，而在 SCO (110)pc 取向的薄膜中则具有明显的面外分量【32–34】。  金属 SRO 用作底电极 (BE)，实现了无错配位错的原子级洁净外延界面（图 S2）【35】。在薄膜生长完成后，在 BM-SCO 层顶部沉积了一层厚度为 20 nm 的 Al₂O₃ 保护层。随后，通过在 Al₂O₃ 中刻蚀接触孔，定义了 TPT-RAM 器件的区域，面积范围从 (4 µm)² 到 (100 µm)² 不等。最后，通过溅射工艺在顶部制作了 100 nm 厚的金 (Au) 电极。Au 和 SRO 均能与 BM-SCO 形成欧姆接触【36】，这一特性对消除界面势垒的影响并获得对称的 I-V 特性至关重要。  通过 X 射线衍射 (XRD)（图 1C）和球差校正扫描透射电子显微镜 (STEM)（图 1D）进一步验证了这两种 BM-SCO 薄膜的不同晶体结构，其中氧四面体层（有序 OVCs）用粉色箭头标注。</p><p><span style="color:red"><strong>图 1. 基于 SCO 的 TPT-RAM 突触器件设计及其可调的氧空位链（OVCs）取向</strong><br>(A) 基于不同晶体取向的 SCO 制备的 TPT-RAM 示意图。<br>(B) 依赖于氧化学计量比的可逆场驱动的 BM-SCO 和 PV-SCO 之间的拓扑相变。<br>(C) 两种外延 SCO 薄膜的 XRD θ-2θ 图谱，分别生长在 SRO 缓冲的 STO (110) 和 (001) 衬底上（上方为 STO (110)，下方为 STO (001)）。<br>(D) 原子分辨率扫描透射电子显微镜图像展示了 SCO (110)pc（上）和 SCO (001)pc（下）的两种不同 OVC 取向，其中氧四面体层用粉色箭头标注。插图为相应的结构模型。<br><strong>a.u.</strong> 表示任意单位</span><br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/post/文献图片/翻译四/1.jpg" style="width:400px;"/></div></div></p><p>为研究器件的开关机制，我们对比了SCO (001)pc和SCO (110)pc TPT-RAM的开关特性。<strong>图 2A</strong> 展示了两种SCO器件的典型成形过程以及后续连续的I-V扫描曲线。<strong>图 2B</strong> 显示了从30个器件测得的成形电压的统计分布，用以关联氧离子的迁移。SCO (001)pc器件的成形电压（5.04 ± 0.07 V）明显高于SCO (110)pc器件（3.98 ± 0.05 V），同时SCO (110)pc器件表现出了显著的均匀性提升。  <strong>图 2C</strong> 显示了TPT-RAM器件在500次开关循环中电导率的均匀性（在0.2 V读出电压下测得）。附图S3（A和B）显示，SCO (110)pc TPT-RAM的循环间变异系数（σ/μ）非常低：设定电压的变异系数仅为1.8%，复位电压为0.9%，而高阻态（HRS）和低阻态（LRS）的变异(variation)系数分别为2.25%和13.74%。这种循环间均匀性归因于各向异性SCO晶体结构中高度各向异性的离子迁移路径。此外，附图S3（C和D）显示了优异的可再现性，器件间差异(variation)小（低至4.9%）且批次间均匀性良好，这主要得益于高质量的外延SCO薄膜。</p><p>此外，我们开发了一种脉冲测试方案来评估这两种不同SCO器件的工作速度（附图S4）。测试从相似的低电导状态（($G_ = 40  \mu S)$）开始，随后连续施加一系列固定幅值（0.8至4 V）但脉冲宽度不同（100 ns至10 ms）的脉冲。每次操作脉冲后读取器件导电值，直至其达到目标导电值($G_{target}$(80和160 $\mu S$)，对应的导电开关比($n = G_{target} / G_{initial}$ = 2和4）。之后，将器件复位为初始低导电状态，并改变脉冲幅值以再次编程。  通过将器件从初始状态编程到目标状态的脉冲宽度累加，我们可以估算达到目标状态所需的脉冲操作条件。这种测试方法可以避免不同初始电阻状态的影响，并测试尽可能多的脉冲条件。<strong>图 2D</strong> 的结果表明，与SCO (001)pc相比，SCO (110)pc的电导率变化更为容易，其操作电压更低（最低至0.8 V），速度更快（最快达到100 ns，受限于测量设备），而SCO (001)pc的相应值约为2.0 V和10 µs。</p><p>为更好地理解TPT-RAM器件的电学特性，我们建立了一种协同建模方法来研究其潜在的开关机制（图2E和2F及附图S5至S8）。首先，利用密度泛函理论（DFT）计算在原子级上评估了SCO中不同方向的氧离子迁移势垒（附图S5）【22】。<strong>图2E</strong> 显示了氧离子在氧四面体层内的两种不同迁移路径。以两个相邻位置分别作为初始状态和最终状态，沿氧空位通道（OVCs）的迁移势垒估算为0.56 eV。相比之下，垂直于OVCs方向的最低迁移势垒为0.97 eV，其中X位置的氧离子迁移到Y位置，同时Y位置的另一个氧离子跃迁至Z位置。此外，<strong>图2F</strong> 显示了氧离子通过氧八面体层从一个四面体层迁移到另一个四面体层的势垒为1.84 eV，此过程中涉及三个氧离子。附图S6中的计算值表明，氧离子更倾向于沿OVCs方向迁移。</p><p><span style="color:red"><strong>图 2. 可调 OVC 对 TPT-RAM 开关特性的影响</strong><br>(A) 典型的直流形成过程及 100 次连续扫描的 I-V 曲线。<br>(B) 从每种 SCO 取向的 32 个不同器件中提取的形成电压的统计分析。<br>(C) 以 0.2 V 读电压进行 500 次 I-V 扫描后器件电导的累计概率分布图。<br>(D) 从相同初始电导值 $ G_{initial}$ 编程至目标电导值$ G_{target}$所需的脉冲操作条件，其中开关比定义为 $ n = G_{\text{target}} / G_{\text{initial}} $</span><br><span style="color:red">(E) 在 SCO 中氧四面体层内的氧迁移路径，以及 (F) 跨越氧四面体层的氧迁移路径</span><br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/post/文献图片/翻译四/2.jpg" style="width:400px;"/></div></div></p><p>此外，我们进行了动力学蒙特卡罗（KMC）模拟，以捕捉电阻切换的完整物理过程（附图S7）【37-39】。在SCO (110)pc器件中，OVCs与顶部电极（TE）和底部电极（BE）电场方向一致，为氧离子提供了优先迁移路径，因此BM（褐钙钛矿）到PV（钙钛矿）相变更容易发生，并形成多个导电细丝。相比之下，SCO (001)pc器件中的氧离子受垂直于OVCs的电场驱动，沿电场方向迁移的概率较低，导致不利的随机相变（附图S8和视频S1）。因此，SCO (110)pc器件更容易形成导电细丝，表现出更高的速度和更低的工作电压（如图2D所示）。这与SCO (110)pc器件观察到的较小写入电压变异系数（$\sigma/\mu = 0.9\%$)，附图S3）一致。结果表明，导电细丝的形成依赖于SCO (110)pc中沿OVCs方向的定向氧离子迁移。  此外，与传统的基于无定形氧化物的RRAM器件相比，SCO (110)pc的原子级空间均匀性显著提高，后者因随机氧空位（Vo）的生成和迁移会引入更大的开关变化【38】。附图S9A表明，SCO (110)pc低阻态（LRS）对器件面积的依赖性较弱，这表明其切换机制为细丝型，这与KMC模拟结果一致。在细丝形成后，局部电场在细丝顶端增强，导致器件区域内形成局部化的细丝。相反，SCO (001)pc的器件电导率与面积的明确依赖性（附图S9B）表明，其相变不像SCO (110)pc那样局限于小区域【18】。</p><h2 id="2-2-TPT-RAM的模拟开关特性"><a href="#2-2-TPT-RAM的模拟开关特性" class="headerlink" title="2.2 TPT-RAM的模拟开关特性"></a>2.2 TPT-RAM的模拟开关特性</h2><p>基于上述结果，我们利用基于SCO (110)pc的TPT-RAM进一步研究了其用于神经形态计算的高性能模拟切换特性。测试了该器件的长时程增强（LTP）和长时程抑制（LTD）特性，使用了相同的设置脉冲和复位脉冲（图3A）。每个循环包含50个设置脉冲和50个复位脉冲，脉冲宽度为1 μs，随后是0.2 V、1 μs的读取脉冲。结果表明，TPT-RAM的模拟切换可以通过相同的低电压脉冲（1 V）实现，同时表现出几乎理想的线性切换，非线性因子分别为($\nu $= 0.20)（LTP）和($\nu$ = 1.29)（LTD）（附图S10A）。这两个值远低于典型细丝型RRAM的非线性因子【9】。此外，<strong>图3B</strong>中显示的逐周期脉冲编程测试表明，该器件在使用相同幅度脉冲和逐渐增加幅度脉冲的情况下均表现出可重复的模拟切换特性。测试表明，后者的编程方案可实现更好的线性度（附图S10）和更高的开关比【40】。</p><p>TPT-RAM的可逆相变在不破坏母晶体结构的情况下实现，这使其具有优异的保持特性和耐久性。<strong>图3C</strong> 显示，该器件在85°C下具有超过3000秒的长时间保持性能。此外，根据温度依赖性测量提取的活化能，可预测器件在室温下的保持时间超过10年（附图S11）【41】。SCO (110)pc中定向氧空位通道（OVCs）的存在，使得该器件可以通过更低的迁移势垒轻松编程，同时由于更高的扩散势垒，具备优异的保持特性（附图S12）。<strong>图3D</strong> 显示，该器件在超过$10^8$个脉冲下表现出可靠的多级切换，具有不同的电阻切换窗口。  这些结果表明，基于SCO (110)pc薄膜开发的TPT-RAM可以作为一种高性能的突触器件（与其他器件的比较见附图S1和表S1）。</p><p><span style="color:red"><strong>图 3. 基于 SCO (110)pc 的 TPT-RAM 在类脑计算中的模拟开关特性</strong><br>(A) 相同设置和复位脉冲下的长时程增强 (LTP) 和长时程抑制 (LTD)。写入脉冲列由 50 个设置脉冲（幅值分别为 1、1.5 和 2 V，宽度为 1 微秒）组成，随后是 50 个复位脉冲（幅值分别为 −1、−1.5 和 −2 V，宽度为 1 微秒）。每个写入脉冲后，通过读脉冲（幅值为 0.2 V，宽度为 1 微秒）测量器件电导。<br>(B) 多次循环下的可重复且均匀的模拟开关行为：在相同脉冲下，幅值为 1 V，宽度为 1 微秒（上图）；以及脉冲幅值从 1 V 增加至 2.89 V，宽度为 100 纳秒（下图）。<br>(C) 在 85°C 下对五个电导等级进行 3000 秒的保持测试。<br>(D) 不同阻变开关窗口的器件耐久性测试（固定的高电阻态 HRS 和变化的低电阻态 LRS）。在每个循环中，使用幅值为 1.8 至 3.2 V、宽度为 1 微秒的脉冲将器件编程至期望的 HRS 和 LRS，并在 0.2 V 读电压下记录。无论在何种情况下，器件都在 108 次循环后保持稳定，展示了出色的可靠性</span><br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/post/文献图片/翻译四/3.jpg" style="width:400px;"/></div></div></p><p>上述非易失性模拟切换特性是在器件经历成型过程后测得的，而在成型之前，器件表现为扩散性忆阻特性【42】。<strong>图4A</strong> 示意了器件在不同脉冲条件下的工作机制。起初，由于BM相的绝缘特性，器件表现出高电阻（&gt;1 MΩ）。当施加低于成型电压的弱激励（例如，2 V，见<strong>图4C</strong>）时，氧离子从SRO层被提取到SRO/SCO界面，降低了器件电阻。然而，这种激励不足以支持SCO完成稳定的相变，因为稳定相变需要足够多的氧离子【27, 43】。一旦移除电压偏置，界面处的化学势差会驱动氧离子回流至SRO层，导致器件逐渐恢复至初始的高阻态（HRS）。在写入脉冲前后，施加了0.2 V的读取脉冲记录器件的电导状态。器件首先被编程至相对低电阻态，但随后在约1秒内自发恢复至初始状态（<strong>图4C</strong>）。因此，在弱激励条件下，TPT-RAM表现为扩散性忆阻器行为。此外，附图S13中的耐久性测试显示，在扩散模式下器件可以承受超过1500次循环操作。</p><p>相对而言，在强激励下（例如，约4 V的直流成型电压，见<strong>图3A</strong>），大量氧离子被驱入SCO，触发稳定相变。此后，小的正电压可以吸引更多氧离子迁移，诱导SCO从BM相向PV相的稳定相变（<strong>图3A</strong>），从而增加器件电导（设置过程）。当施加负电压时，氧离子被驱回SRO，发生反向相变，降低器件电导（复位过程）。因此，在这种非易失模式下，器件表现出相对较低的电阻和优异的保持性能（85°C下超过3000秒）。两种不同模式下的电气测试结果分别展示在<strong>图4C</strong> 和 <strong>图4D</strong> 中。   为进一步研究成型过程，我们使用不同数量的相同脉冲（Vpulse = 3 V，脉冲宽度=10 ms）对器件进行了测试（<strong>图4B</strong>）。结果表明，器件可以从扩散模式转变为非易失模式。起始于相同的初始电导状态，10和50个脉冲可以引发增量电导变化，但在脉冲操作后逐渐衰减，表明器件工作在扩散模式。然而，当连续脉冲的数量增加至100时，观察到突发的电导变化，使TPT-RAM进入非易失模式。这些结果表明，器件既可以通过单一高电压成型，也可以通过足够多的小电压重复脉冲成型。  此外，使用50个3 V、10 ms的设置脉冲进行的循环测试（<strong>图4E</strong>）显示出良好的均匀性（变异率降至$\sigma/\mu = 1.35\%$)）和模拟切换特性（TPT-RAM的非线性因子低至1.8，见附图S14）即使在扩散模式下也是如此。</p><p><span style="color:red"><strong>图 4. TPT-RAM 突触的扩散性非易失性双模式</strong><br>(A) 记忆电阻开关机制示意图。在初始状态下，弱激励无法引起稳定的相变，器件表现为扩散性记忆电阻器。经过强激励后，足够数量的氧离子跨越 SRO/SCO 界面迁移，从而形成导电丝，并使器件表现出非易失性特性。<br>(B) 脉冲形成过程。少量（≤50）脉冲只能诱导扩散性开关行为，但更多的脉冲（≥100）则能够电形成器件并将其转变为非易失性记忆电阻器。<br>(C) 强激励前（形成）脉冲测试显示在弱脉冲下的扩散性特征。PN，脉冲数；PW，脉冲宽度。<br>(D) 强激励后（形成）脉冲测试显示非易失性记忆电阻特性，脉冲条件与（C）相同。<br>(E) 在扩散模式下的多周期脉冲测试也展示了良好的周期间均匀性（低变异性，$\sigma/\mu = 1.35\%$）和模拟开关特性</span><br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/post/文献图片/翻译四/4.jpg" style="width:400px;"/></div></div></p><h2 id="2-3-进行神经网络剪枝"><a href="#2-3-进行神经网络剪枝" class="headerlink" title="2.3 进行神经网络剪枝"></a>2.3 进行神经网络剪枝</h2><p>此外，我们想特别强调，<strong>图4</strong> 所揭示的TPT-RAM忆阻突触的独特扩散性-非易失性双模式特性，可以实现对神经生物学功能的更好模拟，不仅限于突触权重的表示【12】。在过去的十年里，关于通过新型忆阻器件模拟生物突触行为的研究得到了广泛关注，例如突触可塑性、短期记忆和长期记忆【42, 44】。然而，这些研究主要集中于器件层面的生物模拟，对于许多重要的网络层面属性的模拟（例如在人脑发育过程中起关键作用的神经网络剪枝【45】），目前的探索仍然不足【2】。这导致了生物神经网络与人工神经网络之间仍存在巨大的差距。因此，未来需要更系统地优化结构设计与符合生物学特性的硬件性能【2】。  此外，在资源受限的应用场景中（如便携式电子设备和物联网），高功耗和缺乏实时处理能力严重限制了深度神经网络的部署。神经网络剪枝被认为是降低网络复杂性和避免过拟合的有效途径【46】。然而，这通常会导致网络连接的不规则性，可能需要额外的努力来表示稀疏位置，从而增加硬件开销和计算成本【47】。因此，基于忆阻突触的神经网络剪枝技术尚未实现。</p><p>在本研究中，我们利用开发的TPT-RAM实现了结合深度学习算法的神经网络自动剪枝过程【46】。这种自动剪枝过程受到人脑中突触发育过程的启发（<strong>图5A</strong>）。在人脑中，突触连接数量在幼儿时期达到最大值，随后活跃的突触被选择性稳定，而很少使用的冗余突触逐渐被消除。这种自然的突触剪枝过程对于优化神经网络并提高网络效率至关重要。  在研究中，一个TPT-RAM差分对(即2个TPT-RAM器件构成)被用于表示一个突触权重。初始时，所有突触器件都工作在扩散模式。在训练过程中，频繁更新的器件会经历电成型并最终进入非易失态（代表稳定的突触连接），而其他器件则自然衰减至关闭状态。通过这种方式，神经网络可以强化重要的突触权重连接，同时去除其他无关的连接，最终在训练后形成一个稀疏网络。  <strong>图5B和5C</strong> 中的仿真结果展示了基于TPT-RAM的训练与使用常规非易失性突触的基线进行比较，在多层感知器（MLP）和卷积神经网络（CNN）中的应用表现。仿真中考虑了从实验中提取的器件循环变化特性。结果表明，利用扩散性-非易失性双模式特性的训练过程，剪枝网络的突触数量减少高达84.2%，同时在功耗方面节省高达63%，并通过避免过拟合将MNIST识别任务的准确率提高到约99%。这些由TPT-RAM带来的计算优势在训练更大规模的自动剪枝神经网络时可能更为显著。</p><p><span style="color:red"><strong>图 5.类生物的神经网络修剪实现</strong><br>(A) 基于 SCO 的 TPT-RAM 突触的在线训练类似于人脑中突触发展的选择性稳定化。首先，神经网络中的所有突触设备都处于扩散模式。在训练过程中，如果某个突触设备被频繁更新且电导达到某一阈值，则它会被电形成非易失性模式（这意味着突触连接已稳定）。否则，设备的电导会自发地衰减回几乎为零，连接则被修剪。  (B) 在修剪后的神经网络中（蓝色和红色曲线），通过避免过拟合，识别误差率得到了降低。对于MNIST的识别，最高准确率约为 99%。<br>(C) 训练后的模拟突触权重分布。对于 MLP 和 CNN，修剪率分别为 73.8% 和 84.2%。此外，修剪后的 MLP 和 CNN 网络的突触功耗分别降低了 38% 和 63%</span><br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/post/文献图片/翻译四/5.jpg" style="width:400px;"/></div></div></p><h1 id="3-讨论"><a href="#3-讨论" class="headerlink" title="3. 讨论"></a>3. 讨论</h1><p>综上所述，我们展示了基于SCO拓扑相变的TPT-RAM作为一种新型忆阻突触。独特的沿高度有序氧空位链（OVCs）进行的氧迁移使其具有以下优异特性：循环间变异性仅约为0.9%，器件间变异性约为4.9%，低操作电压（0.8 V），以及小于100 ns的快速切换速度。密度泛函理论（DFT）计算和动力学蒙特卡洛（KMC）模拟进一步证实了其电阻切换机制与实验测得的电学特性一致性。这些结果突出了控制离子迁移路径在提高RRAM均一性方面的重要性，为未来神经形态器件的优化提供了指导。  为与硅晶体管集成以构建基于TPT-RAM的功能性突触阵列，可采用远程外延和牺牲层辅助薄膜转移等新技术【48, 49】。此外，基于SCO的突触展现出独特的弥散性-非易失性双模式特性，被用于模拟人脑中发育中的突触，并在在线训练中实现神经网络剪枝，减少多达82.5%的冗余突触，同时将MNIST识别精度提升至99%。本研究为设计和探索高性能神经形态计算的类生物模拟忆阻突触指明了新的方向。</p><h1 id="4-材料和方法"><a href="#4-材料和方法" class="headerlink" title="4. 材料和方法"></a>4. 材料和方法</h1><h2 id="4-1-SCO-薄膜的生长和表征"><a href="#4-1-SCO-薄膜的生长和表征" class="headerlink" title="4.1 SCO 薄膜的生长和表征"></a>4.1 SCO 薄膜的生长和表征</h2><p>35 nm厚的SCO薄膜和17 nm厚的SRO薄膜通过反射式高能电子衍射辅助脉冲激光沉积（PLD）系统沉积在STO (001)和STO (110)基板上。优化的生长条件为：温度750°C，氧气环境压力100 mtorr。激光波长为248 nm（KrF激光器），能量密度为1.2 J/cm²，重复频率为2 Hz。薄膜生长完成后，样品在100 mtorr氧气环境中以7°C/min的冷却速率冷却至室温。薄膜厚度通过生长时间控制，其晶体结构通过X射线衍射（XRD）和倒易空间映射（RSM）表征。SCO薄膜的原子结构则使用ARM 200CF型透射电子显微镜（JEOL，日本东京）进行表征。  </p><h2 id="4-2-器件制造与测试"><a href="#4-2-器件制造与测试" class="headerlink" title="4.2 器件制造与测试"></a>4.2 器件制造与测试</h2><p>通过原子层沉积（ALD）方法形成了20 nm厚的Al₂O₃隔离介电层，并开设了尺寸范围为4 × 4到100 × 100 μm²的接触孔，定义了器件的活性区域面积。在接触孔顶部使用磁控溅射法沉积了厚度为100 nm的Au电极，其尺寸为100 × 100 μm²。器件的电学性能测试使用了半导体参数分析仪（Agilent B1500）、脉冲发生器（Agilent 81110A）和开关矩阵（Keithley 707）进行。</p><h2 id="4-3-神经网络模拟"><a href="#4-3-神经网络模拟" class="headerlink" title="4.3 神经网络模拟"></a>4.3 神经网络模拟</h2><p>一个 784 × 100 × 10 的多层感知机（MLP）和一个典型的卷积神经网络（CNN）LeNet-5 (50) 被用来验证神经网络剪枝的效果。在这项工作中，模拟了 LeNet-5，该网络由三个卷积层、两个池化层、一个全连接层和一个径向基函数（RBF）层组成。输入数据为 32 × 32 像素的图像。第一个卷积层（C1）经过一个 1 × 5 × 5 × 6 的卷积核计算后，输出尺寸为 28 × 28 × 6。结果通过一个池化层（S2）进行 2 × 2 平均池化，滑动步长为 2，并经过一个 sigmoid 函数处理。第二个卷积层（C3）使用一个 6 × 5 × 5 × 16 的卷积核处理后，输出尺寸为 10 × 10 × 6。接着，通过类似于 C1 和 S2 的方式形成另一个池化层（S4）。第三个卷积层（C5）经过一个 16 × 5 × 5 × 120 的卷积核处理后，输出尺寸为 1 × 1 × 120。然后，这些输出被输入到具有 84 个神经元和 tanh 激活函数的全连接层（F6）。最后，输出层由每个类别对应的 10 个欧几里得 RBF 单元组成。</p><p>在网络模拟中，一个由两个基于 SCO (110)pc 的 TPT-RAM 器件组成的差分对被用来表示一个突触权重。神经网络使用标准反向传播和随机梯度下降算法进行训练，批量大小为 200，学习率为 0.01。MLP 训练了 10 个周期，CNN 训练了 20 个周期。起初，所有突触器件都处于扩散模式，并使用图 4B 中测得的曲线进行模拟。这些器件在成型之前显示了约 100 个电导水平，并通过 3 V/10 ms（间隔 10 ms）的写入脉冲进行编程。  为了模拟人类的学习过程，在训练过程中引入了一系列休息阶段。对于 MLP，休息阶段每个周期出现一次；对于 CNN，每两周期出现一次。在休息阶段，没有学习任务，频繁更新的突触会通过电成型最终变为非易失性状态（代表稳定的突触连接），而其他仍处于扩散模式的无关突触连接会自动衰减（见图 S13），实现剪枝功能。剪枝后剩余的稳定突触连接使用 1 V/1 μs（间隔 1 μs）的脉冲（见图 3B）进行神经网络训练。读电压为 0.2 V，权重归一化到 (-1, 1) 范围内。模拟中包括从实验数据中提取的周期间变化(cycle-to-cycle variation)以及服从高斯分布的噪声模型。   在每个休息阶段之后，在测试数据集上测量网络的分类精度。剪枝率计算为零权重突触的比例，具体来说，是权重小于 1 × 10⁻⁶ 的突触数量除以突触总数。网络的突触功耗通过公式 $P_{synapse} = (V_)^2 \times G_{\text{synapse}}$) 估算得到。</p>]]></content>
      
      
      <categories>
          
          <category> 文献翻译 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文献翻译(三)</title>
      <link href="/2024/11/24/%E6%96%87%E7%8C%AE%E7%BF%BB%E8%AF%91-%E4%B8%89/"/>
      <url>/2024/11/24/%E6%96%87%E7%8C%AE%E7%BF%BB%E8%AF%91-%E4%B8%89/</url>
      
        <content type="html"><![CDATA[<h1 align="center"><strong><b>氧空位有序性对铁掺杂锶基钙钛矿结构和反应活性的影响：一项计算研究(Role of oxygen vacancy ordering on structure and reactivity of iron-doped Sr-based perovskites: A computational study)</b></strong></h1><h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>采用密度泛函理论（DFT）方法研究了纯SrCoO₃、SrFeO₃以及铁掺杂的SrCo₀.₈Fe₀.₂O₃和SrCoₓFe₁₋ₓO₃（x = 0.25、0.50、0.75）钙钛矿的结构和反应性。比较了块体钙钛矿的电子特性与不同铁掺杂组成的块体钙钛矿的电子特性。针对多种结构配置，研究了铁原子在SrCo₀.₈Fe₀.₂O₃中的位置影响，发现两个FeO₆多面体插入CoO₆多面体之间的结构相对更稳定。相邻的铁多面体会增强Jahn-Teller效应，导致对称性降低。此外，还研究了具有氧空位有序性的SrCoO₂.₅、SrFeO₂.₅以及铁掺杂的SrCo₀.₈Fe₀.₂O₂.₅、SrCoₓFe₁₋ₓO₂.₅和SrCoₓFe₁₋ₓO₂.₇₅（x = 0.25、0.50、0.75）的结构和反应性，以探讨氧含量变化的影响。通过电子密度分布图和Bader电荷分析，研究了其键合作用。此外，还计算了含氧空位和缺氧空位钙钛矿的功函数，以预测其导电行为。进一步地，将氢原子和氢分子引入钙钛矿的氧空位中，以理解氢化钙钛矿的结构转变并预测其在氢储存中的潜在应用。利用分子动力学模拟研究了水分子在SrFeO₃表面的吸附行为。水分子解离为氢氧根和质子，质子与表面氧以0.91 Å的距离结合，氢氧根离子则占据表面的氧空位，并以2.73 Å的距离与Fe配位。</p><h1 id="1-引言"><a href="#1-引言" class="headerlink" title="1. 引言"></a>1. 引言</h1><p>基于SrCoxFe1-xO3-δ的钙钛矿材料（SCF），如Pr₀.₅(Ba₀.₅Sr₀.₅)₀.₅Co₀.₈Fe₀.₂O3-δ (Pr₀.₅BSCF)和Ba₀.₅Sr₀.₅Co₀.₈Fe₀.₂O3-δ (BSCF)，已被报道为高效的电催化剂，用于氢析出反应（HER），其过电位在电流密度为10 mA/cm²时分别为237 mV和342 mV【1】。由于包含非贵金属，这些材料成本低廉，具有经济优势。此外，通过调整扩展超胞中钴和铁的位置以及创建不同的有序氧空位，可以改变其电子结构【2】，从而优化其结构和特性，以获得高效的HER电催化剂【3,4】。     通常，具有ABOx (2.5 ≤ x ≤ 3)结构的钙钛矿金属氧化物广泛存在，其中A可以是Ca、Sr、Ba、La，而B可以是Co、Fe、Ti、Cr、Mn、Ni、Cu、Al、Ga等【5】。钙钛矿的阳离子、阴离子或二者可能存在缺陷，从而赋予B位阳离子可变的氧化态。表面上的B位离子在BO₅配位结构中去除了顶端氧原子，形成空位，这些空位可作为HER的活性位点。该反应机制为两电子转移过程（2H₂O + 2e⁻ → H₂ + 2OH⁻），此过程在动力学上较慢，需要较高的能量输入以启动反应，从而产生较高的过电位【6-8】。为了减少能量输入并加速反应，人们正在设计和开发新的材料。    在这方面，Li及其同事【7】研究了HER的机制，其中质子被引入到氧空位中（如SrCoO₂.₅），导致过渡金属离子的还原。他们还报告了与结构转变相关的氢分子形成的可能性【9】。钙钛矿材料作为HER催化剂的特性受阴离子空位、B位阳离子的价态以及B位阳离子在表面和层间的配位对称性影响【7,8】。设计具有不同氧空位配置和组成的钙钛矿结构在钙钛矿材料研究中至关重要【10】。实验中通过调节阳离子和阴离子的组成来研究其结构稳定性并理解其功能特性【11,12】。然而，使用实验方法进行材料设计耗时且需要大量的人力和物力资源，特别是在合成有序空位的钙钛矿和精确的阴/阳离子组成时需要大量的试验和错误，这显著影响了钙钛矿设计和开发的速度和精确性。随着计算软件和硬件的最新进展，理论计算通过第一性原理和分子动力学方法可以超越实验观测，对这些材料进行深入研究 [13–15].。</p><p>Gainutdinov等人通过第一性分子动力学模拟研究了SrCoMoO₃₋ₓ和SrCo₀.₈₇₅Mo₀.₁₂₅O₃₋ₓ（x = 0, 0.125, 0.25）的Mo掺杂对系统结构在热膨胀过程中的影响【16】。Bork等人则使用基于DFT的Bader分析研究了纯的氢化形式的SrTiO₃、BaNbO₃、CaTiO₃和SrZrO₃中的电荷分布【17】。Staykov等人使用第一性原理方法计算并分析了SrTiO₃和铁掺杂的SrTiO₃的表面反应性和电子特性，并研究了表面氧空位在氧还原反应中的作用【14】。Tsang及其合作者【18】使用DFT方法分析了棕钙钛矿相SrCoO₂.₅及其氢化相HSrCoO₂.₅的稳定性、电子和磁结构。结果显示，在HSrCoO₂.₅中H和O之间存在部分电荷转移，且具有大的带隙和增强的电子迁移率，表明这种材料具有有趣的电子和磁特性。然而，氧空位有序化对铁掺杂锶基钙钛矿及其氢化相的结构和反应性的影响尚未得到研究。</p><p>在这一研究方向上，本研究旨在利用基于DFT的第一性原理方法，探讨SrCoxFe₁₋ₓO₃₋δ钙钛矿（SCF）的结构和电子特性及其对各种氧有序空位位置的影响。本研究分析了结合相互作用的性质、B位元素替代的影响、氧空位以及金属配位对费米能级处的电子特性、带隙、态密度（DOS）及部分态密度（PDOS）的影响。此外，计算得到的结构用于通过引入HER过程中涉及的多种中间体，研究氢化钙钛矿的能量学和电子特性。在此研究中，我们考虑了形成MO₄方形平面和MO₅方锥体的氧空位排列。通过DFT方法，研究了具有以下组成的SCF钙钛矿的结构和反应性，包括块体和含氧缺陷的SrCo₀.₈Fe₀.₂O₃、SrCo₀.₈Fe₀.₂O₂.₅、SrCoxFe₁₋ₓO₃、SrCoxFe₁₋ₓO₂.₅和SrCoxFe₁₋ₓO₂.₇₅（其中x = 0.25, 0.50, 0.75）。还通过分子动力学模拟研究了水在SrFeO₂.₅体系上的吸附及水分子的解离过程。</p><h1 id="2-计算部分"><a href="#2-计算部分" class="headerlink" title="2. 计算部分"></a>2. 计算部分</h1><p>基于密度泛函理论（DFT）的从头算（Ab-initio）（第一性）计算使用周期性边界条件，针对不同的SrCoO₃、SrFeO₃和铁掺杂的SrCo₀.₈Fe₀.₂O₃、SrCoxFe₁₋xO₃（x = 0.25、0.50、0.75）钙钛矿以及含氧缺陷的SC、SF和SCF钙钛矿（SrCoO₂.₅、SrFeO₂.₅、SrCo₀.₈Fe₀.₂O₂.₅和SrCoxFe₁₋xO₂.₇₅（x = 0.25、0.50、0.75））在反铁磁（AFM）和铁磁（FM）状态下进行，采用了SIESTA（西班牙电子模拟千原子项目）软件包【19-21】。氧缺陷铁掺杂的SrCoxFe₁₋xO₂.₅（SCF）具有交替分布的MO₆八面体和MO₄四面体的正交棕色钙钛矿结构，已被广泛研究【10，22】。最近的研究支持金属在方平面和方锥对称下的非典型配位可能性【5，23，24】。根据早期的计算【14，15】和SC、SF及SCF钙钛矿的已报道晶体结构，生成了计算的结构模型【22，25-27】。               </p><p>结构优化使用了SIESTA包中实现的Kohn-Sham自洽DFT方法【28】。SIESTA采用局域分子轨道基组描述价电子，并在所有计算中使用了Troullier-Martins规范守恒非局部赝势来描述原子核，从而提高计算效率。氧原子使用带极化轨道的双ζ基组（DZP）【29】，而Sr、Fe和Co使用伪原子轨道基组。交换-关联函数采用Perdew-Burke-Ernzerhof（PBE）的广义梯度近似（GGA）【30，31】。库仑相互作用通过考虑Hubbard U势【32，33】（分别为Co和Fe原子设置3.3 eV和4.0 eV）来计入【34】。在无Hubbard修正的情况下，Ueff包含的趋势与基组相似。所有计算的收敛标准设为能量0.05 eV和位移0.05 Å，实空间网格切割为300 Ry，原子间力松弛至0.01 eV Å⁻¹。几何优化采用共轭梯度算法进行。   布里渊区采样使用2×10×10 k点网格用于SCF钙钛矿，而SC和SF钙钛矿使用2×6×6 k点网格。在正交对称性下，同样的k点网格用于能带、DOS和PDOS计算【35】。获得各种可能的SCF钙钛矿结构配置的详细方法在支持信息（SI.1）中给出。</p><p>图1展示了通过改变SrCo₀.₈Fe₀.₂O₃、SrCo₀.₈Fe₀.₂O₂.₅和SrCoxFe₁₋xO₂.₇₅（x = 0.25、0.50、0.75）中Fe和Co的位置而生成的模型配置，以研究Fe位置和成分对金属活性位点的能量和反应性的影响。这些配置根据实验研究中实现的化学计量比【11,12,22,25–27】，创建了多种氧空位位点，具体如图示方案1所示。支持信息（SI.2）中提供了关于创建氧空位的各种方法的详细说明。</p><p>生成并优化了反铁磁（AFM）和铁磁（FM）状态，磁耦合常数（J）使用Ising模型计算【36–38】（方法细节在支持信息SI.3中给出），该方法是确定钙钛矿材料磁性的重要量子方法【39–42】。AFM和FM状态的能量差，即ΔET = E(↑↑) - E(↑↓)为正值。无论钙钛矿的结构和成分如何，结果均显示FM有序状态比AFM更稳定，这与已报道的实验和理论研究一致（见表S1）【43,44】。因此，结构和电子特性是基于最低能量的FM状态进行讨论的。</p><p>研究了空位排序对SCF钙钛矿材料整体电子特性的影响。优化结构上的Bader电荷分析使用Henkelman等人开发的算法完成【45】。优化结构的功函数【46,47】通过增加12 Å的真空区和10×1×10的k点网格计算得出。</p><p>在不同优化配置上进行了钙钛矿的氢化处理，以获得能量上更有利的氢化SF、SC和SCF钙钛矿【17,48】。所有计算中均使用2×6×6的k点网格。其他参数按照上述方法进行计算。由于无法使用共轭梯度算法去 松弛 通过水分子进行的钙钛矿氢化，因此采用了Verlet算法的分子动力学（MD）模拟【49】。MD模拟的时间步长为1 fs，初始目标温度为300 K。为了降低计算成本，MD模拟中未考虑自旋极化。   选择了能量上更有利的SF钙钛矿结构与水反应进行MD研究。通过沿c轴堆叠8层交替的SrO和FeO₂层并从顶层移除一个氧，创建了对称的缺陷表面模型【50】。将一个水分子放置在氧空位上，研究水分子与钙钛矿表面的反应。表面模型上方放置了15 Å的真空层，并使用2×2×1的k点网格。固定了底部四层（两个SrO层和两个FeO₂层）原子的坐标和晶胞体积，其余四层与放置在氧空位上的水分子相互作用。</p><h1 id="3-结果和讨论"><a href="#3-结果和讨论" class="headerlink" title="3. 结果和讨论"></a>3. 结果和讨论</h1><p>使用DFT方法逐步生成并优化了各种可能的SrCoxFe₁₋xO₃₋δ配置。首先优化了体相的SrCoO₃（SC）和SrFeO₃（SF）钙钛矿结构，以生成混合金属钙钛矿的结构。计算得到的结构和晶胞参数与文献中报道的实验和理论值（见支持信息中的图S1和表S2）一致。计算的能带和零带隙（表现出金属性）与SrCoO₃和SrFeO₃的已报道研究结果相符【51,52】，这验证了当前研究所选方法的有效性。</p><h2 id="3-1-钙钛矿在无氧空位和有氧空位情况下的可能配置和结构"><a href="#3-1-钙钛矿在无氧空位和有氧空位情况下的可能配置和结构" class="headerlink" title="3.1 钙钛矿在无氧空位和有氧空位情况下的可能配置和结构"></a>3.1 钙钛矿在无氧空位和有氧空位情况下的可能配置和结构</h2><p>生成了一个 $10 \times 1 \times 1$  的$ SrCo_{0.8}Fe_{0.2}O_3$ 超晶胞结构，未包含氧空位，基于 Fe 的位置设置了五种不同的配置，分别标记为 SCF-1 到 SCF-5（如图 1 所示），以研究 Co/Fe 位置对结构和电子性质的影响。所有 体$ SrCo_{0.8}Fe_{0.2}O_3$相配置的能量都在 1.71 kcal/mol 范围内，晶体结构呈立方晶系，空间群为 Pm3m。如表 1 所示，SCF-5 配置的晶胞参数与已报道的晶体结构值偏差为 0.68%，而其他 SCF 配置的偏差为 1.2%。在这五种配置中，SCF-5 的 Fe 多面体彼此相邻，包括两个 $SrFeO_3 $单元格结构插入在 $SrCoO_3$ 之间，因以下观察结果被认为相对更稳定：</p><ol><li><p>在SCF-5中，计算得到的M–O键长范围为Co–O键距1.91到2.00 Å，以及Fe–O键距1.92和1.97 Å，而其他构型的键长仅有0.02 Å的变化。需要注意的是，SCF-1到SCF-4中的键长略有差异，Fe–O键距为 1.94到1.96 Å，Co–O键距为1.95到1.97 Å。同样地，在SCF-5中，∠OFeO和∠OCoO键角从理想的90°偏离0.7°和1.2°，而其他构型的键角接近90°（SCF-1到SCF-4的∠OFeO在89.9°–90.1°之间，∠OCoO在89.8°–90.3°之间）。所有钙钛矿的键长和键角详见补充信息中的图 S2。</p></li><li><p>优化后的结构参数表明，在SCF-5中，Fe的配位中心呈现出<script type="math/tex">C_{4h}</script>对称性，而Co的多面体则为<script type="math/tex">C_s</script>对称性，而在其他钙钛矿结构中，多面体更倾向于<script type="math/tex">O_h</script>对称性。</p></li><li><p>SCF-5 的结构畸变源于相邻Fe多面体的存在，这导致Fe和O之间通过Fe–O–Fe–O桥的电荷转移，根据 Bader 电荷分析，Fe 和 O 离子的电荷分别在1.73 e到1.62 e和-0.98 e到-1.08 e之间波动。此外，∠OFeO和∠FeOFe角接近理想的180°，为179.71°，这有助于通过Fe–O–Fe键进行电荷转移。</p></li><li><p>SCF-5中的Fe–Fe和Co–Co相互作用增强了Jahn-Teller畸变，并降低了对称性，这体现在金属中心周围的键长变化中。</p></li></ol><p>接下来，构建了4×1×1超晶胞结构的SrCoxFe1-xO3（其中x = 0.25、0.50、0.75）无空位的化合物，组成分别为SrCo0.75Fe0.25O3、SrCo0.50Fe0.50O3和SrCo0.25Fe0.75O3，基于Co/Fe的位置和组成进行不同配置的设计。可能的配置如图1所示。三种钙钛矿结构：（1）SCF-0.25，其中由25%的FeO6八面体和75%的CoO6八面体组成；（2）SCF-0.50，50%的FeO6八面体和50%的CoO6八面体交替排列；（3）SCF-0.75，25%的CoO6八面体和75%的FeO6八面体交替排列，形成了能量上有利的结构。然而，50%的CoO6八面体与50%的FeO6八面体交替排列的结构并不稳定。与SCF-5类似，SCF-0.50中Fe多面体相邻的配置更具能量稳定性。</p><p><span style="color:red">图1. 体相SCF钙钛矿的优化结构。Co以蓝色表示，Fe以金色表示，O以红色表示，Sr以绿色表示</span><br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/post/文献图片/翻译三/img66.jpg" style="width:400px;"/></div></div></p><p><span style="color:red">方案1. 显示了钙钛矿的各种氧空位排序，从（a）到（e）。请注意，氧空位（a）导致MO6八面体和MO4正交平面的交替层，而（b）导致所有MO5正四面体，（c）和（d）具有邻近的金属多面体的氧空位，其中MO6八面体在（c）中插入MO4正交平面，在（d）中插入MO5正四面体；而在（e）中，MO6八面体插入MO5正四面体，氧空位位于共享的金属中心。显示了一个钙钛矿单元格（SrMO3）及其考虑生成空位的O原子标记</span><br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/post/文献图片/翻译三/img78.jpg" style="width:400px;"/></div></div></p><p><span style="color:red">表1<br>计算的SCF钙钛矿的晶格参数和相对能量（ΔE，单位：kcal/mol）。<br>晶格参数a是针对SrCo0.8Fe0.2O3每个单元格计算的。实验晶格参数在括号中给出[22]</span><br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/post/文献图片/翻译三/1.jpg" style="width:400px;"/></div></div></p><p>以上观察结果促使我们探索了氧空位有序的氧缺陷钙钛矿SrFeO2.5、SrCoO2.5、SrCo0.8Fe0.2O2.5、SrCoxFe1-xO2.5和SrCoxFe1-xO2.75（其中x = 0.25、0.50、0.75）。由于不同的SrCo0.8Fe0.2O3配置之间的能量差异极小（&lt;2 kcal/mol），因此所有五种配置都被考虑用于缺陷钙钛矿的研究。氧空位有序性在SrCo0.8Fe0.2O2.5中通过两种方式进行研究：（i）钙钛矿结构中，过渡金属位点交替排列MO6八面体和MO4方形平面；（ii）钙钛矿结构中，过渡金属位点配位为MO5方锥体，如方案1所示。氧空位在SrCoxFe1-xO2.5（x = 0.25、0.50、0.75）中的生成方式是MO6八面体与MO4方形平面交替排列，而另一种配置中，MO6八面体与MO5方锥体交替排列。SrCoxFe1-xO2.75（x = 0.25、0.50、0.75）钙钛矿是通过去除共享金属中心的氧来构建的，这样会导致MO6八面体与MO5方锥体交替排列。对于SF和SC钙钛矿，也考虑了类似的氧空位配置。</p><p>在氧缺陷的SF和SC钙钛矿中，方案1所示的所有氧空位配置对SF钙钛矿均为有利。在SC的情况下，形成CoO5方锥体的氧空位有序结构相对稳定。这些氧缺陷钙钛矿的相对稳定性与金属阳离子的配位环境（方锥和方形平面）以及由金属氧化态引起的畸变有关。优化后的结构和晶胞参数见支持信息中的图S3和表S3。    在氧空位有序的SrCo0.8Fe0.2O2.5钙钛矿中，SCF-5a配置由于相邻的Fe离子在八面体和方形平面配位下的相对稳定性较高，因为FeO4方形平面与FeO6八面体共享角，这有助于支持层间结构。对于氧空位有序的MO5方锥配置，SCF-1b和SCF-3b比SCF-2b、SCF-4b和SCF-5b稳定18.34 kcal/mol。所有氧缺陷SCF配置的计算晶胞参数和相对能量详见支持信息中的表S4。   对于SrCoxFe1-xO2.5（x = 0.25、0.50、0.75），氧空位配置的能量不利，而在SrCoxFe1-xO2.75（SCF-0.25、SCF-0.50和SCF-0.75）钙钛矿中，氧空位有序结构最终趋于形成能量上有利的结构。SCF-0.50结构中，FeO5方锥嵌入CoO6八面体之间时表现出能量上的稳定性，而CoO5方锥嵌入FeO6八面体之间的结构则不稳定。过渡金属中心的有趣配位促使我们进一步探讨氧缺陷钙钛矿的化学反应性。</p><h2 id="3-2-能带结构，DOS和PDOS"><a href="#3-2-能带结构，DOS和PDOS" class="headerlink" title="3.2 能带结构，DOS和PDOS"></a>3.2 能带结构，DOS和PDOS</h2><p>计算得到的块SrFeO3、SrCoO3、SrCo0.8Fe0.2O3、SrCoxFe1-xO3和氧缺陷SrCoxFe1-xO2.75钙钛矿的电子能带结构详见支持信息中的图S4和图S5。所有研究的配置在铁磁（FM）配置下均表现稳定。图2展示了优化后的钙钛矿的计算费米能量。  根据计算得到的能带结构，SF、SC、SCF-5和SrCoxFe1-xO3都是金属，这与之前报道的理论和实验结果一致【53,54】。SCF-5与SF之间的费米能量差异较大（0.33 eV），这是由于在费米能级以上添加了自由电子态，且Co的引入增加了额外的电子。SF、SC和SCF结构中引入有序的氧空位使费米区填充了氧的2p态，并保持了无带隙的金属性质。计算得到的SrCoxFe1-xO2.75的带隙遵循以下趋势：SCF-0.25（0.17 eV）&lt; SCF-0.50（0.74 eV），表现出非金属行为，而SCF-0.75则表现为金属。SCF-0.50的带隙大于SCF-0.25，这解释了其较高的化学稳定性。在SCF-0.25中Fe浓度的增加和SCF-0.75中Co浓度的增加导致带隙的减小，表明氧2p能级的占据。</p><p>所有钙钛矿的电子结构通过分析态密度（DOS）和部分态密度（PDOS）进行了研究，相关数据见支持信息中的图S6、S7、S8、S9和S10。从PDOS中可以看出，费米能级附近的显著贡献来自金属（Fe和Co）的d轨道，其中存在未配对电子。</p><p><span style="color:red">图2<br>计算的优化钙钛矿的费米能级（单位：eV）</span><br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/post/文献图片/翻译三/img95.jpg" style="width:400px;"/></div></div></p><h2 id="3-3-光电特性"><a href="#3-3-光电特性" class="headerlink" title="3.3 光电特性"></a>3.3 光电特性</h2><p>为了理解这些材料的导电行为，计算了优化后钙钛矿的功函数（有无氧空位）。图3展示了各种优化后钙钛矿的计算功函数。在SC中，与SF中的Fe相比，Co多了一个额外的3d电子，因此3d带向更高能级移动，结果，费米能级从SrFeO3中的-7.53 eV移动到SrCoO3中的-7.39 eV，如支持信息中的DOS图（图S6）所示。这导致与SF相比，SC的功函数增加。在SCF-5中，Fe替代Co导致相对于纯SC和SF钙钛矿，功函数进一步降低。氧缺陷钙钛矿含有较低氧化态的金属（在SrMO2.5中为M3+，在SrMO3中为M4+），这导致功函数的降低。氧缺陷SCF-5a的功函数低于SCF-1b，这是由于金属多面体配位不同。氧缺陷的SCF-0.25和SCF-0.75的功函数比其无氧空位的对应物低0.16 eV。氧缺陷SCF-0.50的功函数比无氧空位的SCF-0.50高0.49 eV，这归因于SCF-0.50的结构和组成，其中两个FeO5方锥相邻。总结来说，氧缺陷SCF-0.50具有最高的功函数，这支持其非导电行为，而SF-b则具有最低的功函数，是一种导电材料。</p><p><span style="color:red">图3<br>计算的各种优化钙钛矿的功函数（单位：eV）。给出了用于计算的确切成分及其相应的功函数值</span><br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/post/文献图片/翻译三/img104.jpg" style="width:400px;"/></div></div></p><h2 id="3-4-Bader-电荷分析"><a href="#3-4-Bader-电荷分析" class="headerlink" title="3.4 Bader 电荷分析"></a>3.4 Bader 电荷分析</h2><p>表2中的Bader电荷计算用于量化 钙钛矿的电荷转移量，并帮助理解电子特性的变化。在所有考虑的配置中，晶格中Sr的平均电荷接近+2，这显示出该金属的惰性特性。Sr阳离子的作用是通过作为电荷供体为过渡金属层间提供刚性，从而为MO3框架提供约2个电子。晶格氧的电荷在SC、SF和SCF-5钙钛矿中在-1.16到-1.18e之间波动，而在氧缺陷钙钛矿中，平均电荷增加，SC-b和SF-b的电荷在-1.42到-1.45e之间，SCF-5a和SCF-1b则分别在-1.32到-1.37e之间。氧缺陷钙钛矿中电荷积聚更多，是由于氧2p轨道的空位被填充，导致零带隙的形成。在SC和SF钙钛矿中，Co和Fe离子的电荷分别为1.49和1.57e，而在SCF-5中，电荷分别增加了0.04和0.1e。Bader电荷分析表明，电子从Co和Fe阳离子转移到O阴离子。在SCF-5中，Fe掺杂导致Co和Fe到O离子的电荷转移增加。但与SC-b和SF-b钙钛矿相比，氧缺陷SCF-1b和SCF-5a的电荷转移减少。Co、Fe和O原子的电荷与纯离子相互作用（即Co³⁺/Fe³⁺、Co⁴⁺/Fe⁴⁺和O²⁻）相比，存在较大的偏差，表明M-O键之间存在结合的离子和共价特性。</p><p>图4展示了钙钛矿的2D电子密度分布，以说明层的键合和电荷分布特性。在这些钙钛矿中，观察到氧和金属原子的轨道轻微极化，表明M-O键既具有共价性，也具有离子性（见图S11）。</p><p><span style="color:red">表2<br>优化的体相和缺氧序列化SF、SC和SCF钙钛矿的平均原子Bader电荷</span><br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/post/文献图片/翻译三/2.jpg" style="width:400px;"/></div></div></p><p><span style="color:red">图4<br>SCF钙钛矿的电子概率密度分布等高线</span><br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/post/文献图片/翻译三/img105.jpg" style="width:400px;"/></div></div></p><h2 id="3-5-氢化钙钛矿"><a href="#3-5-氢化钙钛矿" class="headerlink" title="3.5 氢化钙钛矿"></a>3.5 氢化钙钛矿</h2><p>氢储存性能的研究通过将氢以以下三种形式引入钙钛矿结构中：（1）氢原子，(2) 氢分子，(3) 水分子。将氢引入优化的氧缺陷SF-b、SC-b、SCF-1b和SCF-5a钙钛矿晶格中时，发现具有不同氧空位位置的SrCo₀.₈Fe₀.₂O₂.₅钙钛矿的结构并不稳定。另一方面，氧缺陷SrCoxFe₁₋xO₂.₇₅钙钛矿对氢化反应较为有利。图5展示了所有优化的氧空位钙钛矿，这些结构适合氢储存。所有研究的氧缺陷钙钛矿在氢化过程中都在能量上得到了稳定化，SF钙钛矿中Fe含量的氢化稳定化能为1.5至5 eV。然而，在SC和SCF钙钛矿中，氧空位位置对氢化是选择性的。具有CoO₅方锥的氧缺陷SC在能量上是可行的，而其他氧缺位结构则不可行。在SCF钙钛矿中，含有MO₆八面体与MO₅方锥结构交错的配置是优选的氢化位置。   为研究氢储存，氢原子和氢分子被引入到1x1x4超晶胞中的优化空位。图5展示了氢化钙钛矿的所有优化结构，图6和图S12则展示了金属配位框架，重要的键长和键角，以及氢化钙钛矿的电子概率密度分布轮廓。</p><p><span style="color:red">图5<br>各种缺氧钙钛矿（上图）和氢化钙钛矿（下图）的优化结构。蓝色、金色、红色和灰色原子分别表示Co、Fe、O和H。蓝色圆圈表示H和H2与金属的相互作用。图中还显示了氢化钙钛矿形成的相互作用能（I.E.，单位：eV）</span><br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/post/文献图片/翻译三/img112.jpg" style="width:400px;"/></div></div></p><p><span style="color:red">图6<br>氢化SF、SC和SCF钙钛矿的优化金属配位框架和电子概率密度分布等高线。图中还显示了键长（单位：Å）和键角（单位：°）</span><br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/post/文献图片/翻译三/img121.jpg" style="width:400px;"/></div></div></p><p>氢化的SF钙钛矿（由FeO₅方锥构建）的优化结构中，Fe–H的短键距为1.71 Å，长键距为2.29 Å，并伴有畸变的Fe配位体。与之类似，具有CoO₅方锥的SC钙钛矿显示出Co–H的键距分别为1.78和1.79 Å。氢分子引入SC晶格时，H–H键伸长至1.67 Å，并且氢占据稳定的位置，形成Co–H（距离为1.89和1.85 Å）和O–H（距离为0.99 Å）。氢化SF和SC钙钛矿的电子概率密度分布清楚地显示出氢与Fe的3d轨道之间的轨道重叠，形成Fe–H键；而在SC中，轨道重叠发生在氢和两个Co中心之间，形成Co–H–Co桥接结构。含氢分子的SC中，电子密度分布图显示了O–H和Co–H–Co桥的形成，表明Co和氧的轨道与氢轨道之间的混合。   在SF钙钛矿的氧空位晶格中未观察到氢分子的引入。在SF和SC钙钛矿中，氢的平均电荷为0.56 e，但在氢分子与SrCoO₂.₅晶体的结合中，氢在O–H处的电荷为0.62 e，在Co–H处为0.58 e。其他氧空位SF模型的稳定配置是通过引入中性氢原子到FeO₄方平面和FeO₅方锥的空位中，这些结构形成了稳定的氢化位置，氢的典型电荷为0.59–0.61 e。Fe–H的键距变化在1.87和1.92 Å之间。随后，将氢分子引入包含FeO₄方平面的结构中，导致了由于O–H的形成，晶胞的倾斜。O–H的键距为1 Å，氢的电荷为0.62 e。Fe–H的键距为1.87和1.89 Å，氢的电荷为0.58 e。同样，氢分子被引入FeO₅方锥的结构中，也导致了O–H的形成，键距为1 Å，而Fe–H的键距为2.01和2.05 Å，氢的电荷为0.62 e。有趣的是，在FeO₅方锥的共享空位中引入H₂并没有导致O–H的形成，而是作为氢桥连接在两个Fe中心之间，H–H键距为0.79 Å，氢的电荷为0.55 e。   氢在H₂分子中的电子电荷相较于氢氧基（OH）较小，这是由于氢氧基中电子的部分去局化。在氢化过程中的键合特性通过电子概率密度分布图进一步阐明（见图6）。这些电子密度分布图进一步证明了金属和氢之间存在显著的轨道重叠和极化，导致Fe–H键的形成。当H₂分子被引入氧缺陷的SF钙钛矿时，电子密度轮廓显示H–H键断裂并形成O–H和Fe–H键；然而，在H₂占据两个FeO₅方锥之间的共享氧空位时，H–H键并未断裂，仍然保持为H₂分子。所有这些观察结果表明，SF钙钛矿模型可能作为高效的氢储存材料。</p><p>氢化SCF钙钛矿（SrCoxFe1-xO2.75）展示了显著的结合特性，这些特性取决于Fe和Co的组成以及它们的配位环境。氢原子和氢分子被引入到优化的氧缺陷SCF模型中。在所有三种SCF配置中，氢原子占据了SCF-0.75中的一个能量上有利的位置，即位于CoO5和FeO5方锥之间，且这两者与CoO6八面体交错排列。氢分子则在SCF-0.25和SCF-0.50中占据了有利位置（即位于CoO5和FeO5方锥之间，这两者与FeO6八面体交错排列；以及位于两个FeO5方锥之间，这两者与CoO6八面体交错排列）。在这些SCF配置中，有利于H2分子结合的SCF钙钛矿并不倾向于在其位置上结合氢原子，反之亦然。在氢掺入SCF-0.75钙钛矿时，观察到短的Co–H和拉长的Fe–H键距离分别为1.74 Å和1.97 Å，其中氢原子带有0.57 e的电荷。Co–H键的形成也可以从电子密度图看出，在其中可以看到氢和钴轨道之间的显著混合。氢分子在SCF-0.50中掺入到两个FeO5方锥之间时，氢分子沿c轴方向以单齿配位的方式定向；H–H键距离为0.78 Å，氢原子带有0.54 e的电荷。而氢分子放置在SCF-0.25的CoO5和FeO5方锥之间时，氢分子倾斜并且垂直于c轴，采用了双齿配位的方式。H–H键的距离为0.80 Å，氢原子带有0.55 e的电荷。电子密度分布图显示H2与金属和氧之间没有轨道重叠。总之，这些SCF钙钛矿可以作为潜在的氢气储存材料。</p><p>由于我们研究中的所有氧缺陷模型在能量上对SF钙钛矿是有利的，我们通过在300 K和1个大气压下将水分子引入氧缺陷SrFeO3片层表面，进行了第一性原理分子动力学计算。模拟结果显示，水分子开始与表面相互作用，并在197 fs时与表面的氧原子形成氢键（见图7）。在302 fs时，水被分解成O–H和H，其中H与表面的氧形成键，键距分别为1 Å和0.91 Å（见图7）。这两个羟基(O-H)通过氢键相互连接，距离为1.8 Å。此时，这两个羟基之间的氢键在544 fs时断裂，Fe–OH的距离为3.2 Å（见图7）。羟基在768 fs时开始向Fe靠近，距离为2.73 Å，O–H键保持完好，O–H水分子($O‒H_{water}$ )的键距为0.98 Å，表面O–H水($O_{surface}-H_{water}$)的键距为0.96 Å。进一步的模拟导致水分子的质子迁移到邻近的表面氧上，并在1.06 Å的距离形成O–H键。这个羟基在1.98 Å的距离与水中的羟基通过氢键结合。当达到1169 fs时，质子返回到最初的氧化物位点，Fe–OH和O–H的键距分别为2.63 Å和1 Å。纯SF钙钛矿中的氧空位被羟基离子填充，这得益于水分子的质子与邻近氧化物离子的强结合。质子通过从一个氧化物离子跳跃到另一个氧化物离子来迁移。因此，水分解和质子转移反应可以表示为：</p><script type="math/tex; mode=display">H_2O + O_{(perovskite surface)} + \Box_{(vacancy site)} \rightarrow OH - - OH \rightarrow 2OH</script><p><span style="color:red">图7<br>在1250 fs模拟过程中，氧缺陷SrFeO3表面和水分子靠近表面的快照</span><br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/post/文献图片/翻译三/img128.jpg" style="width:400px;"/></div></div></p><h1 id="4-结论"><a href="#4-结论" class="headerlink" title="4. 结论"></a>4. 结论</h1><p>在本研究中，我们比较了体相SrCoO3、SrFeO3、铁掺杂SrCo0.8Fe0.2O3和SrCoxFe1-xO3（x = 0.25, 0.50, 0.75）钙钛矿的结构和电子性质。我们的计算结果表明，铁掺杂钙钛矿中Fe的位置和组成显著影响这些钙钛矿的电子性质和反应性。铁掺杂钙钛矿倾向于形成Fe多面体相互邻接的结构。计算的能带结构显示，除了氧空位的SCF-0.25和SCF-0.50表现为非金属性质外，体相和氧缺陷的SF、SC和SCF钙钛矿表现为金属性质。组成和铁掺杂的影响也体现在功函数的计算中，其中观察到SrFeO2.5表现为导电性，而SrCo0.5Fe0.5O2.75表现为非导电性。从Bader电荷分析可以注意到从Co/Fe阳离子到氧阴离子的电子转移。氢化氧缺陷SCF钙钛矿在HER（氢气演化反应）机制中根据钙钛矿结构和组成的不同，选择性地吸附了中间体。氢原子和氢分子在这些钙钛矿配置中根据Co和Fe的配位环境表现出优先的键合和定向性。在SCF-0.75中，当氢原子占据空位时形成了一个能量稳定的结构，而氢分子则在SCF-0.25中占据了一个有利的位点，呈线性H2配置，而在SCF-0.50中则呈侧面H2配置。位于氧空位位点的氢分子在SCF-0.25和SCF-0.50中引发了结构转变，从而为调控材料功能性开辟了可能性。通过将水分子引入氧缺陷SF钙钛矿表面进行的第一性原理分子动力学计算揭示了水分子被分解成羟基离子和质子。氧空位被羟基离子占据，水分子的质子与邻近的氧化物离子结合。总之，这些观察结果表明，Fe在稳定HER中间体方面发挥了重要作用，从而提高了催化活性。本研究为铁掺杂钙钛矿中Fe位置和组成以及氧缺陷有序性的作用提供了有价值的见解，为未来设计和开发钙钛矿用于HER提供了方向。</p>]]></content>
      
      
      <categories>
          
          <category> 文献翻译 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文献翻译(二)</title>
      <link href="/2024/11/24/%E6%96%87%E7%8C%AE%E7%BF%BB%E8%AF%91-%E4%BA%8C/"/>
      <url>/2024/11/24/%E6%96%87%E7%8C%AE%E7%BF%BB%E8%AF%91-%E4%BA%8C/</url>
      
        <content type="html"><![CDATA[<h1 align="center"><strong><b>一种具有拓扑转化特性的铁氧体突触晶体管(A Ferrite Synaptic Transistor with Topotactic Transformation)</b></strong></h1><p>受生物神经形态系统的启发，模拟生物突触功能的人工突触器件的硬件实现备受关注。本文展示了一种基于晶相间拓扑相变的三端铁氧体突触器件。通过电解质门控控制的拓扑相变在褐铁矿 $SrFeO_{2.5}$ 和钙钛矿 $SrFeO_{3−δ}$ 之间实现，并通过晶体和电子结构分析加以确认。利用门控可调的多级导电状态，成功构建了一种具有电解质门控铁氧体薄膜的突触晶体管，这些导电状态源自拓扑相变诱导的不同缺氧钙钛矿结构 SrFeOₓ。这种三端人工突触能够模拟重要的突触功能，如突触可塑性和脉冲时间依赖性可塑性。由铁氧体突触晶体管构成的神经网络的仿真结果表明，该系统具有较高的分类精度。这些结果为高级拓扑相变材料在设计高性能人工突触中的潜在应用提供了见解。</p><h1 id="1-正文"><a href="#1-正文" class="headerlink" title="1.正文"></a>1.正文</h1><p>人脑中的学习和记忆是通过生物突触网络之间连接强度的动态变化来实现的【1】。人脑能够更强大地处理数据和识别模式，主要得益于神经元之间这种突触连接的存在【2】。因此，设计具备生物突触功能的人工突触对于实现模拟突触功能的神经网络硬件化至关重要【3】。突触可塑性和非易失性是模仿突触中学习和记忆的关键特性【4】。基于硅的互补金属氧化物半导体（CMOS）电路利用数十个晶体管来模拟突触活动。然而，这种方法需要非常大的面积且消耗大量能量，从而阻碍了其进一步发展【6】。基于金属氧化物【7–12】、铁电材料【13,14】和相变材料【15,16】的两端子忆阻器，作为能够模拟突触功能的非易失性存储器引起了广泛关注，如突触可塑性和脉冲时间依赖性可塑性（STDP）。这些器件中的多种可调电阻状态被用于存储突触权重，展现出突触可塑性。 近年来，提出了三端电解质栅控晶体管用于人工突触的应用。由于具备额外的栅极控制，三端器件似乎更适合实现低能耗的突触功能【18–22】【4,23,24】。信号传输和学习过程可以同时进行，因为信号传输通过通道完成，而突触权重通过栅极端调控【17】。此类突触晶体管极大地丰富了类脑计算设备，为构建人工神经网络提供了一种有前景的方法【25,26】。这类器件的通道需要采用先进的薄膜材料，以在电解质栅控下实现多重电阻状态。</p><p>在功能氧化物中，拓扑相变可实现晶体相之间的可逆结构变化，这与作为相变存储基础的非晶态和晶态之间的相变不同【27】。拓扑相变通过调节氧化物中的氧化学计量比，提供了一种有效的方法来操控物理性质【28,29】。锶铁氧化物 ($SrFeO_x, SFO$) 拥有拓扑相变特性，已在燃料电池、氧气传感器、电阻存储器和催化剂等多种技术应用中得到了研究【30–33】。$SFO$的晶体结构呈现多种不同的缺氧钙钛矿结构，氧化学计量比x在2.5至3之间变化【29,34–36】。其中，具有$FeO_6$八面体与$FeO_4$四面体交替层的褐钙矿$ (BM)-SFO$ 为绝缘体，而通过氧原子填充空位的$PV-SFO$，拥有以$FeO_6$八面体为角共享的结构（图1b），表现出金属导电性【32,35,36】。目前，大多数研究是通过控制不同氧气环境下的氧化还原反应来实现$SFO$的拓扑相变，但这限制了其在类脑计算电子器件中的应用。近年来，离子液体栅控 (ILG) 作为一种新颖的材料性能调控方法，逐渐受到关注，它不仅通过静电效应，还通过离子迁移引发的相变来实现电化学效应【37-39】。Lu等的开创性研究显示，通过ILG控制的功能离子在钴酸盐薄膜中的插入和提取，可实现不同相之间的可逆相变【38】。这一成果表明，拓扑相变材料可能是用于电解质栅控突触晶体管通道的理想候选材料。<br><span style="color:red">图 1. 电解质栅控下结构相的演变。</span></p><p><span style="color:red">a,b) 沿着 SrTiO₃ 衬底的 [100] 方向，展示了褐钙钛矿 SrFeO₂.₅ (a) 和钙钛矿 SrFeO₃₋δ (b) 薄膜的示意晶体结构。</span></p><p><span style="color:red">c,d) 原始褐钙钛矿相 SrFeO₂.₅ 薄膜的横截面 HAADF-STEM 图像 (c) 和面内 Sr-Sr 距离 (d)。</span></p><p><span style="color:red">e,f) 栅控后的钙钛矿相 SrFeO₃₋δ 薄膜的横截面 HAADF-STEM 图像 (e) 和面内 Sr-Sr 距离 (f)。</span><br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/post/文献图片/翻译二/img43.jpg" style="width:400px;"/></div></div></p><p>在本研究中，我们通过电解质栅控实现了$SrFeO_x$（2.5 ≤ x ≤ 3.0）外延薄膜的可逆拓扑相变。我们利用这种连续的拓扑相变构建了基于离子液体栅控的SFO薄膜突触晶体管。该突触晶体管展示了重要的突触功能，包括增强、抑制和脉冲时间依赖的可塑性（STDP）。这种在SFO薄膜中实现BM相和PV相之间拓扑相变的突触晶体管，为构建未来的类脑计算系统开辟了一条新途径。</p><p>采用脉冲激光沉积法在（001）取向的$SrTiO_3$（STO）衬底上生长了BM-SFO外延薄膜（详见实验部分）。X射线衍射（XRD）和X射线倒易空间映射（RSM）图谱表明，所生长的薄膜包含面外BM相，其缺氧的$FeO_4$四面体层垂直于薄膜表面（图S1a, b，支持信息）[34,36,40]。随后，我们通过离子液体栅控（ILG）研究BM相和PV相之间的结构转变。使用离子液体N,N-二乙基-N-(2-甲氧基乙基)-N-甲基铵双（三氟甲基磺酰）亚胺（DEME-TFSI）作为电解质栅控介质。由于拓扑相变的非易失性特征，我们可以进行各种非原位测试，以探究栅控后SFO薄膜的变化。经过ILG处理后，薄膜的晶体结构转变为类似PV的结构（图S1c, d，支持信息）。我们监测了SFO外延薄膜在ILG过程中进行的原位XRD $θ–2θ$扫描，以直接观察结构相变（图S2，支持信息）。这些结构测试表明，通过ILG引发的BM相和PV相之间的转变是可控且非易失的。相变过程中所需的氧可能来自大气[41]以及离子液体中的水分含量[38,39]。扫描透射电子显微镜（STEM）结果进一步证实，SFO薄膜在原子尺度上通过ILG发生了BM相和PV相之间的相变。在高角度环形暗场（HAADF）STEM图像中，缺氧四面体（$FeO_4$）和完全氧化的八面体（$FeO_6$）子层交替堆叠，显示出周期性暗条纹（图1c）。四面体和八面体子层内Sr-Sr的平面原子间距分别约为4.4 Å和3.4 Å（图1d）。在SFO薄膜经过负向栅控后，典型的PV结构清晰可见（图1e），其平面内Sr-Sr原子间距约为3.83 Å（图1f）。从HAADF-STEM图像中获得的平面(面内)和面外晶格常数总结在支持信息的图S3中。</p><p>相关的电子能量损失谱（EELS）（图S4，支持信息）和X射线吸收光谱（XAS）（图S5，支持信息）也揭示了负向栅控后BM相向PV相的相变。初始的BM-SFO薄膜为绝缘体，而通过ILG形成的PV-SFO薄膜具有更高的导电性（图S6，支持信息）。此外，我们可以通过施加偏压栅控来电控转换薄膜的颜色，颜色从浅黄色变为不透明（图S7，支持信息）。所有这些物理特性使电解质栅控的SFO薄膜在构建高稳定性的突触晶体管方面具有极大的应用潜力。</p><p>我们设计了一种电解质栅控晶体管架构，使用原始的BM-SFO外延薄膜作为通道材料，以模拟生物突触的功能。图2a展示了该器件结构的示意图。利用标准光刻技术将生长的BM-SFO薄膜图案化为微米级通道，并布置同平面的栅电极（详见实验部分）。图2b显示了典型器件的光学图像，图中包含一滴DEME-TFSI电解液。栅极电压VG以1 mV/s的速度扫描，源-漏电压VSD为0.6 V。传输曲线显示出明显的滞回环，表明具有良好的可逆性（图2c）【41】。栅极泄漏电流IG比源-漏电流ISD小约两个数量级，反映出IG对器件性能的影响可以忽略不计（图2d）。通道可以在低导电态和高导电态之间可逆调控。随着VG从0扫向负值，器件导电性(电导率)增加；而当VG大于0时，器件导电性(电导率)降低。传输曲线与SFO薄膜的拓扑相变现象一致。负向栅控可触发SFO薄膜从绝缘的BM相转变为导电的PV相，而正向栅控可使SFO薄膜从导电的PV相回到绝缘的BM相。</p><p><span style="color:red">图 2. 电解质栅控铁氧体晶体管</span></p><p><span style="color:red">a) 晶体管结构和测量设置的示意图。SrFeOx 薄膜形成源（S）和漏（D）电极之间的通道，离子液体（DEME-TFSI）作为栅控介质</span> </p><p><span style="color:red">b) 一种典型铁氧体晶体管设备的光学图像，显示了离子液滴</span> </p><p><span style="color:red">c) 片电导率与栅电压的关系。此处，栅电压 VG 以 1 mV s⁻¹ 的速度扫描。箭头指示了栅电压扫描的方向</span> </p><p><span style="color:red">d) 转移曲线测量中的栅漏电流</span> </p><p><span style="color:red">e) 片电导率 G 随时间变化的曲线，负栅电压序列（−0.6、−1.2、−1.8、−2.0 V）每次脉冲间隔 6 分钟，正栅电压序列（2.0、1.8、1.2、0.6 V）每次脉冲间隔 6 分钟。源-漏电压 VSD = 0.6 V</span><br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/post/文献图片/翻译二/img59.jpg" style="width:400px;"/></div></div></p><p>为了展示突触功能所需的多级状态，电解质栅控的SFO晶体管通过向栅极发送一系列电压脉冲进行操作（图2e）。这些脉冲序列包括“写入”操作，即一系列VG脉冲施加到栅极。在脉冲序列期间，通道电导率在“读取”操作中以VSD = 0.6 V进行测量。与大多数突触晶体管相比，SFO基突触晶体管的电导率（≈5 nS）非常低（参见支持信息表S1），这种超低电导率对于设计大规模器件阵列的神经网络尤为重要。  最初，BM-SFO通道在零偏压下保持200秒电导率恒定，从而排除VG = 0时化学反应的影响。在负电压脉冲序列作用下，通道电导率从5 nS逐步增加至12 nS。在每次负“写入”操作期间，通道电导率由于SFO通道从绝缘BM相向导电PV相的相变而增加。更高的VG值会引起更大的通道导电调制。通道电导率在每次“写入”操作后可保持不变，表明具有固有的非易失性行为。这种非易失性源于结构相的稳定性，对于实现低能耗的神经形态器件至关重要。基于绝缘BM和金属PV混合相的不同比例，这些电压控制的多级状态得以形成。施加负VG可增加通道电导率，而施加正VG则可降低通道电导率（图2e）。该状态可至少稳定保持$2 × 10^4$秒，表现出良好的保持特性（参见支持信息图S8）。值得注意的是，通过拓扑相变诱导的PV-SFO薄膜在一年后仍然保持稳定。良好的保持特性对于离线训练的人工神经网络尤为重要。随后的一组正VG脉冲将器件电导率恢复至初始状态。具有VG控制的多级导电状态的电解质栅控铁氧体晶体管为设计突触器件提供了独特机会。</p><p>利用电压控制的多级导电状态，我们展示了电解质栅控铁氧体晶体管能够表现出神经形态器件的突触功能，这些功能是神经形态设备的构建基础。激发兴奋性突触后电流（EPSC）是神经元传输的主要过程的关键特征。为评估SFO晶体管中的突触响应，我们向栅极施加了一系列不同偏置幅度的突触前脉冲，并在VSD = 0.6 V的条件下同时监测源-漏电流（ISD）。脉冲宽度固定为5秒。显然，突触前脉冲（VG）在SFO通道中触发了突触后电流（ISD）（图3a），且EPSC可以通过改变VG脉冲幅度来调节。短期记忆到长期记忆的过渡利用了静电和电化学效应，并随VG的增加而发生（图3a）。在这里，我们主要利用SFO薄膜的拓扑相变来模拟生物突触的长期现象。  此外，EPSC可以通过改变突触前脉冲的脉冲宽度来调节。施加的栅极脉冲幅度固定为-2 V。随着脉冲宽度的增加，栅极脉冲触发的EPSC峰值和保持值增加（图3b）。图3c显示，通过向电解质栅控SFO晶体管发送交替的负向和正向栅极脉冲，可以控制双稳导电状态。施加16个-1.8 V的负向VG脉冲将电导率从4.8 nS增加到7.8 nS。接着，使用24个幅度为+1.8 V、脉冲宽度为10秒的VG脉冲，将导电状态逐步降低，电导率最终从7.8 nS减少到4.8 nS。重复这些测量的循环表明非易失性存储行为完全可复现，并在第一次循环中重复了VG的过程。</p><p><span style="color:red">图 3. 用于神经形态计算的铁氧体突触晶体管特性</span></p><p><span style="color:red">a) 一系列栅电压脉冲（脉冲宽度为 5 秒）和不同电压幅值（−0.6、−1.0、−1.4 和 −1.8 V）引起的EPSC</span></p><p><span style="color:red">b) 一系列栅电压脉冲（幅值为 −2.0 V）和不同脉冲宽度（10、20、30、40 和 60 秒）引起的EPSC</span></p><p><span style="color:red">c) 通过应用两次栅电压脉冲（−1.8 V 和 1.8 V）对片电导率进行调节，并测试在零偏压下的保持性能。使用了 16 次 −1.8 V 脉冲和 24 次 1.8 V 脉冲。脉冲宽度为 5 秒，脉冲间隔为 10 秒</span></p><p><span style="color:red">d) VG 控制的长期增强和抑制行为，使用了 16 次负脉冲（−1.8 V，5 秒，间隔 10 秒）和 24 次正脉冲（1.8 V，10 秒，间隔 10 秒）</span></p><p><span style="color:red">e,f) 在铁氧体突触晶体管中实现的非对称（e）和对称（f）STDP 功能。这里，Δt 是预神经元脉冲和后神经元脉冲之间的时间差</span><br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/post/文献图片/翻译二/img72.jpg" style="width:400px;"/></div></div></p><p>突触器件应模仿的关键突触属性是突触可塑性，即突触改变其权重的能力【42】。生物突触中普遍存在的长期可塑性包括长期增强（LTP）和长期抑制（LTD），分别定义为突触权重的持续增加和持续减少【43】。这些状态可以通过施加一系列连续的栅极脉冲，借助拓扑相变来调整器件的导电性来实现。LTP被广泛认为是支撑生物系统中学习和记忆的重要基础【44】。图3d展示了LTP作为脉冲数的函数的关系，其中脉冲幅度和宽度固定为-1.8 V和5秒。由于增加的负栅脉冲会有效地增加SFO通道中的氧插层，通道导电性在从绝缘BM-SFO相逐渐向导电PV-SFO相转变的过程中单调增加，从而有效地模拟了生物突触中的LTP行为。  相对地，LTD用于选择性削弱突触，在LTP后阻止进一步编码新信息。当向栅极电极施加正向突触脉冲时，会发生LTD。为演示LTD，我们在突触晶体管中施加了24个连续栅极脉冲，幅度为+1.8 V，脉冲宽度为10秒，间隔为10秒（图3d）。正向栅控倾向于从SFO通道中提取氧离子，导致从金属PV相向绝缘BM相的转变。因此，连续的正向栅极脉冲将减少EPSC。通过施加连续的负向和正向脉冲可以持续地模拟突触权重的增强和抑制，表现出可重复且非易失性的开关行为（图3d）。值得注意的是，为使单次操作中的导电（电导率）更加明显，这里应用了宽的栅极脉冲。LTP和LTD过程也可以通过窄栅极脉冲实现（图S9，支持信息）。每个脉冲的能耗（约4.8 pJ）比基于传统CMOS电路的人工突触（约900 pJ）低几个数量级【5】，与已报道的电解质栅控突触晶体管相当，但高于一些近期的忆阻器报道（表S1，支持信息）。当前的结果表明，SFO器件有望模拟生物突触中发生的突触可塑性。</p><p>脉冲时间依赖可塑性（STDP）是模拟突触功能的关键Hebbian学习规则之一，指的是突触权重因突触前后神经元脉冲的时间关联而发生变化【45–47】。突触权重的调节强烈依赖于突触前后脉冲的时间差Δt，从而能够精确控制突触权重变化的符号和幅度。基于电解质栅控SFO晶体管的通道电导率可塑性，我们成功展示了该晶体管具有STDP功能。    为了模拟STDP功能，将多路复用器的输出端连接至晶体管的栅极电极，用于将突触前后脉冲的时间差Δt转换为电压脉冲【25,48】。有关该电路的更多详细信息见图S10（支持信息）。在SFO晶体管中对一系列Δt从-600到600 s进行测试，所得通道电导率百分比变化表明该器件呈现出典型的非对称STDP功能（图3e）。在非对称STDP中，若突触前脉冲先于突触后脉冲到达（Δt &gt; 0），则发生LTP；若突触前脉冲在突触后脉冲之后到达（Δt &lt; 0），则发生LTD。得到的非对称STDP曲线可以拟合为指数衰减函数，模拟了生物突触系统的行为【45】。    通过选择合适的源脉冲形状，还可以实现对称STDP（图3f）。对于对称STDP，通道电导率的变化仅依赖于Δt的绝对值。在基于铁氧体的晶体管中成功实现 STDP 表明该材料系统为开发类脑计算器件提供了新的途径。</p><p>为了具体模拟电刺激下的突触增强和抑制过程，将字母 “I”、“O” 和 “P” 写入并从一个 3 × 5 人工突触阵列中擦除（图 4）。首先，将具有低电导率的全新人工突触以阵列形式排列。接着，通过施加 28 个 −1.8 V 栅极脉冲将字母 “I” 写入突触阵列中（图 4a）。脉冲持续时间为 2 秒，脉冲间隔为 4 秒。在脉冲列的作用下，通道电导率从 5 nS 增加到 6.7 nS。字母 “I” 的图像成功地存储在突触阵列中，并且由于拓扑相变的非易失性，该图像可以持续存储一个小时。这一非易失过程展示了这些人工突触如何用于数据存储。  在写入“I”图案后，通过施加虚假脉冲（−0.3 V 振幅，2 s 宽度）测试容错性（图 4b）。突触阵列对写入脉冲敏感，而对虚假脉冲不敏感。施加低偏压的虚假刺激脉冲列后，短期内的电导率增加迅速衰减（图 S11，支持信息）。这种短期现象可以用静电效应来解释【24】。当施加反向脉冲列时，通道电导率可恢复到初始值，且图案 “I” 完全消失，显示了这些人工突触的可擦除性。  为了更直观地展示写入和擦除过程，通过施加增强和抑制脉冲，先后将字母 “I”、“O” 和 “P” 的图像写入突触阵列（图 4c）。颜色等级表示在施加脉冲列后通道电导率的变化。上述实验结果表明，电解质栅控SFO晶体管可模拟生物突触，凸显了该材料系统在类脑计算器件开发中的创新潜力。</p><p><span style="color:red">图 4. 钡铁氧体突触阵列用于图像记忆</span></p><p><span style="color:red">a) 实现为可训练内存的 3 × 5 突触阵列。通过使用 28 次脉冲（幅值 −1.8 V，脉冲持续时间 2 秒，间隔 4 秒），将字母 “I” 图像输入到内存阵列中。这些突触在接下来的一个小时内表现出长期记忆，表明电解质门控产生了稳定的相态</span></p><p><span style="color:red">b) 突触内存不受干扰输入（幅值 −0.3 V，15 次脉冲，脉冲持续时间 2 秒）的影响，显示出良好的容错性。随后，通过施加正栅电压脉冲（幅值 1.8 V，22 次脉冲，脉冲持续时间 4 秒），突触阵列“遗忘”输入的图像</span></p><p><span style="color:red">c) 字母 “I”、”O” 和 “P” 的图像依次被编程到突触阵列中并从中擦除</span><br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/post/文献图片/翻译二/img78.jpg" style="width:400px;"/></div></div></p><p>我们进一步模拟了人工神经网络的性能，使用实验测得的导电状态（图3d）对两个数据集进行了反向传播训练：一个是“手写数字光学识别”数据集中8×8像素的小图像版本【49】；另一个是“修订版国家标准与技术研究所”（MNIST）数据集中28×28像素的大图像版本【50】。在我们的模拟中，采用了一个简单的三层网络（包含一个隐藏层），使用CrossSim【51】模拟器，如图5a所示。图5b中的示意图显示了一个突触权重层的交叉阵列，这里，交叉阵列作为“神经核心”的一部分，执行矢量-矩阵乘积和外积更新操作【4,52】。  在增强和抑制过程中的累积分布函数绘制在支持信息的图S12中。图5c和5d展示了使用铁氧体突触晶体管训练神经网络的结果，以及理想浮点数神经网络性能的模拟，后者为该算法提供了理论上的极限。对于小数字，分类准确率在第二个训练周期内接近90.6%，在16个训练周期后达到95.2%（图5c）。值得注意的是，对于小数字，理想数值训练的理论极限为96.7%。对于大数字，我们的模拟显示，使用铁氧体突触晶体管的神经网络可以达到92.7%的分类准确率（图5d）。虽然识别准确率略低于一些最近的突触器件【52,53】，但显著高于双端电阻式存储器（20-70%）和相变存储器设备（82.2%）的准确率【54】。   提高识别准确率的关键在于增强和抑制过程的线性和对称性【52】。进一步的材料和器件改进仍然需要，以在这种突触晶体管中达到更高的识别准确率。</p><p><span style="color:red">图 5. 使用各种设备参数的图像识别模拟</span></p><p><span style="color:red">a) 三层神经网络的示意图</span></p><p><span style="color:red">b) 显示硬件实现的示意图，其中突触层由电解质门控晶体管交叉条阵列和接入设备组成</span></p><p><span style="color:red">c,d) 小数字（c）和大数字（d）在理想设备和铁氧体突触晶体管的训练周期中的准确度演变</span><br><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/post/文献图片/翻译二/img83.jpg" style="width:400px;"/></div></div></p><p>综上所述，我们提出了一种新型的三端突触晶体管，采用了SFO这种具备拓扑相变特性的材料。在实验中，通过XRD和STEM测量确认了带有离子液体栅极（ILG）的SFO薄膜在BM和PV相之间的转变。存储状态的切换与SFO薄膜中绝缘BM相和导电PV相之间的切换有关，这归因于通道材料中氧离子的插入和提取。这种三端人工突触能够实现包括突触可塑性和脉冲时序依赖性可塑性（STDP）在内的重要突触功能。基于这些铁氧体突触晶体管构建的人工神经网络在手写数据的分类任务中显示出较高的准确性（95.2%）。拓扑相变具有天然的非易失性、可逆性和稳定性。将先进的拓扑相变材料引入突触晶体管中，有望促进新型高性能神经形态器件的发展。</p><h1 id="2-实验部分"><a href="#2-实验部分" class="headerlink" title="2.实验部分"></a>2.实验部分</h1><p>样品制备：在 (001) SrTiO₃ 衬底（MTI Ltd.）上，通过脉冲激光沉积（PLD）方法在 308 nm XeCl 准分子激光的作用下外延生长厚度为 50 nm 的褐钙钛矿相 SrFeO₂.₅ 薄膜。激光能量密度约为 2 J cm⁻²，重复频率为 2 Hz。SFO 薄膜在 750 °C 下于流动的氧气气氛中沉积，氧压为 1 × 10⁻³ Pa，并以 30 °C/min 的速率冷却至室温。SFO 薄膜的沉积速率进一步通过 X 射线反射（XRR）进行校准。</p><p>器件制备：采用标准光刻技术和氩离子刻蚀将薄膜制成带有共面栅结构的通道，通道尺寸为 210 µm × 50 µm。Pt 层通过电子束蒸发法制备作为电极。为了防止栅电极与源电极之间的电泄漏，使用硬化光刻胶作为隔离层。随后，在氧气气氛下于 250 °C 下退火 5 分钟，以增强电极接触性能。最后，通过滴加离子液体 N,N-二乙基-N-(2-甲氧基乙基)-N-甲基铵双（三氟甲基磺酰基）亚胺于通道和栅电极上完成晶体管器件的制备。</p><p>样品表征：使用 Rigaku SmartLab 仪器进行 X 射线衍射测量。在室温空气中使用分光光度计（Agilent 的 Cary 5000 UV–vis–NIR 和 Varian 的 Excalibur 3100）获得光学透射光谱。SFO 薄膜的原子结构采用 JEOL（日本东京）的 ARM-200F 扫描透射电子显微镜在 200 kV 下通过 CEOS Cs 校正器（CEOS GmbH，德国海德堡）来校正探针形成物镜球差进行表征。在接受角为 11–22 mrad 和 90–250 mrad 下采集高角环形暗场（HAADF）图像。电子能量损失光谱实验使用与透射电子显微镜附带的 Gatan 光谱仪在 STEM 模式下于 200 kV 下进行。</p><p>电学测量：在 Lakeshore 探针台中，使用 Keithley 4200 半导体参数分析仪测量电解质栅控 SFO 器件的电学特性，测量环境为常温。传输曲线的扫描速率约为 1 mV/s。温度依赖电阻(t-R)的测量也是使用 Keithley 4200 半导体参数分析仪在 Lakeshore 探针台中进行的。</p>]]></content>
      
      
      <categories>
          
          <category> 文献翻译 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文献翻译(一)</title>
      <link href="/2024/11/24/%E6%96%87%E7%8C%AE%E7%BF%BB%E8%AF%91-%E4%B8%80/"/>
      <url>/2024/11/24/%E6%96%87%E7%8C%AE%E7%BF%BB%E8%AF%91-%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<h1 align="center"><strong><b>门控可调各向异性氧离子迁移在SrCoOx中的应用：迈向新兴的基于氧化物的人工突触(Gate-Tunable Anisotropic Oxygen Ion Migration in SrCoOx: Toward Emerging Oxide-Based Artificial Synapses)</b></strong></h1><p>基于电场控制离子迁移的人工突触构造已被开发成为实现智能器件的一种有前景的方法，其优点在于低能耗。然而，人工突触要模拟生物系统中复杂的突触多样性，仍然是一项极具挑战的任务。本文采用离子液体门控的氧离子迁移，以实现绝缘态 SrCoO₂.₅ 和金属态 SrCoO₃ 之间的可逆相变，并在 [110] 晶向上利用快速氧离子传输通道实现各向异性动力学。这种依赖晶向的氧离子迁移及其导致的金属-绝缘体转变，为构建具有不同特性（例如兴奋性或抑制性特征、学习精度和协作能力）的多样化人工突触提供了一个有趣的机会。我们的研究不仅为氧化物中的各向异性离子迁移提供了深入理解，还可为多样化的基于氧化物的人工神经网络的发展奠定基础。</p><h3 id="1-Introduction"><a href="#1-Introduction" class="headerlink" title="1. Introduction"></a>1. Introduction</h3><p>电场可以有效调节材料的电学和磁学特性，为构建信息存储和人工智能（AI）领域的低能耗功能器件奠定了坚实的基础。由离子液体（IL）的栅极控制极化产生的超高电场为操纵基于氧离子注入和萃取的相关电子氧化物的基态提供了强有力的工具。例如，在三端 IL 电解质晶体管结构中，可以实现绝缘非铁磁性褐铁矿相 $SrCoO_{2.5}$ (BM-SCO) 和金属非铁磁性过氧化物相 $SrCoO_3$ (P-SCO) 之间的可逆转变。除了结构和物理性质的变化外，IL 门控机制也引起了人们的极大兴趣，例如电场和浓度梯度在离子迁移中的个体作用，以及氧骨架对离子液体门控效应的影响。然而，由电场或浓度梯度驱动的氧离子迁移的动态特性仍于理解相变的物理机制以及构建功能性器件至关重要。仍缺乏深入研究。</p><p>人工神经网络是实现 AI 的最有前景的设备原型之一，而通过离子迁移操作的三端电解质晶体管则成为模拟生物神经元和突触连接的自然选择。由于栅电极被视为突触前终端，用于施加尖峰脉冲，而其电导率可被栅极电压（尖峰脉冲）改变的沟道层相当于突触后膜，因此信号传输和学习功能可在三端电解质晶体管中同时进行。最近，许多复杂的人工突触已经被构建出来以实现记忆、遗忘、学习和逻辑运算等智能功能。并开发了各种类型的人工智能突触，包括可拉伸晶体管、基于二维的晶体管、 pi-n 结晶体管以及钙钛矿光电子突触。同时，在大规模电解质晶体管阵列中展示了计算精度高、 开关速度快、 能耗低的良好性能。</p><p>然而，在生物系统中，存在着大量的兴奋性和抑制性神经元或突触，它们遵循不同的计算和可塑性规则，共同发挥作用。通过开发具有可调响应能力的神经突触装置，在神经突触领域实现类似的多样性，仍然是一项具有挑战性的紧迫任务。在这项工作中，我们展示了氧离子的各向异性迁移，以及对BM-SCO 中电场的不同电导响应，这为离子电子器件中神经元和突触的多样性建模铺平了道路。</p><h3 id="2-结果与讨论"><a href="#2-结果与讨论" class="headerlink" title="2. 结果与讨论"></a>2. 结果与讨论</h3><h4 id="2-1-BM-SCO-中不同晶向对电导率的调制"><a href="#2-1-BM-SCO-中不同晶向对电导率的调制" class="headerlink" title="2.1 BM-SCO 中不同晶向对电导率的调制"></a>2.1 BM-SCO 中不同晶向对电导率的调制</h4><p>采用脉冲激光沉积法在 (001) 和 (011) SrTiO₃ (STO) 基底上沉积了厚度为 40 nm 的外延 BM-SCO 薄膜。以BM-SCO 为沟道材料，N,N-二乙基-N-（2-甲氧基乙基）-N-甲基铵双三氟甲基磺酰亚胺（DEME-TFSI）IL 为栅极电解质，制作了一系列双沟道电解质晶体管器件（图 1a）。图 1b–f 展示了两个串联通道（通道 I，σ₁ 和通道 II，σ₂）的电导率对栅电压 (Vgs) 的响应特征。 通道 I 和通道 II 之间的区别在于，前者直接位于 IL 之下，而后者则完全不在 IL 的覆盖范围内。我们首先关注通道 I，即 (001) 和 (011) BM-SCO 中沿 [100] 方向的通道。 图 1b 显示了 300 K 时 (001) BM-SCO 和 (011) BM-SCO 器件的栅极电压-电导率 (σ1)曲线 (σ-Vg )，其中 Vgs 从 0 逐渐变为负值，然后变为正值，最后回到 0。 当长时间施加 Vgs 且门控效应接近饱和时，从随时间变化的电导率（σ-t）曲线中提取电导率值（图 S1，佐证资料）。对于两种器件，当负 Vgs 超过阈值时，电导率显著增加，而正 Vgs 则相反。通过循环施加 Vg，可在这两种器件中实现电导率的可逆和非易失性调节。这种 Vg 引起的电导率变化应归因于氧离子的注入或提取及其伴随的 BM-SCO 与 P-SCO 之间的相变，这可通过晶体结构、价态和磁化强度的表征得到证实（图 S2–S5，佐证资料）。</p><p>(001) 和 (011) BM-SCO 的主要区别在于 (001) BM-SCO 的电导率变化所需的阈值电压较低：对于 (001) BM-SCO，电导率在 Vgs 为 -1 V 和 +0.5 V 时急剧增加和减少，而对应的 (011) BM-SCO 则分别为 -1.5 V 和 +2.2 V。由于我们的通道为平面内的，因此这些结果表明在电场作用下，(001) BM-SCO 中的面内氧离子迁移更容易、更快。</p><p>实际上，尽管晶体在平面外的取向存在差异，平面内晶体取向也会影响氧离子迁移和相变速度。下面将研究 (001) BM-SCO 中 σ1 和 σ2 沿不同晶体方向（σi-[hkl]，i 为 1 或 2，[hkl] 为面内晶体方向）对 Vg 的不同响应，以确定氧离子迁移和伴随相变的全景动力学。随着时间推进，Vg 逐步向负方向增加(图 1c、e 上半部分)，并记录不同通道和方向的电导率(图 1c、e 下半部分)。当 (001) BM-SCO 的通道沿 [100] 方向时，与 Vgs 从 0 至 -2 V 时逐步增加的 σ₁-[100] 相比，σ₂-[100] 的变化有限，如 σ-t（图 1c）和 σ-Vg（图 1d）曲线所示。直到 Vg 增加至 -2.2 V 时 σ₂-[100] 才开始显著增加。通道 I 中 σ₁ 和通道 II 中 σ₂ 的变化均由氧离子的迁移引起，分别受到 IL/BM-SCO 界面的电场以及两个通道之间氧离子浓度梯度的驱动。因此，无论通道的平面内方向如何，σ₂ 的变化始终落后于 σ₁（图 1c–f）。</p><p>然而，当比较 (001) BM-SCO 中沿 [100] 和 [110] 方向的通道时，σ₁ 和 σ₂ 的差异在很大程度上取决于晶向(图 1c–f)。当通道沿 [110] 方向时，σ₁-[110] 对 Vg 的响应速度稍快于 σ₁-[100]，而 σ₂-[110] 对 Vg 的敏感性明显更高，其在 Vg 仅为 -1 V 时便开始增加，几乎与对应的 σ₁-[110] 同步(图 1e)。在 σ–Vg 曲线中，[110] 方向通道中的 σ₁ 和 σ₂ 的最大差值仅为 2.11 S/cm（图 1f），而 [100] 方向通道中的相应值则高达 42.64 S/cm。σ₂ 对 Vg 的不同响应表明，由浓度梯度驱动的氧离子迁移具有高度的各向异性，且 [110] 方向迁移速度远快于 [100] 方向。为了避免设备多样性带来的影响，我们在同一设备中比较了 σ₂-[100] 和 σ₂-[110]（图 S6，佐证资料），进一步确认了平面内氧离子迁移的各向异性。此外，我们还注意到 IL 引起的电导率变化相对较慢（图 1c、e）。因此，未来有必要开发更高性能的离子液体以提高离子迁移速度。此外，通过增加栅电压的幅度，还可以提高离子迁移率及其引起的电导率变化（图 S7，佐证资料）。</p><h4 id="2-2-001-和-011-BM-SCO-的晶体结构"><a href="#2-2-001-和-011-BM-SCO-的晶体结构" class="headerlink" title="2.2 (001) 和 (011) BM-SCO 的晶体结构"></a>2.2 (001) 和 (011) BM-SCO 的晶体结构</h4><p>我们利用高角环形暗场扫描透射电子显微镜（STEM-HAADF）探讨了 BM-SCO 中氧离子迁移的各向异性原因。通过 (001) BM-SCO 薄膜分别沿 [100] 和 [110] 方向的投影制备了两种 STEM 样品，如图 2a 和 2b 所示。两种样品均显示出特征性的超晶格结构调制（c 轴晶胞加倍），其中氧八面体和缺氧四面体亚层交替堆叠。在 STEM-HAADF 图像（顶部）和晶体结构草图（底部）中，分别用黄色、红色和绿色球体表示 Sr、Co 和 O 原子位置。需要注意的是，[100] 和 [110] 投影的主要区别在于 [110] 投影的 CoO 亚层中存在周期性的 Co–Co 对，并且氧空位柱（VO，标记为绿色空心圆）位于 Co–Co 配对之间的空隙中。[110] 方向上的 VO 柱可以提供快速的氧离子传输通道，从而通过 σ₂-[110] 和 σ₂-[100] 的电导率变化反映了更快的氧离子迁移速度。</p><p>图 2c 展示了 (011) BM-SCO 的晶体结构（沿 [100] 方向投影）。可以观察到交替的氧八面体和四面体亚层沿 [001] 方向堆叠的调制超晶格结构，这相当于图 2a 的情况，但绕 [100] 方向旋转了约 45°。因此，(011) BM-SCO 的 VO 柱应具有平面外分量。由于 BM-SCO 的电导率是在平面内测量的，因此具有平面内 VO 柱的（001）BM-SCO 的电导率比具有平面外倾斜 VO 柱的（011）BM-SCO 的电导率变化更快。</p><span class='p red'>图1. BM-SCO中的各向异性电导率调制。a) 双通道电解质晶体管器件的示意图，其中σ1和σ2分别是通道I和通道II的电导率。通道的长度和宽度分别为400 μm和100 μm。b) (001) BM-SCO和(011) BM-SCO器件的门电压依赖的σ1（σ–Vg）曲线。c) 不同Vg下的电导率与时间（σ–t）曲线；d) 沿[100]方向的(001) BM-SCO通道的σ–Vg曲线。e) 沿[110]方向的(001) BM-SCO通道的σ–t曲线和f) σ–Vg曲线。</span><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/post/文献图片/翻译一/img58.jpg" style="width:400px;"/></div></div><h4 id="2-3-BM-SCO-人工突触的可塑性"><a href="#2-3-BM-SCO-人工突触的可塑性" class="headerlink" title="2.3 BM-SCO 人工突触的可塑性"></a>2.3 BM-SCO 人工突触的可塑性</h4><p>绝缘态 BM-SCO 和金属态 P-SCO 之间的可逆相变是人工突触晶体管的基础，而氧离子传输的各向异性在构建多样化人工突触中具有重要意义。电导率、栅电压以及由 IL 门控引起的电导率变化可以分别看作突触权重、脉冲和突触可塑性，这些是人脑学习和记忆的基础。首先，我们关注 (001) 和 (011) BM-SCO 的通道 I（通道沿 [100] 方向，σ₁-[100]）的突触性能。通过改变脉冲的幅度（单个宽度为 1 秒的 Vg 脉冲），可以调节突触权重（电导率），在 (001) BM-SCO 中可以实现短期可塑性（Vgs = -0.5 和 -1 V）和长期可塑性（Vgs = -1.5、-1.7 和 -2 V）,如图 3a 所示。短期和长期的可塑性分别对应于挥发性和非挥发性的门控效应。挥发性门控效应由静电场引起的载流子密度变化或小栅极电压下瞬时不稳定的氧离子迁移造成，而非挥发性门控效应则与较大栅压下的永久性氧离子迁移相关。</p><p>为了定量评估电导率变化，图 3b 显示了由 40 个连续负 Vg 脉冲（脉宽1秒，间隔1秒）引起的 σ₁-[100] 变化。对于连续的栅压脉冲Vg = -0.5 V和-1 V，栅压引起的电导率增强可以忽略不计，这与单个脉冲所揭示的短期可塑性一致。相比之下，连续的栅压脉冲Vg = -1.7 V和-2 V分别引起了0.28和0.35 S/cm的电导率增强，符合其长期可塑性的特征。除了脉冲幅度外，栅压脉冲的间隔时间也会影响电导率的调制效果。当Vg = -1.7 V的脉冲间隔分别为1秒、0.5秒和0.25秒时，σ1-[100]的增强值分别为0.28、0.53和0.64 S/cm。较短的间隔不仅增加了电导率在长期可塑性中的调制效果，还将可塑性从短期转变为长期，这一现象在将Vg = -1 V的脉冲间隔从1秒缩短至0.25秒时得到了验证。此外，（001）BM-SCO突触晶体管中也可以实现典型的反对称脉冲时序依赖可塑性形式，这对应于相邻神经元之间的相互作用（见图S8，支持信息）。</p><p>在 (011) BM-SCO 中，当 Vgs = -1 和 -1.5 V 时，表现出短期可塑性，而当 Vgs = -2、-2.2 和 -2.5 V 时，实现了长期可塑性，如图 3c 所示。图 3d 显示了在 (011) BM-SCO 中，40 个电压脉冲（脉宽1秒）在 栅压Vg = -1 V（1 秒间隔）、-2 V（1、0.5 和 0.25 秒间隔）和 -2.2 V（1 秒间隔）下引起的σ1-[100]的调制。与(001) BM-SCO相比，在(011) BM-SCO中，增加栅压Vg和缩短脉冲间隔同样会增强σ1-[100]，但其长期可塑性所需的Vg阈值更高。这一差异与图1b中通过连续栅压Vg进行的测量结果一致。突触权重对晶体取向的依赖性为开发具有多样化突触行为的人工突触器件提供了一个有趣的平台。</p><p>图3e–j展示了在一系列Vg操作之后，(001) BM-SCO在5×5突触阵列中的电导率分布，以可视化模拟基于短期和长期可塑性的突触记忆功能。不同图像间的操作已标注，每次操作包含 40 个 Vg 脉冲，脉冲宽度为 1 秒，间隔为 1 秒(未做特殊说明下)。图 S9（支持信息）中展示了典型像素（第一列第五行）在不同操作下的电导率演变。首先，应用 Vg = -1 V 操作在阵列中写入字母 “S”（如图 3f 所示），此时不同像素的电导率的差异形成了黑白对比。然而，由于门控效应为挥发性，电导率在 20 秒后迅速恢复到初始状态（图 3g），对应于突触的短期可塑性行为。接下来，通过 Vg = -1.5 V 操作在阵列中导入字母 “D” 的图像，20 秒后的结果如图 3h 所示。与第一次操作不同，字母 “D” 得以保持，因为较大幅度的 Vg 导致非挥发性门控效应，模拟了由更强脉冲激发的长期可塑性行为。图 3i 显示，随后使用Vg = +1.5 V的操作可以成功擦除字母“D”，这是基于 IL 门控的可逆性。在最后一次操作中，使用了一个小的负栅压Vg = -1 V，但间隔时间缩短至0.25秒（脉冲宽度为1秒），字母“U”被图案化并保持在阵列中，即使在 20 秒后仍然存在（见图 3j）。因此，更高的脉冲频率（更短的Vg脉冲间隔）也可以实现(001) BM-SCO中的长期可塑性。</p><span class='p red'>图2. BM-SCO的晶体结构。a) 沿[100]方向投影的(001) BM-SCO薄膜的STEM-HAADF图像（顶部）和结构示意图（底部）；b) 沿[110]方向投影的(001) BM-SCO薄膜的STEM-HAADF图像（顶部）和结构示意图（底部）；c) 沿[100]方向投影的(011) BM-SCO薄膜的STEM-HAADF图像（顶部）和结构示意图（底部）。白色尺度条为1 nm。</span><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/post/文献图片/翻译一/img76.jpg" style="width:400px;"/></div></div><span class='p red'>图3. 人工突触的可塑性。通过一次脉冲电压（1秒宽度）触发的兴奋性瞬时电导率，a) (001) BM-SCO和c) (011) BM-SCO。通过40次负Vg脉冲（1秒宽度）引起的突触权重（σ）调制，具有不同的幅度和间隔（图中标出），b) (001) BM-SCO和d) (011) BM-SCO。e–j) (001) BM-SCO 5×5突触阵列的电导率分布。字母“S”、“D”和“U”的图像通过一系列Vg操作在突触阵列中进行模式化或擦除。每次操作包含40次Vg脉冲，脉冲宽度为1秒，间隔为1秒或0.25秒（如图中所示）。所有电导率都在沿[100]方向的通道I中测量。</span><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/post/文献图片/翻译一/img91.jpg" style="width:400px;"/></div></div><h4 id="2-4-基于长期增强和长期抑制的手写数字识别模拟"><a href="#2-4-基于长期增强和长期抑制的手写数字识别模拟" class="headerlink" title="2.4 基于长期增强和长期抑制的手写数字识别模拟"></a>2.4 基于长期增强和长期抑制的手写数字识别模拟</h4><p>长期可塑性，包括长期增强（LTP）和长期抑制（LTD），是类脑计算和学习的核心。在(001) BM-SCO的通道I（沿[100]方向，σ1-[100]）中，长期增强（LTP）通过50个连续的Vg = -1.5 V脉冲（脉宽1秒，间隔1秒，没有具体指令）诱导，而长期抑制（LTD）则通过50个连续的Vg = +1.5 V脉冲实现，如图4a所示。图4a的插图显示了由重复的正负Vg脉冲驱动的σ1-[100]的周期性调制，其中σ1-[100]在0.22和0.59 S/cm之间切换，展示了LTP和LTD的良好可回收性。如图4b所示，通过在(011) BM-SCO中施加50个连续的Vg = -2 V脉冲，然后施加Vg = +2 V脉冲，σ1-[100]逐渐从0.20 S/cm增加至0.36 S/cm，随后又降回0.20 S/cm，表明在(011) BM-SCO中也可以实现LTP和LTD。尽管在(011) BM-SCO中栅压引起的电导率调制较小，但其可回收性也非常好（见图4b插图）。刺激结束后的电导率被提取并用于LTP和LTD曲线。此外，BM-SCO的LTP和LTD都表现出良好的线性切换特性，在(001) BM-SCO中非线性因子分别为ν = 0.61（LTP）和1.29（LTD），而在(011) BM-SCO中分别为ν = 0.70（LTP）和0.81（LTD）（见图S10，支持信息）。</p><p>基于BM-SCO人工突触的LTP和LTD，在CrossSim模拟器中构建了一个人工神经网络，用于识别“修订版国家标准与技术研究所”数据集中的手写数字（小版本为8x8像素，大版本为28x28像素）。该人工神经网络具有输入、隐藏和输出神经元的三层结构，通过突触权重（电导率）矩阵相互连接，如图4c所示。图4d展示了突触权重矩阵的硬件实现示意图，其中基于BM-SCO的电解质晶体管交叉阵列（尺寸为Xm × Hn × 10）用于执行向量矩阵乘法和叉乘。在CrossSim模拟器中使用曼哈顿规则进行硬件训练，突触权重基于经典的反向传播算法进行更新，学习率为0.1。</p><p>在基于栅压诱导的LTP和LTD有效训练突触权重矩阵后，它们实现了较高的数字图像识别精度，如图4e、f所示。对于小尺寸图像，(001) BM-SCO和(011) BM-SCO人工突触在经过40个训练周期后，识别精度分别达到了96.10%和96.43%（图4e）。BM-SCO人工突触的识别效果非常接近基于浮点的神经网络的数值精度（96.72%），这代表了该算法的理论极限。对于大尺寸图像，(001) BM-SCO人工突触在40个训练周期后的识别精度为94.10%，而当晶体取向变为(011)时，识别精度甚至更高，达到了96.95%（图4f）。理想的数值精度为98.19%。在手写数字识别的模拟中，人工神经网络所使用的实验数据需要进行归一化处理，LTP和LTD的非线性对识别精度有着重要影响【38,41】。(011) BM-SCO人工突触的LTP和LTD的非线性分别为0.70和0.81，整体上低于(001) BM-SCO人工突触的0.60（LTP）和1.29（LTD），因此导致了相对较高的识别精度。相比之下，(011) BM-SCO在数字识别中表现优于(001) BM-SCO的主要原因在于其LTD的非线性更低。LTD过程对应于氧离子的提取以及从P-SCO到BM-SCO的相变，如图1b所示，这一过程在(001) BM-SCO中极为快速和剧烈。因此，我们推测，(011) BM-SCO中较为缓和的相变可能有助于优化非线性并提升识别精度。</p><p>突触器件的功耗（W）通过公式 ( $W = V_g \times I_g \times t$ ) 计算，其中 ($ I_g$ ) 是编程过程中栅极与漏极之间的漏电流，($ t $) 是脉冲宽度（1秒）。对于(001) BM-SCO，( $V_g$ = 1.5 ) V，( $I_g$ = 0.6 ) nA；而对于(011) BM-SCO，( $V_g$ = 2 ) V，($ I_g$ = 1 ) nA。由此计算出(001) BM-SCO和(011) BM-SCO的功耗分别为900 pJ和2000 pJ，与之前报道的功耗水平（约$10^2$ pJ）相当。通过减少脉冲宽度以接近生物突触的功耗水平（1–100 fJ），我们的系统功耗有望进一步降低。未来的工作将重点放在降低人工突触器件的功耗上。</p><span class='p red'>图4. 基于BM-SCO突触器件中的LTP和LTD的图像识别仿真。a) (001) BM-SCO（Vg = -1.5 V）和b) (011) BM-SCO（Vg = -2 V）下，50次负Vg脉冲和50次正Vg脉冲（脉冲宽度为1秒，间隔为1秒）作用下的通道电导率逐渐变化。插图显示了由5次重复的负/正Vg脉冲周期控制的电导率周期性调制。c) 用于图像识别的人工神经网络示意图。它由输入层、隐藏层和输出层神经元组成，神经元层通过突触权重矩阵连接。d) 用于突触权重矩阵硬件实现的示意图，由BM-SCO基电解质晶体管交叉条和接入设备组成。尺寸为Xm×Hn×10（小图像时Xm=64，Hn=36；大图像时Xm=784，Hn=300）的BM-SCO基电解质晶体管交叉条用于执行向量矩阵乘法和交叉积运算。作为输入神经元的图像中Xm像素的数字值通过“读脉冲”输入到Xm×Hn晶体管交叉条中，生成Hn个隐藏神经元（“读输出”）。类似地，Hn个隐藏神经元的值随后输入到Hn×10晶体管交叉条中，产生从0到9的输出神经元值，作为图像识别结果。在“编程脉冲”完成的训练过程中，晶体管器件的电导率通过Vg调节，以提高识别的准确性。e) 和f)分别为基于(001)和(011) BM-SCO突触权重矩阵经过不同训练周期后，小图像和大图像的手写数字识别准确率。为对比，给出了基于浮点数神经网络的数值结果。本节中使用了沿[100]方向的通道I。</span><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/post/文献图片/翻译一/img105.jpg" style="width:400px;"/></div></div><span class='p red'>图5. (001) BM-SCO双通道器件中突触权重的调制。a) 左列：BM-SCO双通道晶体管的顶视图，通道沿[110]和[100]方向排列；右列：负Vg下通道I和通道II的截面视图。源极、漏极和栅极分别用S、D和G表示。源极与漏极之间的电压值为0.1 V。右侧的通道方向分别沿[110]和[100]。首先，由负Vg产生的电场足够强大，可以将氧离子驱动到通道I中。然后，随着注入通道I的氧离子浓度不断增加，它与通道II之间形成浓度梯度。因此，氧离子沿浓度梯度从通道I迁移到通道II。b) Vg = -0.5 V时，40次Vg脉冲（脉冲宽度为1秒，间隔为1秒）作用下通道I（σ1-[110]）和通道II（σ2-[100]和σ2-[110]）的电导率随时间变化；c) Vg = -1.5 V时的变化；d) Vg = -2 V时的变化。</span><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/post/文献图片/翻译一/img119.jpg" style="width:400px;"/></div></div><h4 id="2-5-基于各向异性权重调制的平面内-001-BM-SCO突触的多样性"><a href="#2-5-基于各向异性权重调制的平面内-001-BM-SCO突触的多样性" class="headerlink" title="2.5 基于各向异性权重调制的平面内 (001) BM-SCO突触的多样性"></a>2.5 基于各向异性权重调制的平面内 (001) BM-SCO突触的多样性</h4><p>基于(001)和(011) BM-SCO的人工突触对比表明，通过基底确定的不同晶面取向的BM-SCO可以用于构建性能各异的突触。IL栅控效应对平面内晶格取向的依赖性提供了一种可能性，即在单个芯片上集成多种突触，如图5a所简略展示的那样。沿[100]和[110]方向分别制造了两个独立的双通道晶体管，串联的通道I用于电场驱动的氧离子迁移，而通道II用于浓度梯度驱动的氧离子迁移。在IL中分解的氧离子首先在负栅电压下注入通道I的表面，从而在垂直方向上形成氧离子浓度梯度，驱动氧离子向薄膜中扩散。即使不再施加栅电压，氧离子通过浓度梯度驱动的扩散长度仍在微米量级。通道I中的较高氧离子浓度也会诱发横向浓度梯度，驱动氧离子向通道II的横向扩散。而当施加正栅电压时，氧离子浓度梯度和扩散方向则正好相反。</p><p>图5b–d显示了在(001) BM-SCO中，通过40次连续负Vg脉冲（1秒宽度和1秒间隔）引起的通道I沿[110]方向（σ1-[110]）、通道II沿[110]方向（σ2-[110]）和通道II沿[100]方向（σ2-[100]）的电导率调制。当Vg仅为-0.5V时，σ1-[110]表现出短期可塑性，但σ2-[110]和σ2-[100]对Vg几乎没有响应（图5b）。当Vg为-1.5V时，σ1-[110]和σ2-[110]均能实现长期可塑性，电导率分别增强了0.30和0.05 S/cm。但σ2-[100]仍几乎没有变化（图5c）。当Vg增大到-2V时，σ1-[110]和σ2-[110]的电导率增强分别为0.39和0.10 S/cm，而σ2-[100]则表现出短期可塑性（图5d）。不同平面通道中的电导率变化提供了模拟兴奋性和抑制性突触的可能性。另一方面，通道II中电导率的增强总是伴随着通道I的增强，这是突触中典型的协同行为，对于研究神经网络的运作非常重要，例如神经元或突触之间的相互作用和信号传递。</p><h3 id="3-结论"><a href="#3-结论" class="headerlink" title="3. 结论"></a>3. 结论</h3><p>总之，通过IL栅极调控实现了绝缘的棕色米勒石SrCoO₂.₅与金属钙钛矿SrCoO₃之间的可逆相变。在相变过程中，氧离子在BM-SCO中的迁移动力学表现出高度的各向异性，这归因于氧空位列(柱)的存在。基于栅电压驱动的相变中电导率的变化，展示了多种不同的人工突触功能。更重要的是，各向异性的氧离子迁移及其导致的电导率响应为构建具有不同性能的多种人工突触提供了有趣的机会，如兴奋性或抑制性特征、学习准确性和协作能力。对于未来在半导体平台上的应用，SrCoOx人工突触可以通过插入STO作为缓冲层，或通过在牺牲水溶性Sr₃Al₂O₆层上转移自由型薄膜，集成到基于硅的神经电路中。我们的结果不仅为氧化物中各向异性的离子迁移提供了洞见，也为多样性突触系统的开发开辟了新的道路。</p><h3 id="4-实验部分"><a href="#4-实验部分" class="headerlink" title="4.实验部分"></a>4.实验部分</h3><p>样品制备：高质量的SrCoO₂.₅薄膜（厚度约40纳米）在760°C下，于氧气压力为5 × 10⁻⁴ mbar的条件下，通过脉冲激光沉积法在(001)和(011) STO衬底上生长，使用的是248 nm KrF氪氟激光器。激光的能量密度为1.2 J/cm²。SrCoO₂.₅薄膜在氧气压力1 × 10⁻³ mbar下冷却至室温。通过光刻和湿法刻蚀，SrCoO₂.₅薄膜被图案化为双通道晶体管结构，用于传输测量。通道长度为400 μm，宽度为100 μm。电极使用磁控溅射技术沉积Pt（30 nm）/Ti（10 nm）。将离子液体（DEME-TFSI）滴加到特定位置，以覆盖栅电极和通道I。</p><p>电气测量：BM-SCO器件的电导率通过Keithley 2400源表在二探针配置下进行测量，源极与漏极之间的读取电压为0.1 V。不同的连续或脉冲栅电压通过另一台Keithley 2400源表施加于栅极与漏极之间。</p><p>表征：通过原子分辨率的像差校正扫描透射电子显微镜（STEM，Thermo Fisher Scientific Themis Z）研究了原子结构。磁性通过VersaLab（Quantum Design）进行测量。薄膜的晶体结构通过X射线衍射（Cu-Kα辐射）进行了分析。X射线吸收光谱（XAS）测量采用总电子产额模式，在上海同步辐射装置的BL08U1A光束线进行。除特定说明外，所有测量均在300 K下进行。</p>]]></content>
      
      
      <categories>
          
          <category> 文献翻译 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>毕设笔记(四)</title>
      <link href="/2024/11/23/%E6%AF%95%E8%AE%BE%E7%AC%94%E8%AE%B0-%E5%9B%9B/"/>
      <url>/2024/11/23/%E6%AF%95%E8%AE%BE%E7%AC%94%E8%AE%B0-%E5%9B%9B/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="Analog-memristive-synapse-based-on-topotactic-phase-transition-for-high-performance-neuromorphic-computing-and-neural-network-pruning-基于拓扑相变的模拟忆阻突触：用于高性能神经形态计算和神经网络剪枝"><a href="#Analog-memristive-synapse-based-on-topotactic-phase-transition-for-high-performance-neuromorphic-computing-and-neural-network-pruning-基于拓扑相变的模拟忆阻突触：用于高性能神经形态计算和神经网络剪枝" class="headerlink" title="Analog memristive synapse based on topotactic phase transition for high-performance neuromorphic computing and neural network pruning(基于拓扑相变的模拟忆阻突触：用于高性能神经形态计算和神经网络剪枝)"></a>Analog memristive synapse based on topotactic phase transition for high-performance neuromorphic computing and neural network pruning(基于拓扑相变的模拟忆阻突触：用于高性能神经形态计算和神经网络剪枝)</h2><h3 id="研究内容："><a href="#研究内容：" class="headerlink" title="研究内容："></a>研究内容：</h3><p>&emsp;&emsp;提出并实现了一种基于$SrCoO_x$材料的拓扑相变随机存储器（TPT-RAM），具有独特的扩散性非易失双模式特性。该存储器通过氧离子沿高度有序氧空位通道的迁移，实现了可逆的相变控制，具有低变异性和高性能的模拟开关特性。<br>&emsp;&emsp;使用第一性原理计算和动力学蒙特卡洛模拟，研究了TPT-RAM的取向相关开关机制。双模式TPT-RAM被用来模拟突触选择性稳定过程，并实现神经网络剪枝。</p><h3 id="特点和优势"><a href="#特点和优势" class="headerlink" title="特点和优势"></a>特点和优势</h3><hr><p><strong>TPT-RAM与其他NVMs的对比</strong></p><ol><li><p><strong>传统NVMs的不足</strong>：</p><ul><li><strong>电阻式随机存储器（RRAM）</strong>：<ul><li>依赖于无序氧空位的迁移（例如非晶态氧化物），导致设备变异性大。</li><li>界面型RRAM缺乏局部焦耳加热效应，表现出较差的保留特性和低速率。</li></ul></li><li><strong>相变存储器（PCM）</strong>：<ul><li>开关过程高度不对称，由晶态-非晶态相变中的急速冷却导致。</li><li>受导电漂移问题影响，限制其长期性能。</li></ul></li><li><strong>整体挑战</strong>：<ul><li>这些器件存在固有的工作机制局限性，仅通过优化设备结构难以完全克服。</li><li>主要局限于模拟单个神经元或突触功能，未能有效模拟神经网络级别的特性（如神经网络修剪）。</li></ul></li></ul></li><li><p><strong>TPT-RAM的优势</strong>：</p><ul><li><strong>更高的均匀性</strong>：基于拓扑相变，TPT-RAM能够控制氧离子沿高度有序的氧空位通道迁移，提供了更可预测和更稳定的性能。</li><li><strong>多功能性</strong>：具有双模式（扩散性非易失性模式）的特性，能够模仿神经网络中的突触选择性稳定化过程，同时支持神经网络修剪。</li></ul></li></ol><hr><p><strong>TPT-RAM的特点与设计思路</strong></p><ol><li><p><strong>材料选择</strong>：</p><ul><li>使用$SrCoO_x$材料作为电阻切换层。$SrCoO_x$的棕褐石（BM）结构和钙钛矿（PV）结构提供了理想的氧离子迁移通道。</li><li>这种材料特性使得氧离子能够在高度有序的氧空位通道内迁移，易于通过调整氧化学计量实现可逆的相变。</li></ul></li><li><p><strong>核心机制</strong>：</p><ul><li>通过电场驱动，氧离子在顶电极和底电极之间沿氧空位通道迁移，触发BM-PV相变。</li><li>相变可控制切换为多级导电状态，实现模拟开关功能。</li></ul></li><li><p><strong>设备设计</strong>：</p><ul><li><strong>晶向优化</strong>：<ul><li>在不同取向的$SrTiO_3$衬底上外延生长$SrCoO_x$，优化氧空位通道的取向，使其更有利于电场驱动的氧离子迁移。</li></ul></li><li><strong>结构特点</strong>：<ul><li>利用氧八面体与四面体的交替堆叠实现高质量氧空位通道。</li><li>引入保护层（如$Al_2O_3$）提高设备稳定性。</li></ul></li></ul></li><li><p><strong>目标性能</strong>：</p><ul><li><strong>降低变异性</strong>：通过高度有序的氧离子迁移路径显著减少设备间和循环间的变异性。</li><li><strong>增强模拟性能</strong>：提供多级导电状态和线性权重更新特性，满足高精度和高能效计算的需求。</li><li><strong>支持神经网络优化</strong>：通过双模式特性在在线训练中实现神经网络修剪，从而减少冗余连接并提高整体效率。</li></ul></li></ol><hr><h3 id="研究结果"><a href="#研究结果" class="headerlink" title="研究结果"></a>研究结果</h3><h4 id="TPT-RAM的取向依赖性切换特性"><a href="#TPT-RAM的取向依赖性切换特性" class="headerlink" title="TPT-RAM的取向依赖性切换特性"></a>TPT-RAM的取向依赖性切换特性</h4><hr><p><strong>研究背景与目标</strong></p><ul><li><strong>目标</strong>：研究基于不同晶体(STO)取向的$SrCoO_x$（SCO）薄膜对拓扑相变随机存储器（TPT-RAM）切换特性的影响，重点分析氧离子迁移路径及其对性能均匀性和速度的影响。</li><li><strong>研究重点</strong>：通过控制氧空位通道（OVCs）的方向，探讨其在BM（棕褐石）到PV（钙钛矿）相变中的作用机制。</li></ul><hr><p><strong>实验设计</strong></p><ol><li><p><strong>样品制备</strong>：</p><ul><li>使用脉冲激光沉积法（PLD），在不同取向的$SrTiO_3$（STO）衬底上外延生长SCO薄膜：<ul><li><strong>(001)取向</strong>：OVCs平行于薄膜表面，沿面内方向排列。</li><li><strong>(110)取向</strong>：OVCs具有显著的面外（垂直）分量。</li></ul></li><li>薄膜上覆盖20 nm厚的$Al_2O_3$保护层，定义器件区域后在顶部电极沉积100 nm厚的Au顶电极(TE)， 金属 SRO($SrRuO_3$) 用作底电极 (BE)。Au 和 SRO 均能与 BM-SCO 形成欧姆接触，这一特性对消除界面势垒的影响并获得对称的 I-V 特性至关重要。</li></ul></li><li><p><strong>晶体表征</strong>：</p><ul><li>使用X射线衍射（XRD）和透射电镜（STEM）分析两种薄膜的晶体结构，明确OVCs的方向。</li><li><strong>结果</strong>：<ul><li>OVCs在(001)取向中排列于平面内。</li><li>OVCs在(110)取向中表现出明显的垂直分量，有利于电场驱动的氧离子迁移。</li></ul></li></ul></li></ol><hr><p><strong>器件性能分析</strong></p><ol><li><p><strong>成形电压与循环特性</strong>：</p><ul><li>比较了(001)和(110)取向设备的成形过程和循环I-V曲线：<ul><li><strong>(001)取向</strong>：平均成形电压为5.04 ± 0.07 V，变异性较高。</li><li><strong>(110)取向</strong>：平均成形电压为3.98 ± 0.05 V，表现出更低的变异性。</li></ul></li><li><strong>循环均匀性</strong>：<ul><li>(110)取向设备的导电状态和开关电压的循环变异性显著低于(001)取向。</li></ul></li></ul></li><li><p><strong>导电切换均匀性</strong>：</p><ul><li>对500次切换循环中设备导电特性进行统计：<ul><li><strong>(110)取向</strong>：高阻态（HRS）和低阻态（LRS）的变异性分别为2.25%和13.74%，显著优于(001)取向。</li></ul></li><li>归因于(110)取向中的OVCs沿电场方向对氧离子迁移路径的有序引导。</li></ul></li><li><p><strong>操作速度与能耗</strong>：</p><ul><li>使用脉冲测试评估设备的切换速度：<ul><li><strong>(001)取向</strong>：达到目标导电状态需要更高电压（~2.0 V）和更长时间（~10 µs）。</li><li><strong>(110)取向</strong>：能够以更低电压（~0.8 V）和更快速度（~100 ns）实现切换。</li></ul></li></ul></li></ol><hr><p><strong>理论分析与模拟</strong></p><ol><li><p><strong>氧离子迁移路径计算</strong>：</p><ul><li>通过密度泛函理论（DFT）计算分析不同方向的氧离子迁移能垒：<ul><li>沿OVCs迁移的能垒为0.56 eV。</li><li>垂直于OVCs迁移的能垒显著更高，为0.97 eV。</li><li>跨越八面体层的迁移能垒为1.84 eV。</li></ul></li><li>结果表明氧离子优先沿OVCs方向迁移。</li></ul></li><li><p><strong>动力学蒙特卡洛（KMC）模拟</strong>：</p><ul><li>建立模型模拟电场下氧离子迁移和相变：<ul><li><strong>(110)取向</strong>：OVCs与电场方向一致，迁移路径明确，易于形成导电丝。</li><li><strong>(001)取向</strong>：OVCs与电场方向垂直，氧离子迁移路径随机性更高，导致非均匀相变。</li></ul></li></ul></li></ol><hr><p><strong>关键结论</strong></p><ul><li>(110)取向中OVCs的垂直排列增强了离子迁移的有序性，显著提高了切换均匀性、速度和效率。</li><li>(001)取向中随机迁移路径导致较高的循环变异性和更高的操作电压。</li></ul><hr><h4 id="TPT-RAM的模拟开关特性"><a href="#TPT-RAM的模拟开关特性" class="headerlink" title="TPT-RAM的模拟开关特性"></a>TPT-RAM的模拟开关特性</h4><hr><p><strong>研究目标</strong></p><ul><li>探讨基于(110)取向$SrCoO_x$（SCO）的拓扑相变随机存储器（TPT-RAM）的模拟切换特性，评估其在线性切换、导电状态稳定性、多级存储能力和长期耐久性方面的表现。</li></ul><hr><p><strong>实验与结果分析</strong></p><ol><li><p><strong>长时增强（LTP）与长时抑制（LTD）特性</strong>：</p><ul><li>通过1 μs宽度、1、1.5 和 2 V幅值的连续脉冲测试，研究设备的模拟切换行为：<ul><li>每个周期包括50个正向（增强）脉冲和50个负向（抑制）脉冲。通过读脉冲（幅值为 0.2 V，宽度为 1 μs）测量器件电导。</li><li>结果显示，设备在低电压(1 V)下实现了几乎线性的导电状态调整。</li><li>非线性因子：<ul><li>LTP：0.20。</li><li>LTD：1.29。</li></ul></li><li>该值显著优于典型电阻式随机存储器（RRAM）。</li></ul></li></ul></li><li><p><strong>重复编程与线性化改进</strong>：</p><ul><li>对设备进行多次循环测试以评估其可重复性和均匀性：<ul><li>使用幅值逐渐递增的脉冲（1 V到2.89 V），切换线性显著改善(相比于在相同脉冲下，幅值为 1 V，宽度为 1 μs)，同时提高了导电状态的开关比。</li><li>表明脉冲幅值设计能够进一步优化设备性能。</li></ul></li></ul></li><li><p><strong>多级存储与保持特性</strong>：</p><ul><li><strong>导电状态保持性</strong>：<ul><li>在85°C高温下测试不同导电状态的保持时间，结果显示稳定性超过3000秒。</li><li>通过温度依赖测试估算，室温下该器件的保留时间超过10年。</li><li>SCO (110)pc中定向氧空位通道（OVCs）的存在，使得该器件可以通过更低的迁移势垒轻松编程，同时由于更高的扩散势垒，具备优异的保持特性。</li></ul></li><li><strong>多级存储能力与循环稳定性</strong>：<ul><li>使用幅值从1.8 V到3.2 V的脉冲对设备进行$10^8$次循环切换，测试显示器件在不同电阻开关窗口下均保持稳定，具有良好的耐久性。</li></ul></li></ul></li><li><p><strong>扩散性与非易失性双模式</strong>：</p><ul><li>测试表明，器件经历成型过程后(见1.3.1成型电压)表现为非易失性，而在成型之前，器件表现为扩散性忆阻特性，TPT-RAM具有扩散性和非易失性双模式特性：<ul><li><strong>扩散模式</strong>：弱电压激励下，器件呈现出时间依赖的扩散特性，导电状态会自然衰退回初始值。这是因为：由于BM相的绝缘特性，器件开始时表现出高电阻（&gt;1 MΩ）。当施加低于成型电压的弱激励（例如，2 V）时，氧离子从SRO层被提取到SRO/SCO界面，降低了器件电阻。然而，这种激励不足以支持SCO完成稳定的相变，因为稳定相变需要足够多的氧离子。一旦移除电压偏置，界面处的化学势差会驱动氧离子回流至SRO层，导致器件逐渐恢复至初始的高阻态（HRS）。</li><li><strong>非易失性模式</strong>：强激励或连续脉冲操作触发设备形成稳定的导电丝，导电状态长期保持不变。这是因为：在强激励下（例如，约4 V的直流成型电压），大量氧离子被驱入SCO，触发稳定相变。此后，小的正电压可以吸引更多氧离子迁移，诱导SCO从BM相向PV相的稳定相变，从而增加器件电导（设置过程）。当施加负电压时，氧离子被驱回SRO，发生反向相变，降低器件电导（复位过程）。因此，在这种非易失模式下，器件表现出相对较低的电阻和优异的保持性能。</li></ul></li><li>器件可以从扩散模式转变为非易失模式，器件既可以通过单一高电压成型(施加激励大于所需成型电压)，也可以通过足够多的小电压重复脉冲成型(施加足够多脉冲数量的低电压连续脉冲)。</li><li>通过脉冲数量和幅值的调节，可控制设备在两种模式之间切换。</li></ul></li></ol><hr><p><strong>性能比较与优势</strong></p><ol><li><strong>线性与非线性因子改进</strong>：<ul><li>与传统RRAM相比，TPT-RAM在模拟切换中的线性因子显著降低，支持高精度神经网络权重更新。</li></ul></li><li><strong>多功能性与稳定性</strong>：<ul><li>具有多级存储能力、良好的保持特性和高循环耐久性。</li></ul></li><li><strong>低功耗与高效率</strong>：<ul><li>模拟切换可在低电压（~1 V）下实现，减少了功耗需求，同时提高了计算效率。</li></ul></li></ol><hr><h4 id="进行神经网络剪枝"><a href="#进行神经网络剪枝" class="headerlink" title="进行神经网络剪枝"></a>进行神经网络剪枝</h4><hr><p><strong>研究背景与目标</strong></p><ul><li><p><strong>背景</strong>：</p><ul><li>在人类大脑的发育过程中，突触连接在早期达到峰值，随后通过<strong>选择性稳定化和修剪</strong>过程精简神经网络，保留高效连接以优化认知能力。</li><li>类脑计算硬件面临挑战：如何模仿生物神经网络中重要的网络级功能（如神经网络修剪），同时降低复杂性和功耗。</li></ul></li><li><p><strong>目标</strong>：</p><ul><li>利用TPT-RAM的<strong>扩散性与非易失性双模式特性</strong>，模仿生物神经网络的突触修剪过程，创建稀疏、高效的人工神经网络。</li></ul></li></ul><hr><p><strong>实现方法</strong></p><ol><li><p><strong>神经网络修剪机制</strong>：</p><ul><li>TPT-RAM器件的两种模式与突触行为的对应关系：<ul><li><strong>扩散模式</strong>：突触连接处于不稳定状态，导电值会逐渐衰退（对应低活跃突触被削弱或移除）。</li><li><strong>非易失性模式</strong>：经过频繁更新的突触连接达到稳定状态（经历电成型并最终进入非易失态），导电值保持不变（对应稳定突触被强化）。</li></ul></li></ul></li><li><p><strong>硬件实现</strong>：</p><ul><li>设计差分对TPT-RAM器件，每对设备表示一个突触权重，初始时，所有突触器件都工作在扩散模式。</li><li>网络训练期间：<ul><li><strong>高频使用的突触</strong>：电压脉冲逐步增强，触发TPT-RAM从扩散模式切换至非易失性模式，形成稳定的突触连接。</li><li><strong>低频使用的突触</strong>：由于缺乏足够激励，设备导电值自然衰退，最终实现突触修剪。</li></ul></li></ul></li><li><p><strong>神经网络模拟</strong>：</p><ul><li>使用两个模型验证TPT-RAM的修剪功能：<ul><li><strong>多层感知机（MLP）</strong>：架构为784 × 100 × 10。</li><li><strong>卷积神经网络（CNN）</strong>：基于LeNet-5，包括卷积层、池化层和全连接层。</li></ul></li><li>在训练过程中引入“休息阶段”，未激活的突触自然衰退，强化活跃的突触。</li></ul></li></ol><hr><p><strong>实验结果</strong></p><ol><li><p><strong>修剪效果</strong>：</p><ul><li>使用MNIST手写数字分类任务测试网络性能：<ul><li><strong>MLP</strong>：修剪率达到73.8%，电源功耗降低38%。</li><li><strong>CNN</strong>：修剪率达到84.2%，电源功耗降低63%。</li></ul></li><li>通过修剪减少冗余突触，网络有效避免过拟合。</li></ul></li><li><p><strong>分类精度提升</strong>：</p><ul><li>修剪后的网络在MNIST分类任务中，分类精度提高至99%。</li></ul></li><li><p><strong>效率与功耗优化</strong>：</p><ul><li>网络复杂性显著降低，存储和计算资源需求减少，使得TPT-RAM硬件适用于资源有限的设备（如便携式电子设备和物联网应用）。</li></ul></li></ol><hr><p><strong>TPT-RAM特性优势</strong></p><ol><li><strong>扩散与非易失性双模式</strong>：<ul><li>自然地模拟生物神经网络的突触动态，支持在线训练中的突触修剪过程。</li></ul></li><li><strong>稀疏化网络生成</strong>：<ul><li>自动调整网络结构，仅保留高活跃连接，避免传统修剪方法产生的硬件开销和计算负担。</li></ul></li><li><strong>低功耗与高精度</strong>：<ul><li>模拟神经网络过程中功耗显著降低，同时增强分类任务的准确性。</li></ul></li></ol><hr><h3 id="实验结论"><a href="#实验结论" class="headerlink" title="实验结论"></a>实验结论</h3><hr><ol><li><p><strong>TPT-RAM的创新性</strong>：</p><ul><li><strong>设备原理</strong>：<ul><li>提出了基于$SrCoO_x$（SCO）的拓扑相变随机存储器（TPT-RAM），其核心机制是氧离子沿高度有序的氧空位通道（OVCs）迁移，触发BM（棕褐石）到PV（钙钛矿）的相变。</li></ul></li><li><strong>性能优势</strong>：<ul><li><strong>高均匀性</strong>：循环间变异性仅~0.9%，设备间变异性仅~4.9%。</li><li><strong>快速低功耗操作</strong>：操作电压低至0.8 V，切换速度低于100 ns。</li></ul></li></ul></li><li><p><strong>拓扑相变的可控性</strong>：</p><ul><li><strong>物理机制验证</strong>：<ul><li>利用第一性原理计算（DFT）和动力学蒙特卡洛（KMC）模拟，确认氧离子迁移路径与OVCs取向密切相关。</li><li>优化OVCs排列可显著提升设备的切换均匀性和效率。</li></ul></li><li><strong>材料设计意义</strong>：<ul><li>强调通过控制离子迁移路径优化相变器件性能的重要性，为未来高性能存储设备设计提供指导。</li></ul></li></ul></li><li><p><strong>独特的双模式特性</strong>：</p><ul><li><strong>扩散性与非易失性模式</strong>：<ul><li>在扩散模式下，设备表现出时间依赖的记忆行为（短期记忆）。</li><li>在非易失性模式下，设备形成稳定导电通道（长期记忆）。</li></ul></li><li><strong>生物拟态能力</strong>：<ul><li>双模式特性使TPT-RAM能够模拟生物突触的选择性稳定化和神经网络修剪过程。</li></ul></li></ul></li><li><p><strong>未来优化与应用</strong>：</p><ul><li>提出进一步结合硅基晶体管构建功能性突触阵列的潜力。</li><li>推荐采用<strong>远程外延技术</strong>或<strong>牺牲层辅助薄膜转移技术</strong>，以优化TPT-RAM的集成工艺和规模化生产。</li></ul></li></ol><hr><h3 id="实验方法"><a href="#实验方法" class="headerlink" title="实验方法"></a>实验方法</h3><p><strong>1. 薄膜生长与表征条件</strong></p><p><strong>薄膜生长条件</strong>：</p><ul><li><strong>沉积方法</strong>：反射高能电子衍射（RHEED）辅助的脉冲激光沉积（PLD）。</li><li><strong>生长参数</strong>：<ul><li>温度：750°C。</li><li>氧气环境：100 mtorr。</li><li>激光波长为248 nm（KrF激光器）。<ul><li>激光能量：1.2 J/cm²。</li></ul></li><li>激光重复频率：2 Hz。</li></ul></li><li><strong>样品厚度</strong>：<ul><li>$SrCoO_x$（SCO）薄膜：35 nm。</li><li>$SrRuO_3$（SRO）薄膜：17 nm。</li></ul></li><li><strong>冷却过程</strong>：<ul><li>冷却速率：7°C/min。</li><li>氧气环境：100 mtorr。</li></ul></li></ul><p><strong>薄膜表征方法</strong>：<br>薄膜厚度通过生长时间控制。</p><ul><li><strong>晶体结构</strong>：<ul><li>X射线衍射（XRD）。</li><li>Reciprocal Space Mapping（RSM）。</li></ul></li><li><strong>原子结构</strong>：<ul><li>原子分辨率扫描透射电子显微镜（STEM）。</li></ul></li></ul><hr><p><strong>2. 设备制造与测试方法</strong></p><p><strong>设备制造过程</strong>：</p><ul><li><strong>绝缘层</strong>：<ul><li>材料：20 nm厚的$Al_2O_3$。</li><li>工艺：原子层沉积（ALD）。</li></ul></li><li><strong>接触通孔</strong>：<ul><li>尺寸：从4×4 μm²到100×100 μm²。</li><li>定义了设备的活动区域。</li></ul></li><li><strong>电极材料</strong>：<ul><li>底电极（BE）：SRO。</li><li>顶电极（TE）：接触孔顶部使用磁控溅射法沉积了厚度为100 nm的Au电极，其尺寸为100 × 100 μm²。</li></ul></li></ul><p><strong>电学性能测试方法</strong>：</p><ul><li><strong>测试仪器</strong>：<ul><li>半导体参数分析仪（Agilent B1500）。</li><li>脉冲发生器（Agilent 81110A）。</li><li>开关矩阵（Keithley 707）。</li></ul></li><li><strong>测量内容</strong>：<ul><li>I-V特性测试：包括成形电压、循环切换和多级存储特性。</li><li>脉冲响应测试：评估设备的切换速度、导电状态稳定性和循环耐久性。</li></ul></li></ul><hr><p><strong>3. 神经网络模拟</strong></p><p><strong>网络架构</strong>：</p><ul><li><strong>多层感知机（MLP）</strong>：<ul><li>网络结构：784 × 100 × 10。</li></ul></li><li><strong>卷积神经网络（CNN）</strong>：<ul><li>使用LeNet-5架构，包括：<ul><li>3个卷积层。</li><li>2个池化层。</li><li>1个全连接层。</li><li>1个径向基函数（RBF）输出层。</li></ul></li></ul></li></ul><p><strong>模拟过程</strong>：</p><ol><li><strong>权重表示</strong>：<ul><li>使用两片基于 SCO (110)pc的TPT-RAM器件组成的差分对表示一个突触权重。</li></ul></li><li><strong>训练算法</strong>：<ul><li>标准反向传播（Backpropagation）。</li><li>随机梯度下降（SGD）。</li><li>批量大小：200。</li><li>学习率：0.01。</li></ul></li><li><strong>训练过程</strong>：<ul><li><strong>MLP训练周期</strong>：10轮。</li><li><strong>CNN训练周期</strong>：20轮。</li></ul></li><li><strong>“休息阶段”</strong>：<ul><li>模拟人类学习过程中的突触稳定化。</li><li>高活跃突触被强化（转入非易失性模式），低活跃突触自然衰退（扩散模式）。</li></ul></li><li><strong>设备特性模拟</strong>：<ul><li>模拟过程中加入实验提取的循环变异性和符合高斯分布的噪声模型。</li></ul></li><li><strong>性能评估</strong>：<ul><li>使用MNIST手写数字数据集测试分类精度。</li><li>修剪率计算：修剪后的零权重突触数量占比。</li></ul></li></ol><hr><h3 id="PDF展示："><a href="#PDF展示：" class="headerlink" title="PDF展示："></a>PDF展示：</h3><div class="row">    <embed src="/pdf/sciadv.abh0648.pdf" width="100%" height="550" type="application/pdf"></div><hr><hr>]]></content>
      
      
      <categories>
          
          <category> 科研笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 毕设 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>毕设笔记(三)</title>
      <link href="/2024/11/22/%E6%AF%95%E8%AE%BE%E7%AC%94%E8%AE%B0-%E4%B8%89/"/>
      <url>/2024/11/22/%E6%AF%95%E8%AE%BE%E7%AC%94%E8%AE%B0-%E4%B8%89/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="Role-of-oxygen-vacancy-ordering-on-structure-and-reactivity-of-iron-doped-Sr-based-perovskites-A-computational-study-氧空位有序性对铁掺杂锶基钙钛矿结构和反应活性的影响：一项计算研究"><a href="#Role-of-oxygen-vacancy-ordering-on-structure-and-reactivity-of-iron-doped-Sr-based-perovskites-A-computational-study-氧空位有序性对铁掺杂锶基钙钛矿结构和反应活性的影响：一项计算研究" class="headerlink" title="Role of oxygen vacancy ordering on structure and reactivity of iron-doped Sr-based perovskites: A computational study(氧空位有序性对铁掺杂锶基钙钛矿结构和反应活性的影响：一项计算研究)"></a>Role of oxygen vacancy ordering on structure and reactivity of iron-doped Sr-based perovskites: A computational study(氧空位有序性对铁掺杂锶基钙钛矿结构和反应活性的影响：一项计算研究)</h2><h3 id="研究内容："><a href="#研究内容：" class="headerlink" title="研究内容："></a>研究内容：</h3><ol><li>研究对象：纯的SrCoO3、SrFeO3以及掺铁的SrCo0.8Fe0.2O3和SrCoxFe1-xO3（x = 0.25, 0.50, 0.75）钙钛矿。</li><li>研究方法：使用DFT方法比较了这些钙钛矿的电子性质，特别是铁掺杂对钙钛矿电子性质的影响。</li><li>发现在SrCo0.8Fe0.2O3中，两个FeO6多面体插入CoO6多面体之间的结构相对更稳定。</li><li>Fe多面体相邻时会增强Jahn-Teller畸变，导致对称性降低。</li><li>氧空位的影响：研究了有序氧空位对SrCoO2.5、SrFeO2.5以及掺铁的SrCo0.8Fe0.2O2.5、SrCoxFe1-xO2.5和SrCoxFe1-xO2.75（x = 0.25, 0.50, 0.75）结构和反应活性的影响。</li><li>通过电子密度分布图和Bader电荷分析来理解键合相互作用。</li><li>功函数计算：计算了有无氧空位的钙钛矿的功函数，以预测导电行为。</li><li>氢存储研究：将氢原子和氢分子引入钙钛矿的氧空位，以了解氢化钙钛矿的结构转变，并预测这些材料在氢存储中的潜在应用。</li><li>水分子吸附：通过分子动力学模拟研究了水分子在SrFeO3片上的吸附，发现水分子分裂成羟基(OH根)和质子，质子与表面氧原子结合，羟基离子占据表面的氧空位。</li></ol><ul><li>密度泛函理论（Density Functional Theory，简称DFT）是一种计算量子力学中电子结构的方法，它被广泛用于研究多电子体系的基态性质，一个多电子体系的基态性质可以通过其电子密度来唯一确定，而不是通过波函数。</li><li>HER机制是一个两电子转移过程（2H₂O + 2e⁻ → H₂ + 2OH⁻），这个反应动力学较慢，需要较高的能量输入，导致较大的过电位,通过设计和开发新材料来降低这一能量输入，通过催化这一反应。</li></ul><h3 id="实验结论："><a href="#实验结论：" class="headerlink" title="实验结论："></a>实验结论：</h3><p>通过DFT方法生成并优化了SrCoxFe1-xO3-δ（SCF）钙钛矿的各种可能构型，包括不同Fe和Co的位置以及氧空位的排列。首先发现SrCoO₃和SrFeO₃的基态为金属态，具有零带隙，与氧空位相关的SCF-0.25和SCF-0.50呈现非金属特性。</p><h4 id="钙钛矿在无氧空位和有氧空位情况下的可能配置和结构"><a href="#钙钛矿在无氧空位和有氧空位情况下的可能配置和结构" class="headerlink" title="钙钛矿在无氧空位和有氧空位情况下的可能配置和结构"></a>钙钛矿在无氧空位和有氧空位情况下的可能配置和结构</h4><hr><p><strong>1.无氧空位的钙钛矿配置</strong></p><ul><li><p><strong>SrCo₀.₈Fe₀.₂O₃ 配置</strong>  ：</p><ul><li><strong>SCF-1 至 SCF-5</strong>（共5种配置）：<ul><li><strong>构成</strong>：<ul><li>SCF-1至SCF-4：Fe和Co多面体随机分布，彼此较远。</li><li>SCF-5：Fe多面体相邻排列，形成两个SrFeO₃单元嵌在SrCoO₃中。</li></ul></li><li><strong>特点</strong>：<ul><li>SCF-5是最稳定的（最低能量差为0 kcal/mol）。</li><li>SCF-5中的Fe-O键长（1.92–1.97 Å）和Co-O键长（1.91–2.00 Å）比其他配置更分散。</li><li>SCF-5中存在Jahn-Teller畸变，降低了晶体对称性。</li></ul></li></ul></li></ul></li><li><p><strong>SrCoₓFe₁₋ₓO₃ 配置</strong>（x=0.25, 0.50, 0.75）：</p><ul><li><strong>SCF-0.25</strong>：25% FeO₆嵌入75% CoO₆。</li><li><strong>SCF-0.50</strong>：50% FeO₆与50% CoO₆交替排列（稳定结构中Fe多面体相邻）。</li><li><strong>SCF-0.75</strong>：25% CoO₆嵌入75% FeO₆。  </li></ul></li></ul><hr><p><strong>2.含氧空位的钙钛矿配置</strong></p><ul><li><p><strong>SrCo₀.₈Fe₀.₂O₂.₅ 配置</strong></p><ul><li><strong>氧空位生成方式</strong>：<ol><li><strong>(a)</strong> MO₆八面体与MO₄方形平面交替。</li><li><strong>(b)</strong> 所有MO₅方形锥。</li><li><strong>(c)</strong> MO₆八面体与MO₄方形平面邻接。</li><li><strong>(d)</strong> MO₆八面体与MO₅方形锥邻接。</li><li><strong>(e)</strong> MO₆八面体与MO₅方形锥共享金属中心。</li></ol></li><li><strong>结构对比</strong>：<ul><li><strong>SCF-5a</strong>（配置a，Fe多面体邻接）：最稳定。因为FeO4方形平面与FeO6八面体共享角，这有助于支持层间结构</li><li><strong>SCF-1b和SCF-3b</strong>（配置b，MO₅方形锥）：相对较稳定，比其他配置低18.34 kcal/mol。</li></ul></li></ul></li><li><p><strong>SFO(SrFeO3)和SCO(SrCoO3)配置</strong></p><ul><li>所有氧空位配置(a-e)对SF钙钛矿均为有利。</li><li>在SC的情况下，形成CoO5方锥体的氧空位有序结构(b)相对稳定。</li></ul></li><li><p><strong>SrCoₓFe₁₋ₓO₂.₅ 配置</strong>（x=0.25, 0.50, 0.75）：</p><ul><li><strong>特点</strong>：<ul><li>MO₆八面体与MO₄方形平面或MO₅方形锥交替排列。</li><li>Fe多面体邻接的结构更稳定。</li></ul></li></ul></li><li><p><strong>SrCoₓFe₁₋ₓO₂.₇₅ 配置</strong>（x=0.25, 0.50, 0.75）：</p><ul><li><strong>氧空位生成方式</strong>：<ul><li>移除共享金属中心的氧原子。</li><li>MO₆八面体与MO₅方形锥交替排列。</li></ul></li><li><strong>特点</strong>：<ul><li>SCF-0.50中，FeO₅方形锥相邻排列稳定性最高。</li><li>CoO₅方形锥排列的配置能量较高，不稳定。</li><li>上面两点即SCF-0.50结构中，FeO5方锥嵌入CoO6八面体之间时表现出能量上的稳定性，而CoO5方锥嵌入FeO6八面体之间的结构则不稳定。</li></ul></li></ul></li></ul><hr><p><strong>3.无氧空位与含氧空位结构的对比</strong></p><div class="table-container"><table><thead><tr><th><strong>配置/结构</strong></th><th><strong>成分与排列</strong></th><th><strong>特点</strong></th><th><strong>稳定性</strong></th></tr></thead><tbody><tr><td><strong>SCF-1 至 SCF-5</strong></td><td>Fe和Co多面体的无氧空位排列</td><td>SCF-5中Fe多面体相邻排列，Jahn-Teller畸变</td><td>SCF-5最稳定</td></tr><tr><td><strong>SCF-0.25, 0.50, 0.75</strong></td><td>不同比例Fe/Co多面体无氧排列</td><td>SCF-0.50中Fe多面体相邻排列最稳定</td><td>SCF-0.50更稳定</td></tr><tr><td><strong>SCF-5a</strong></td><td>Fe多面体邻接，MO₆与MO₄交替排列</td><td>Fe-O-Fe桥电荷转移，结构支撑性强</td><td>含氧空位中最稳定</td></tr><tr><td><strong>SCF-1b, 3b</strong></td><td>MO₅方形锥排列</td><td>能量比其他含氧空位配置低18.34 kcal/mol</td><td>次稳定</td></tr><tr><td><strong>SCF-0.50 (O₂.₇₅)</strong></td><td>FeO₅方形锥相邻排列</td><td>带隙较大，化学稳定性更高</td><td>含氧空位中最稳定</td></tr></tbody></table></div><hr><p><strong>4.总结</strong></p><ul><li><strong>无氧空位的稳定性</strong>：Fe多面体邻接排列（SCF-5, SCF-0.50）结构最稳定。</li><li><strong>含氧空位的稳定性</strong>：氧空位形成MO₆八面体与MO₄方形平面交替（SCF-5a），或FeO₅方形锥相邻排列（SCF-0.50 (O₂.₇₅)）的结构更稳定。</li><li><strong>氧空位和Fe/Co组成共同决定了钙钛矿的稳定性和电子特性</strong>，为钙钛矿设计提供了重要依据。</li></ul><del>1. 无氧空位的钙钛矿配置： + 生成了SrCo0.8Fe0.2O3钙钛矿的10x1x1超胞结构，基于铁（Fe）位置的不同，创造了五种不同的配置（标记为SCF-1到SCF-5）。研究 Co/Fe 位置对结构和电子性质的影响。 + 所有这些钙钛矿配置在能量上相差不大（1.71 kcal/mol以内），晶体结构为立方体，空间群为Pm3m。 + 通过比较实验和理论值，发现SCF-5配置（相邻Fe多面体由两个SrFeO3单元格结构插入SrCoO3之间）相对更稳定，这归因于：(a)Fe-O和Co-O键距(相对其他构型变化更大)、键角的微小变化(相对其他构型更偏离90°)；(b)由于相邻Fe多面体的存在，这导致Fe和O之间通过Fe–O–Fe–O桥的电荷转移，此外，∠OFeO和∠FeOFe角接近理想的180°，为179.71°，这有助于通过Fe–O–Fe键进行电荷转移，导致SCF-5的结构畸变；(c)SCF-5中的Fe–Fe和Co–Co相互作用增强了Jahn-Teller畸变，并降低了对称性。</del><h4 id="能带结构，DOS和PDOS"><a href="#能带结构，DOS和PDOS" class="headerlink" title="能带结构，DOS和PDOS"></a>能带结构，DOS和PDOS</h4><hr><p><strong>1.总体分析</strong></p><ul><li>文章通过计算带结构、态密度 (DOS) 和部分态密度 (PDOS)，研究了不同钙钛矿配置的电子特性。</li><li>结果表明，不同配置和氧空位的引入对钙钛矿的金属性或非金属性具有重要影响。</li></ul><hr><p><strong>2.不同钙钛矿配置的带结构和DOS分析</strong></p><div class="table-container"><table><thead><tr><th><strong>配置/结构</strong></th><th><strong>金属性/带隙</strong></th><th><strong>电子态特性</strong></th><th><strong>关键发现</strong></th></tr></thead><tbody><tr><td><strong>SrCoO₃ (SC)</strong></td><td>金属态，零带隙</td><td>d轨道的未配对电子占据费米能级附近</td><td>Co的3d轨道提升了费米能级</td></tr><tr><td><strong>SrFeO₃ (SF)</strong></td><td>金属态，零带隙</td><td>Fe的3d轨道占据费米能级</td><td>Fe的贡献导致费米能级略低于SC</td></tr><tr><td><strong>SrCo₀.₈Fe₀.₂O₃ (SCF-5)</strong></td><td>金属态，零带隙</td><td>Fe和Co的d轨道共同作用</td><td>Fe掺杂增加了费米能级附近的电子态密度</td></tr><tr><td><strong>SrCoₓFe₁₋ₓO₂.₇₅ (x=0.25, 0.50, 0.75)</strong></td><td>SCF-0.25: 非金属，带隙0.17 eV<br>SCF-0.50: 非金属，带隙0.74 eV<br>SCF-0.75: 金属态</td><td>Fe或Co的3d轨道主导费米能级附近态密度</td><td>SCF-0.50的较大带隙表明其更高的化学稳定性</td></tr></tbody></table></div><hr><p><strong>3.态密度 (DOS) 和分态密度 (PDOS) 分析</strong></p><ul><li><strong>主要态密度来源</strong>：<ul><li>Co和Fe的d轨道对费米能级的贡献最大，体现了强金属性。</li><li>氧空位引入后，费米能级附近的氧2p态对电子性质有显著影响。</li></ul></li><li><strong>氧空位的作用</strong>：<ul><li>氧空位在SF、SC和SCF中引入新的电子态密度，增加费米能级附近的态密度，保持金属态。</li><li>SCF-0.25 和 SCF-0.50中，氧空位引入了带隙，导致材料的非金属性。</li></ul></li></ul><hr><p><strong>4. 总结</strong></p><ul><li><strong>金属性与非金属性</strong>：<ul><li>SrCoₓFe₁₋ₓO₃配置均为金属态。</li><li>SrCoₓFe₁₋ₓO₂.₇₅配置中，氧空位引入带隙，使SCF-0.25和SCF-0.50呈现非金属性。</li></ul></li><li><strong>稳定性</strong>：<ul><li>带隙较大的SCF-0.50具有更高的化学稳定性，适合作为非金属功能材料。</li></ul></li><li><strong>氧空位和成分调控</strong>：<ul><li>氧空位通过改变电子态和费米能级，显著影响钙钛矿的导电性和化学稳定性。</li></ul></li></ul><h4 id="光电特性"><a href="#光电特性" class="headerlink" title="光电特性"></a>光电特性</h4><hr><p><strong>1. 总体分析</strong></p><ul><li>研究了不同钙钛矿配置的功函数，以理解氧空位和成分调控对光电性能和导电性的影响。</li><li>功函数的高低直接反映材料的电子释放能力，与其导电性和催化性能密切相关。</li></ul><hr><p><strong>2. 功函数与导电性的关系</strong></p><ul><li><p><strong>导电行为</strong>：</p><ul><li><strong>SrFeO₃ (SF)</strong> 和 <strong>SrCoO₃ (SC)</strong> 均表现出金属性，功函数较高（SC &gt; SF）。</li><li><strong>SrCoₓFe₁₋ₓO₂.₅ (SCF-5a)</strong> 显示较低功函数，导电性较强。</li><li><strong>SrCoₓFe₁₋ₓO₂.₇₅</strong> 的功函数随氧空位的引入和成分变化发生显著变化：<ul><li>SCF-0.50功函数最高，表现出非导电性。</li><li>SCF-0.25 和 SCF-0.75功函数较低，仍具有导电性。</li></ul></li></ul></li><li><p><strong>氧空位的影响</strong>：</p><ul><li>氧空位导致金属阳离子（如Co和Fe）的氧化态降低，从而降低功函数。</li><li>不同氧空位排列的配位环境（如MO₆八面体、MO₅方形锥）显著影响材料的电子结构和光电性能。</li></ul></li></ul><hr><p><strong>3. 不同配置之间的对比分析</strong></p><div class="table-container"><table><thead><tr><th><strong>配置/结构</strong></th><th><strong>功函数趋势</strong></th><th><strong>导电性</strong></th><th><strong>氧空位与成分作用</strong></th></tr></thead><tbody><tr><td><strong>SC (SrCoO₃)</strong></td><td>功函数高于SF，3.84 eV</td><td>金属态，导电性较强</td><td>Co引入额外电子，提高费米能级，增加功函数</td></tr><tr><td><strong>SF (SrFeO₃)</strong></td><td>功函数较高，3.61 eV</td><td>金属态，导电性强</td><td>Fe电子贡献占主导，Fe的电子密度较高，功函数较大    </td></tr><tr><td><strong>SF-b(SrFeO₂.₅)</strong></td><td>功函数最低</td><td>金属态，导电性最强</td><td>氧空位的存在引入了额外的电子，使得Fe中心的3d电子能级向更低的能量移动，从而降低功函数</td></tr><tr><td><strong>SCF-5 (SrCo₀.₈Fe₀.₂O₃)</strong></td><td>功函数低于SF和SC，3.22eV</td><td>金属态，导电性适中</td><td>Fe掺杂引入电子态，降低功函数，增加电子释放能力</td></tr><tr><td><strong>SCF-5a (SrCoₓFe₁₋ₓO₂.₅)</strong></td><td>功函数较低(较SCF-1b低)</td><td>导电性较强</td><td>Fe和O特殊配位环境，降低功函数</td></tr><tr><td><strong>SCF-0.25 (SrCoₓFe₁₋ₓO₂.₇₅ (x=0.25))</strong></td><td>功函数较无氧空位降低 0.16 eV</td><td>仍表现导电性</td><td>氧空位引入新电子态，降低功函数</td></tr><tr><td><strong>SCF-0.50 (SrCoₓFe₁₋ₓO₂.₇₅ (x=0.50))</strong></td><td>功函数较无氧空位提高 0.49 eV</td><td>非导电性</td><td>FeO₅方形锥相邻排列，导致较大功函数</td></tr><tr><td><strong>SCF-0.75 (SrCoₓFe₁₋ₓO₂.₇₅ (x=0.75))</strong></td><td>功函数较无氧空位降低 0.16 eV</td><td>仍表现导电性</td><td>CoO₅与FeO₅方形锥交替排列，降低功函数</td></tr></tbody></table></div><hr><p><strong>4. 总结</strong></p><ul><li>氧空位和成分调控（Fe/Co比例）通过改变金属阳离子的电子分布和配位环境，显著影响功函数。</li></ul><h4 id="Bader-电荷分析"><a href="#Bader-电荷分析" class="headerlink" title="Bader 电荷分析"></a>Bader 电荷分析</h4><hr><p><strong>1. 总体分析</strong></p><ul><li>Bader电荷分析用于量化钙钛矿中各原子的电荷分布，揭示电子的转移和材料的电子特性。</li><li>分析显示，钙钛矿中的电荷分布受到氧空位、阳离子组成（Fe/Co比）以及配位环境的显著影响。</li></ul><hr><p><strong>2. 氧空位对电荷分布的影响</strong></p><ol><li><p><strong>氧阴离子的电荷变化</strong>：</p><ul><li>氧空位增加了氧阴离子的电子密度。</li><li>SC-b和SF-b中的氧电荷为-1.42至-1.45 e，比无氧空位的SC和SF显著更负。</li><li>SCF-5a和SCF-1b中氧电荷在-1.32至-1.37 e之间，低于SC-b和SF-b。</li></ul></li><li><p><strong>金属阳离子的电荷变化</strong>：</p><ul><li>氧空位降低了金属阳离子的电荷：<ul><li>Co电荷：从+1.49（SC）降低至+1.26（SCF-5a）。</li><li>Fe电荷：从+1.57（SF）降低至+1.48（SCF-1b）。</li></ul></li><li>阳离子电荷的降低反映出电子从金属阳离子转移到氧阴离子。</li></ul></li></ol><hr><p><strong>3. 配置之间的对比</strong></p><div class="table-container"><table><thead><tr><th><strong>配置/结构</strong></th><th><strong>电荷转移特点</strong></th><th><strong>氧空位的作用</strong></th><th><strong>电子分布的特性</strong></th></tr></thead><tbody><tr><td><strong>SC (SrCoO₃)</strong></td><td>Co向O转移电子较少，电荷偏离纯离子态</td><td>无氧空位，电荷分布均匀</td><td>部分离子和共价结合，Co-O特性更显著</td></tr><tr><td><strong>SF (SrFeO₃)</strong></td><td>Fe向O转移更多电子，离子-共价混合特性更强</td><td>无氧空位，电子分布均匀</td><td>Fe-O之间更高的电荷转移</td></tr><tr><td><strong>SCF-5 (SrCo₀.₈Fe₀.₂O₃)</strong></td><td>Co和Fe均向O转移更多电子，增强O电荷</td><td>无氧空位，Fe掺杂增强电子转移</td><td>Fe和Co共同作用，电荷分布更集中</td></tr><tr><td><strong>SC-b (O₂.₅)</strong></td><td>氧空位增加O电荷密度，降低Co电荷转移</td><td>氧空位改变Co配位环境，增强O吸引电子能力</td><td>缺陷周围电子分布不均</td></tr><tr><td><strong>SF-b (O₂.₅)</strong></td><td>Fe电荷降低，O电荷增加</td><td>氧空位导致Fe-O键中离子特性增强</td><td>电荷更偏离共价结合</td></tr><tr><td><strong>SCF-5a (O₂.₅)</strong></td><td>Co和Fe电荷最低，氧空位增强O电荷密度</td><td>缺陷结构稳定，增强离子结合特性</td><td>O电荷集中分布在缺陷附近</td></tr><tr><td><strong>SCF-1b (O₂.₅)</strong></td><td>电荷均匀分布，但缺陷处电子密度较高</td><td>氧空位的存在使电荷偏向O的孤对电子轨道</td><td>配置更趋于稳定</td></tr></tbody></table></div><hr><p><strong>4. 关键结论</strong></p><ol><li><p><strong>电荷转移机制</strong>：</p><ul><li>无氧空位时，Co和Fe电荷较高，表明部分离子-共价结合特性。</li><li>氧空位引入后，氧阴离子电荷密度增加，金属阳离子电荷降低，增强离子特性。</li></ul></li><li><p><strong>氧空位的作用</strong>：</p><ul><li>氧空位在SC-b和SF-b中显著增强了O的吸电子能力，降低了金属阳离子电荷。</li><li>SCF-5a中的氧空位配置导致Co和Fe的电荷显著降低，增强了结构的离子结合特性。</li></ul></li></ol><h4 id="氢化钙钛矿"><a href="#氢化钙钛矿" class="headerlink" title="氢化钙钛矿"></a>氢化钙钛矿</h4><hr><p><strong>1. 总体分析</strong></p><ul><li>探讨了在氧空位钙钛矿中引入氢原子（H）、氢分子（H₂）以及水分子后的氢化行为。</li><li>氢化后，材料的结构稳定性、金属-氢键合特性和电子分布发生显著变化，展现出潜在的储氢能力和催化特性。</li></ul><hr><p><strong>2. 氢化行为的主要结果</strong><br><strong>氢引入形式</strong></p><ul><li><strong>氢原子</strong>：占据氧空位位点，与金属或氧形成稳定键。</li><li><strong>氢分子</strong>：进入氧空位位点，可能保持H₂分子形态或分解成单原子形式。</li><li><strong>水分子</strong>：在氧空位表面发生分解，形成氢氧根（OH⁻）和质子（H⁺）。</li></ul><hr><p><strong>3. 氢化后不同配置的对比分析</strong></p><div class="table-container"><table><thead><tr><th><strong>配置/结构</strong></th><th><strong>氢引入形式</strong></th><th><strong>氢化后结构稳定性</strong></th><th><strong>金属-氢键合特性</strong></th><th><strong>电子分布和键长</strong></th></tr></thead><tbody><tr><td><strong>SF-b (O₂.₅)</strong></td><td>H, H₂</td><td>稳定，氢化能量1.5-5 eV</td><td>Fe-H键形成，Fe多面体变形</td><td>Fe-H键长：1.71 Å和2.29 Å</td></tr><tr><td><strong>SC-b (O₂.₅)</strong></td><td>H, H₂</td><td>选择性氢化，CoO₅方形锥氢化稳定</td><td>Co-H键形成，呈等长桥键</td><td>Co-H键长：1.78 Å和1.79 Å</td></tr><tr><td><strong>SCF-1b (O₂.₅)</strong></td><td>H, H₂</td><td>选择性氢化，含有MO₆八面体与MO₅方锥结构交错的配置氢化稳定</td><td>Co-H和Fe-H键分别形成</td><td>Co-H键长：1.74 Å，Fe-H键长：1.97 Å</td></tr><tr><td><strong>SCF-0.25 (O₂.₇₅)</strong></td><td>H₂</td><td>氢分子保持H₂形态，桥接于Co和Fe之间，位于CoO5和FeO5方锥之间，这两者与FeO6八面体交错排列</td><td>Co-H-Co桥键形成</td><td>H-H键长：0.80 Å，H电子密度：0.55 e</td></tr><tr><td><strong>SCF-0.50 (O₂.₇₅)</strong></td><td>H₂</td><td>H₂分子稳定结合，但未完全分解，位于两个FeO5方锥之间，这两者与CoO6八面体交错排列</td><td>Fe-H桥键形成，部分保留H-H键</td><td>H-H键长：0.78 Å，H电子密度：0.54 e</td></tr><tr><td><strong>SCF-0.75 (O₂.₇₅)</strong></td><td>H</td><td>H原子占据位于CoO5和FeO5方锥之间，且这两者与CoO6八面体交错排列</td><td>Co-H和Fe-H混合键合</td><td>Co-H键长：1.74 Å，Fe–H键长：1.97 Å，H电子密度：0.57 e</td></tr></tbody></table></div><hr><p><strong>4. 水分子引入和分解</strong></p><ul><li>在氧空位的SF表面引入水分子，通过分子动力学模拟发现：<ul><li>水分子分解为OH⁻和H⁺，其中H⁺与表面氧结合形成O-H键（键长0.91 Å）。</li><li>氢氧根填充氧空位，同时质子在表面氧之间迁移，形成动态键合网络。</li><li>最终，氧空位被OH⁻占据，水分解促进了氧表面活性。</li></ul></li></ul><hr><p><strong>5. 配置与应用潜力分析</strong></p><div class="table-container"><table><thead><tr><th><strong>配置/结构</strong></th><th><strong>氢化行为特点</strong></th><th><strong>潜在应用</strong></th></tr></thead><tbody><tr><td><strong>SF-b (O₂.₅)</strong></td><td>氢化能量高，Fe-H键稳定</td><td>储氢和催化应用</td></tr><tr><td><strong>SC-b (O₂.₅)</strong></td><td>CoO₅方形锥优先结合H₂</td><td>HER（析氢反应）催化</td></tr><tr><td><strong>SCF-1b/5a (O₂.₅)</strong></td><td>氢原子结合稳定，能量低</td><td>可作为储氢材料，适用于动态储能系统</td></tr><tr><td><strong>SCF-0.25/0.50 (O₂.₇₅)</strong></td><td>H₂分子部分分解，形成桥接结构</td><td>高效HER催化剂</td></tr></tbody></table></div><hr><p><strong>6. 总结</strong></p><ul><li>氢原子优先占据氧空位形成稳定的金属-氢键；氢分子可能保持完整或部分分解。</li></ul><h3 id="主要结论总结"><a href="#主要结论总结" class="headerlink" title="主要结论总结"></a>主要结论总结</h3><hr><p><strong>1. 研究重点</strong></p><ul><li>研究了铁掺杂的Sr基钙钛矿（SrCoₓFe₁₋ₓO₃-δ）在不同氧空位排列下的结构和电子特性。</li><li>探讨了铁掺杂位置、组成和氧空位对钙钛矿的结构稳定性、电子特性及反应性的影响，尤其是其在析氢反应（HER）中的潜在应用。</li></ul><hr><p><strong>2. 主要结论</strong></p><ol><li><p><strong>铁掺杂对结构和电子特性的影响</strong>：</p><ul><li>铁掺杂倾向于形成Fe多面体相邻排列的结构，有助于提高结构稳定性。</li><li>铁的掺杂及其位置显著影响钙钛矿的电子带结构和费米能级分布。</li></ul></li><li><p><strong>氧空位的作用</strong>：</p><ul><li>氧空位的引入显著改变了钙钛矿的电子分布和化学性质：<ul><li>SCF-0.25 和 SCF-0.50 由于氧空位的引入表现出非金属性，具有较大的带隙。</li><li>SCF-0.50 的较大带隙（0.74 eV）提高了化学稳定性。</li></ul></li></ul></li><li><p><strong>析氢反应中的中间体稳定性</strong>：</p><ul><li>含氧空位的铁掺杂钙钛矿对HER中的中间体具有良好的稳定性。</li><li>Fe的位置和氧空位排列对析氢反应的催化性能至关重要。</li></ul></li><li><p><strong>氢化后的特性</strong>：</p><ul><li>含氧空位的钙钛矿能够选择性结合氢原子和氢分子。</li><li>不同氧空位排列显著影响金属-氢键的结合模式和电子分布。</li></ul></li><li><p><strong>水分解行为</strong>：</p><ul><li>在氧空位的钙钛矿表面，水分子能够分解为氢氧根离子和质子，并通过氧空位迁移，增强表面催化活性。</li></ul></li></ol><hr><h3 id="PDF展示："><a href="#PDF展示：" class="headerlink" title="PDF展示："></a>PDF展示：</h3><div class="row">    <embed src="/pdf/S0022459622008593_main.pdf" width="100%" height="550" type="application/pdf"></div><hr>]]></content>
      
      
      <categories>
          
          <category> 科研笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 毕设 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>毕设笔记(二)</title>
      <link href="/2024/11/21/%E6%AF%95%E8%AE%BE%E7%AC%94%E8%AE%B0-%E4%BA%8C/"/>
      <url>/2024/11/21/%E6%AF%95%E8%AE%BE%E7%AC%94%E8%AE%B0-%E4%BA%8C/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="A-Ferrite-Synaptic-Transistor-with-Topotactic-Transformation-一种具有拓扑转化特性的铁氧体突触晶体管"><a href="#A-Ferrite-Synaptic-Transistor-with-Topotactic-Transformation-一种具有拓扑转化特性的铁氧体突触晶体管" class="headerlink" title="A Ferrite Synaptic Transistor with Topotactic Transformation(一种具有拓扑转化特性的铁氧体突触晶体管)"></a>A Ferrite Synaptic Transistor with Topotactic Transformation(一种具有拓扑转化特性的铁氧体突触晶体管)</h2><h3 id="主题："><a href="#主题：" class="headerlink" title="主题："></a>主题：</h3><p>&emsp;&emsp;通过电解质(如离子液体)门控控制从褐铁矿 $SrFeO_{2.5}$ 到钙钛矿 $SrFeO_{3−δ}$ 之间的拓扑相变，利用门控可调的多级导电状态，成功构建了一种具有电解质门控铁氧体薄膜的突触晶体管，这些导电状态源自拓扑相变诱导的不同缺氧钙钛矿结构 $SrFeO_x$。这种三端人工突触能够模拟重要的突触功能。<br>&emsp;&emsp;三端电解质栅控晶体管具备额外的栅极控制，更适合实现低能耗的突触功能，信号传输可通过通道(沟道)完成，突触权重可通过栅极端调控。这类器件的通道需要采用先进的薄膜材料，以在电解质栅控下实现多重电阻状态。<br>&emsp;&emsp;与作为相变存储基础的非晶态和晶态之间的相变不同。<span class='p red'>拓扑相变通过调节氧化物中的氧化学计量比</span>实现相变。<br>&emsp;&emsp;$SrFeO_x$即$SFO$，拥有拓扑相变特性，指的是锶铁氧体，这是一种具有顶位相变特性的钙钛矿结构的氧化物。在文献中，SFO 被研究用于人工突触器件，因为它能够在不同的氧含量下展现出不同的电子结构和导电性。<br>&emsp;&emsp;BMSFO (Brownmillerite $SrFeO_{2.5}$)：指的是锶铁氧体的一种特定相态，即含有较少氧的布朗米勒矿相。BMSFO 是一种绝缘体，其晶体结构由交替层的 $FeO_6$ 八面体和 $FeO_4$ 四面体组成。在文献中，BMSFO 被用作电解质门控晶体管的通道材料，因为它可以通过顶位相变在绝缘和导电状态之间转换。<br>&emsp;&emsp;PVSFO (Perovskite $SrFeO_{3−δ}$)：指的是锶铁氧体的另一种相态，即钙钛矿相。PVSFO 与 BMSFO 不同，它因为氧原子的空位填充而表现出金属导电性，拥有以$FeO_6$八面体为角共享的结构。在文献中，通过电解质门控可以实现 BMSFO 到 PVSFO 的相变，这种相变可以用来调控晶体管的导电状态，从而模拟生物突触的功能。<br>&emsp;&emsp;离子液体栅控 (ILG) 不仅通过静电效应，还通过离子迁移引发的相变来实现电化学效应，通过ILG控制的功能离子在钴酸盐薄膜中的插入和提取，可实现不同相之间的可逆相变，因此拓扑相变材料薄膜可作为电解质栅控突触晶体管通道的理想候选材料。</p><h3 id="实验结论："><a href="#实验结论：" class="headerlink" title="实验结论："></a>实验结论：</h3><ol><li>采用脉冲激光沉积法在（001）取向的$SrTiO_3$（STO）衬底上生长了BM-SFO外延薄膜，使用离子液体DEME-TFSI）作为电解质栅控介质，经过ILG负向栅控后，发生BM相向PV相的相变，薄膜的晶体结构转变为类似PV的结构，通过ILG引发的BM相和PV相之间的转变是可控且非易失的。</li><li>器件结构：$SrFeO_x$ 薄膜形成源（S）和漏（D）电极之间的通道，离子液体（DEME-TFSI）作为栅控介质。</li><li>通道可以在低导电态和高导电态之间可逆调控。随着VG从0扫向负值，器件导电性(电导率)增加；而当VG大于0时，器件导电性(电导率)降低。传输曲线显示出明显的滞回环，表明具有良好的可逆性。负向栅控可触发SFO薄膜从绝缘的BM相转变为导电的PV相，而正向栅控可使SFO薄膜从导电的PV相回到绝缘的BM相。</li><li>施加负VG可增加通道电导率，而施加正VG则可降低通道电导率。更高的VG值会引起更大的通道导电调制使通道电导率在每次“写入”操作后可保持不变，表明具有固有的非易失性行为。（一旦通过“write”操作改变了通道的电导状态，即使去除了栅极电压，这种改变也能保持不变）。<br>可以认为：更高的VG值：能够更有效地诱导从BMSFO到PVSFO的相变，从而实现更大的电导调制，并且这种状态改变是稳定的，可以保持较长时间，体现了非易失性特性。<br>较低的VG值：可能不足以完全触发从BMSFO到PVSFO的相变，或者相变不完全，导致电导的增加不够稳定，可能会在VG去除后逐渐衰减回到原始状态，而不能实现长期的稳定保持。</li><li>脉冲幅度和脉冲宽度对兴奋性突触后电流（EPSC）的影响：<ul><li>脉冲幅度对EPSC的影响：通过改变栅极电压（VG）脉冲的幅度，可以改变EPSC的大小。具体来说，当VG脉冲的幅度增加时，EPSC的幅度也会随之增加。推测这是因为更大的负VG脉冲会促进从绝缘的BMSFO相到导电的PVSFO相的相变，从而增加通道的电导。（该电流即固定$V_{SD}$ = 0.6 V的条件下同时监测源-漏电流（$I_{SD}$），可以认为电导越大，电流越大）</li><li>脉冲宽度对EPSC的影响：随着脉冲宽度的增加，栅极脉冲触发的EPSC峰值和保持值增加。推测这是因为更宽的脉冲提供了更多的时间来实现从BMSFO到PVSFO的相变，从而在通道中实现更大的电导变化。</li></ul></li><li>通过向晶体管发送交替的负电压和正电压脉冲，可以控制晶体管在两种稳定的电导状态之间切换。负电压脉冲促进从BMSFO到PVSFO的相变，增加电导；而正电压脉冲则可能促进相反的相变，降低电导。（实验中施加16个-1.8 V的负向VG脉冲将电导率从4.8 nS增加到7.8 nS。接着，使用24个幅度为+1.8 V、脉冲宽度为10秒的VG脉冲，将导电状态逐步降低，电导率最终从7.8 nS减少到4.8 nS。在循环中，电导状态稳定在4.8 nS和7.8 nS两个值）</li><li>VG 控制的长期增强(LTP)和抑制行为(LTD)，分别使用了 16 次负脉冲（−1.8 V，5 秒，间隔 10 秒）和 24 次正脉冲（1.8 V，10 秒，间隔 10 秒）。<ul><li>这些负脉冲触发了从绝缘的BMSFO相到导电的PVSFO相的相变，导致通道电导增加。随着更多的负脉冲施加，更多的氧原子被插入到SFO通道中，使得PVSFO相的比例增加，从而增强了通道的电导。这个过程模拟了生物突触中LTP的过程，即突触权重的增加。</li><li>这些正脉冲倾向于从PVSFO相中提取氧原子，促使相变回BMSFO相，导致通道电导减少。随着正脉冲的连续施加，PVSFO相的比例减少，BMSFO相的比例增加，从而降低了通道的电导。这个过程模拟了生物突触中LTD的过程，即突触权重的减少。</li></ul></li><li>STDP（Spike-Timing-Dependent Plasticity，时序依赖性突触可塑性）是一种生物神经网络中的现象，它描述了突触强度如何根据前突触和后突触活动的相对时序来增加或减少。在人工神经网络和神经形态计算中，STDP是一种重要的学习规则，用于模拟生物突触的这种时序依赖性可塑性。<ul><li>STDP原理：STDP依赖于前突触（pre-neuron）和后突触（post-neuron）之间的尖峰（spike）（脉冲）时间差异Δt。如果前突触尖峰先于后突触尖峰（Δt &gt; 0），则倾向于增强突触（LTP）；如果前突触尖峰晚于后突触尖峰（Δt &lt; 0），则倾向于抑制突触（LTD）。</li><li>实验设置：文献中通过连接一个多路复用器（multiplexer）的输出端到晶体管的栅极，并使用这个设置将前突触和后突触尖峰之间的时间差异转换为电压脉冲。这样，通过调整栅极电压脉冲的时间差异，也就等价于改变施加在晶体管栅极上的电压脉冲的时序，从而影响通道电导率，可以模拟STDP现象。</li><li>非对称STDP：当突触强度的变化仅取决于前突触和后突触尖峰的时间顺序（即Δt的符号）时，发生非对称STDP。如果前突触尖峰先于后突触尖峰（Δt &gt; 0），则发生LTP；如果前突触尖峰晚于后突触尖峰（Δt &lt; 0），则发生LTD。这种非对称STDP曲线可以通过指数衰减函数拟合，非对称STDP与生物神经网络中的STDP行为更为相似。</li><li>对称STDP：当突触强度的变化仅取决于前突触和后突触尖峰的时间差异的绝对值，而不取决于它们的时序（即Δt的符号不影响结果）时，发生对称STDP。在这种情况下，无论前突触尖峰是先于还是晚于后突触尖峰，只要时间差异的绝对值相同，突触强度的变化就是相同的。对称STDP可以通过选择适当的源尖峰形状来实现，这通常涉及到对电压脉冲波形的特定调整。</li></ul></li><li>在对字母“I”、“O”和“P”的图像在突触阵列中的编程测试中，有个对虚假脉冲的抗干扰测试−0.3 V 振幅，2 s 宽度）。对于该测试的理解：<ul><li>突触阵列对写入脉冲敏感，意味着这些脉冲（通常具有特定的幅度和时间模式）能够引起突触阵列中电导的持久变化，从而存储信息；突触阵列对干扰脉冲不敏感，意味着这些脉冲（通常幅度较小，不符合写入脉冲的特征）不会引起突触阵列中电导的持久变化。</li><li>当施加了低幅度的干扰脉冲序列后，突触阵列的电导会立即增加，但这种增加是短暂的，随后会迅速衰减。这种短期现象可以理解为静电效应，即干扰脉冲可能引起了一些瞬时的电荷重新分布，但这些变化不足以引起材料结构的长期改变。</li><li>容错性体现在即使在干扰脉冲的影响下，突触阵列仍能保持原有的信息（即“I”的图像）。这意味着虽然干扰脉冲引起了短暂的电导变化，但这些变化不足以干扰或改变阵列中已经存储的信息。  即突触阵列的电导在干扰脉冲后能够回复到初始值，这里的“初始值”指的是在施加干扰脉冲之前，阵列中存储的“I”图像对应的电导值。</li><li>该测试中写入图像通过施加 28 个 −1.8 V 栅极负脉冲，而擦除通过施加 22 个 +1.8 V 栅极正脉冲</li></ul></li><li>在神经网络中，突触层由电解质门控晶体管交叉条阵列和接入设备组成。组成的交叉阵列由行线和列线交叉组成，每个交叉点可以代表一个突触。<br>当输入向量通过交叉阵列时，每个输入元素都会根据其对应的突触权重与行向量相乘，然后所有这些乘积被求和，得到该神经元的输出。  即向量-矩阵乘法操作。<br>在学习过程中，通过调整突触权重（即交叉点上的值），可以实现对权重矩阵的更新。这种更新可以通过计算输入向量和某个神经元输出向量的外积来实现，从而调整与该神经元相连的所有突触的权重。  即外积更新操作。</li></ol><h3 id="实验部分："><a href="#实验部分：" class="headerlink" title="实验部分："></a>实验部分：</h3><ol><li>样品制备：在 (001) SrTiO₃ 衬底（MTI Ltd.）上，通过脉冲激光沉积（PLD）方法在 308 nm XeCl 准分子激光的作用下外延生长厚度为 50 nm 的褐钙钛矿相 SrFeO₂.₅ 薄膜。激光能量密度约为 2 J cm⁻²，重复频率为 2 Hz。SFO 薄膜在 750 °C 下于流动的氧气气氛中沉积，氧压为 1 × 10⁻³ Pa，并以 30 °C/min 的速率冷却至室温。SFO 薄膜的沉积速率进一步通过 X 射线反射（XRR）进行校准。</li><li>器件制备：采用标准光刻技术和氩离子刻蚀将薄膜制成带有共面栅结构的通道，通道尺寸为 210 µm × 50 µm。Pt 层通过电子束蒸发法制备作为电极。为了防止栅电极与源电极之间的电泄漏，使用硬化光刻胶作为隔离层。随后，在氧气气氛下于 250 °C 下退火 5 分钟，以增强电极接触性能。最后，通过滴加离子液体 N,N-二乙基-N-(2-甲氧基乙基)-N-甲基铵双（三氟甲基磺酰基）亚胺于通道和栅电极上完成晶体管器件的制备。</li><li>样品表征：<ul><li>使用X射线衍射仪进行X射线衍射测量。</li><li>使用光谱光度计在室温下测量光学透射光谱。</li><li>使用扫描透射电子显微镜（STEM）和高角环形暗场（HAADF）成像技术表征SFO薄膜的原子结构。</li><li>通过电子能量损失谱（EELS）和X射线吸收光谱（XAS）进一步揭示了SFO薄膜的电子结构和相变。</li></ul></li><li>电学测量：<ul><li>在常温环境条件下使用Lakeshore探针台和Keithley 4200半导体参数分析仪测量电解质门控SFO器件的电学特性。</li><li>转移曲线的扫描速率约为1 mV/s。</li></ul></li></ol><h3 id="PDF展示："><a href="#PDF展示：" class="headerlink" title="PDF展示："></a>PDF展示：</h3><div class="row">    <embed src="/pdf/A_Ferrite_Synaptic_Transistor_with_Topotactic_Transformation.pdf" width="100%" height="550" type="application/pdf"></div><hr>]]></content>
      
      
      <categories>
          
          <category> 科研笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 毕设 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>毕设笔记(一)</title>
      <link href="/2024/11/20/%E6%AF%95%E8%AE%BE%E7%AC%94%E8%AE%B0-%E4%B8%80/"/>
      <url>/2024/11/20/%E6%AF%95%E8%AE%BE%E7%AC%94%E8%AE%B0-%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<p><em>*</em>Gate-Tunable Anisotropic Oxygen Ion Migration in SrCoOx: Toward Emerging Oxide-Based Artificial Synapses</p><h2 id="门控可调各向异性氧离子迁移在SrCoOx中的应用：迈向新兴的基于氧化物的人工突触"><a href="#门控可调各向异性氧离子迁移在SrCoOx中的应用：迈向新兴的基于氧化物的人工突触" class="headerlink" title="(门控可调各向异性氧离子迁移在SrCoOx中的应用：迈向新兴的基于氧化物的人工突触)"></a>(门控可调各向异性氧离子迁移在SrCoOx中的应用：迈向新兴的基于氧化物的人工突触)</h2><h3 id="主题："><a href="#主题：" class="headerlink" title="主题："></a>主题：</h3><p>&emsp;&emsp;离子液体（IL）的栅极控制极化产生的超高电场可以操纵的<span class='p red'>氧离子注入和萃取</span>，实现离子液体门控的氧离子迁移，以实现绝缘态 SrCoO₂.₅(BM-SCO) 和金属态 SrCoO₃(P-SCO) 之间的可逆相变，还探索包括电场和浓度梯度在离子迁移中的作用，以及氧骨架对离子液体门控效应的影响。 并发现离子迁移高度依赖晶体方向，尤其是沿 [110] 方向，能实现快速氧离子传输通道。</p><h3 id="实现装置："><a href="#实现装置：" class="headerlink" title="实现装置："></a>实现装置：</h3><p>&emsp;&emsp;用通过离子迁移操作的三端电解质晶体管模拟生物神经元和突触连接，<span class='p red'>栅电极</span>被视为突触前终端，用于施加尖峰脉冲；<span class='p red'>沟道层</span>相当于突触后膜，其电导率可被栅极电压（尖峰脉冲）改变。</p><h3 id="实验结论："><a href="#实验结论：" class="headerlink" title="实验结论："></a>实验结论：</h3><h4 id="BM-SCO-中不同晶向对电导率的调制"><a href="#BM-SCO-中不同晶向对电导率的调制" class="headerlink" title="BM-SCO 中不同晶向对电导率的调制"></a>BM-SCO 中不同晶向对电导率的调制</h4><ul><li>在 (001) 和 (011) SrTiO₃ (STO) 基底上沉积了厚度为 40 nm 的外延 BM-SCO 薄膜，以BM-SCO 为沟道材料，作了一系列双沟道电解质晶体管器件，所谓双沟道，即通道 I：是直接与离子液体接触的通道，因此受到离子液体门控效应的影响，其电导率可以被门电压（Vg）调制。通道 II：是不与离子液体接触的通道，因此其电导率不受离子液体门控效应的直接影响，但可以通过通道 I 中的氧离子浓度梯度间接受到影响。</li><li>σ₁：代表通道 I 的电导率，即直接位于离子液体（IL）下方的通道的电导率。σ₂：代表通道 II 的电导率，即没有被离子液体覆盖的通道的电导率。σ₁[100] 和 σ₂[100] 则是指这些通道沿着[100]方向的电导率，同理，σ₁[110] 和 σ₂[110]则是指这些通道沿着[110]方向的电导率。</li><li>(001)BM-SCO：表示BM-SCO（SrCoO2.5）薄膜在晶体生长过程中，其晶体结构中的(001)平面与基底（substrate）的(001)平面平行。这意味着薄膜的晶体结构沿着基底的[001]方向生长，这个方向通常与基底的晶体结构相匹配，以实现外延生长。(011)BM-SCO：表示BM-SCO薄膜在晶体生长过程中，其晶体结构中的(011)平面与基底的(011)平面平行。这表明薄膜的晶体结构沿着基底的[011]方向生长。<br>这些数字代表了晶体的Miller指数，用于描述晶体中原子平面的方向。Miller指数是一组三个整数，用于唯一标识晶体中的一个平面，它们是晶格平面与晶体坐标轴截距的倒数，并且通常取最小的正整数。</li><li>实验发现：<ol><li>先分析 (001) 和 (011) BM-SCO 中通道 I 沿 [100] 方向的电导率，(001) 和 (011) BM-SCO 的主要区别在于 (001) BM-SCO 的电导率变化所需的阈值电压较低，表明在电场作用下，(001) BM-SCO 中的面内氧离子迁移更容易、更快。</li><li>当 (001) BM-SCO 的两个通道沿 [100] 方向时，即σ₁[100] 和 σ₂[100]，发现σ₂ 的变化始终落后于 σ₁。此时通道 I 中 σ₁ 和通道 II 中 σ₂ 的变化均由氧离子的迁移引起，但σ₁是受到 IL/BM-SCO 界面的电场驱动，而σ₂是受到两个通道之间氧离子浓度梯度的驱动。</li><li>当 (001) BM-SCO 的两个通道沿 [110] 方向时，即σ₁[110] 和 σ₂[110]，发现σ₁-[110] 和σ₂-[110] 对 Vg 的响应速度都快于 σ₁-[100]和σ₂-[100]，且在[110]方向 通道中的 σ₁ 和 σ₂ 的最大差值很小，两者很接近。而在[100]方向 通道中的 σ₁ 和 σ₂ 的最大差值很大。<br>σ₂ 对 Vg 的不同响应表明，由浓度梯度驱动的氧离子迁移具有高度的各向异性，且 [110] 方向迁移速度远快于 [100] 方向。</li></ol></li></ul><h4 id="001-和-011-BM-SCO-的晶体结构"><a href="#001-和-011-BM-SCO-的晶体结构" class="headerlink" title="(001) 和 (011) BM-SCO 的晶体结构"></a>(001) 和 (011) BM-SCO 的晶体结构</h4><ul><li>通过 (001) BM-SCO 薄膜分别沿 [100] 和 [110] 方向的投影制备了两种 STEM 样品，发现[100] 和 [110] 投影的主要区别在于 [110] 投影的 CoO 亚层中存在周期性的 Co–Co 对，并且氧空位柱位于 Co–Co 配对之间的空隙中。[110] 方向上的 VO 柱可以提供快速的氧离子传输通道。</li><li>相比(001) BM-SCO，(011) BM-SCO 的 VO 柱具有平面外分量。由于 BM-SCO 的电导率是在平面内测量的，因此具有平面内 VO 柱的（001）BM-SCO 的电导率比具有平面外倾斜 VO 柱的（011）BM-SCO 的电导率变化更快。   <u>与1.3.1实验发现1结论一致</u></li></ul><h4 id="BM-SCO-人工突触的可塑性"><a href="#BM-SCO-人工突触的可塑性" class="headerlink" title="BM-SCO 人工突触的可塑性"></a>BM-SCO 人工突触的可塑性</h4><ul><li>电导率、栅电压以及由 IL 门控引起的电导率变化可以分别看作突触权重、脉冲和突触可塑性。  short-term plasticity（短期可塑性）和long-term plasticities（长期可塑性）是指人工突触模拟生物突触的两种不同的动态响应方式，它们分别对应于生物突触的短期和长期强度变化。这些特性是通过改变突触权重（在本研究中以电导率表示）来实现的，模拟了人脑中学习和记忆的过程。</li><li>短期可塑性是指在较小的门电压（Vg）刺激下造成瞬时不稳定的氧离子迁移，BM-SCO人工突触的电导率（突触权重）发生暂时性的改变。这种改变是可逆的，即在移除刺激后，电导率会恢复到原始状态。<br>在文献中，短期可塑性通过应用较小幅度的负Vg脉冲（对于 (001) BM-SCO的σ₁-[100]，例如-0.5 V和-1 V）来实现，这些脉冲引起的电导率变化在脉冲结束后会迅速衰减回初始状态，表现为电导率的瞬时增加和随后的快速下降。</li><li>长期可塑性是指在较大的门电压刺激下造成永久性氧离子迁移，BM-SCO人工突触的电导率发生持久性的改变。这种改变是非挥发性的，即在移除刺激后，电导率的增加或减少可以长时间保持，模拟了长期记忆的形成。<br>在文献中，长期可塑性通过应用较大幅度的负Vg脉冲（对于 (001) BM-SCO的σ₁-[100]，例如-1.5 V、-1.7 V和-2 V）来实现，这些脉冲引起的电导率变化在脉冲结束后仍然保持，表现为电导率的持续增加或减少。</li><li>这两种可塑性是通过改变门电压的幅度和脉冲间隔来控制的。当脉冲间隔减小时，将可塑性从短期转变为长期，也可增强长期可塑性中的调制效果（负脉冲则电导率增强更多，正脉冲则电导率减少更多。）</li><li>在(011) BM-SCO中，增加栅压Vg和缩短脉冲间隔同样会增强σ1-[100]，但其长期可塑性所需的Vg阈值相对(001) BM-SCO更高。<u>与1.3.1实验发现1结论一致</u></li><li>基于离子液体（IL）门控效应的可逆性：通过改变栅极电压，可以实现对材料电导率的增加或减少，并且在移除电压后，材料的电导率可以恢复到原始状态。<br>当在离子液体门控晶体管中施加负栅极电压时，氧离子会从离子液体注入到BM-SCO薄膜中，导致电导率增加。相反，当施加正栅极电压时，氧离子会从BM-SCO薄膜中提取出来，导致电导率减少。<br>这种电导率的变化是可逆的，即在移除栅极电压后，BM-SCO薄膜的电导率可以恢复到未施加电压时的状态。<br>离子液体门控效应的这种可逆过程对应BM-SCO薄膜的相变，如从绝缘的brownmillerite相（SrCoO2.5）到金属的perovskite相（SrCoO3）的转变。</li></ul><h4 id="基于长期增强和长期抑制的手写数字识别模拟"><a href="#基于长期增强和长期抑制的手写数字识别模拟" class="headerlink" title="基于长期增强和长期抑制的手写数字识别模拟"></a>基于长期增强和长期抑制的手写数字识别模拟</h4><ul><li>LTP和LTD具有“良好的线性开关特性”意味着电导率的变化与施加的栅极电压（Vg）之间存在线性关系，即电导率的增加或减少与电压变化成比例。这种线性关系对于实现精确的突触权重调制至关重要。<br>非线性因子是用来量化LTP和LTD过程中电导率变化的非线性程度的参数。非线性因子越接近1，表示电导率变化越接近线性。非线性因子是一个量化线性程度的指标，非线性因子较低表示电导率变化与输入信号之间的关系更接近于直线，这是一个理想的特性，因为它允许更精确和可预测的突触权重调整。</li><li>实验发现， BM-SCO人工突触的LTP和LTD的非线性因子分别为0.70和0.81，整体上低于(001) BM-SCO人工突触的0.60（LTP）和1.29（LTD），因此导致了相对较高的识别精度。</li></ul><h4 id="基于各向异性权重调制的平面内-001-BM-SCO突触的多样性"><a href="#基于各向异性权重调制的平面内-001-BM-SCO突触的多样性" class="headerlink" title="基于各向异性权重调制的平面内 (001) BM-SCO突触的多样性"></a>基于各向异性权重调制的平面内 (001) BM-SCO突触的多样性</h4><ul><li>沿[100]和[110]方向分别制造了两个独立的双通道晶体管，串联的通道I由电场驱动发生氧离子迁移，而通道II由浓度梯度驱动发生氧离子迁移。<br>在IL中分解的氧离子首先在负栅电压下注入通道I的表面，从而在垂直方向上形成氧离子浓度梯度，驱动氧离子向薄膜中扩散。即使不再施加栅电压，氧离子通过浓度梯度驱动的扩散长度仍在微米量级。通道I中的较高氧离子浓度也会诱发横向浓度梯度，驱动氧离子向通道II的横向扩散。而当施加正栅电压时，氧离子浓度梯度和扩散方向则正好相反。</li><li>当Vg为-0.5V时，电场可能不足以在σ2-[110]和σ2-[100]通道中引起显著的氧离子迁移，因此它们的电导率变化不大。而σ1-[110]通道直接受到电场的影响，因此即使在较低的Vg下也能观察到短期可塑性。</li><li>当Vg增加到-1.5V时，电场变得更强，足以在σ1-[110]和σ2-[110]通道中引起显著的氧离子迁移，导致长期可塑性。然而，σ2-[100]通道可能由于晶体取向的不同，氧离子迁移的路径和速率受到影响，因此在同样的Vg下，其电导率变化不如σ2-[110]显著。参见1.3.2，[110] 方向上的 VO 柱可以提供快速的氧离子传输通道。</li><li>当Vg进一步增加到-2V时，电场变得更强，足以在所有通道中引起更显著的氧离子迁移。σ1-[110]和σ2-[110]通道各由于电场和浓度梯度的作用，表现出更强的长期可塑性。而对于σ2-[100]通道，尽管其电导率变化不如σ2-[110]显著，但在更强的横向浓度梯度驱动下，也开始表现出短期可塑性。</li></ul><h3 id="实验部分"><a href="#实验部分" class="headerlink" title="实验部分"></a>实验部分</h3><ol><li>样品制备：<br>高质量的BM-SCO薄膜，厚度约为40纳米，通过脉冲激光沉积法在(001)和(011) SrTiO3 (STO)基底上生长。(使用的是248 nm KrF氪氟激光器。激光的能量密度为1.2 J/cm²)<br>BM-SCO薄膜在760°C和5×10^-4 mbar的氧气压力下生长，随后在1×10^-3 mbar的氧气压力下冷却至室温。</li><li>器件结构：<br>通过光刻和湿法刻蚀,BM-SCO薄膜被图案化为双通道晶体管结构，通道长度为400微米，宽度为100微米。<br>通过磁控溅射技术沉积铂(Pt)和钛(Ti)作为电极。</li><li>门电解质：<br>使用离子液体N,N-二乙基-N(2-甲氧基乙基)-N-甲基铵双三氟甲磺酰亚胺(DEME-TFSI)作为栅极电解质。滴加到特定位置，以覆盖栅电极和通道I。</li><li>测量条件：<br>所有测量在300K（室温）下进行。<br>源-漏极之间的读电压为0.1V。</li><li>电导率测量：<ul><li>使用Keithley 2400源表以双探针配置测量BM-SCO器件的电导率。</li><li>不同的连续或脉冲栅电压通过另一台Keithley 2400源表施加于栅极与漏极之间。</li></ul></li><li>晶体结构和原子结构表征：<ul><li>使用原子分辨率的校正STEM（扫描透射电子显微镜）来研究原子结构。</li><li>使用X射线衍射和X射线吸收光谱测量来检查薄膜的晶体结构。</li></ul></li><li>磁性能测量：<ul><li>使用VersaLab（Quantum Design）测量磁性能。</li></ul></li></ol><h3 id="一些要点"><a href="#一些要点" class="headerlink" title="一些要点"></a>一些要点</h3><p>基于BM-SCO（brownmillerite SrCoO2.5）的电解质晶体管来构建人工神经网络：<br>工作过程：</p><ol><li>输入层到隐藏层的转换：<ul><li>人工神经网络的输入层包含多个输入神经元，每个神经元对应一个输入值。在硬件实现中，这些输入值是数字图像的像素值。</li><li>这些输入值被送入一个BM-SCO基电解质晶体管交叉阵列，该阵列的大小为Xm×Hn，其中Xm是输入神经元的数量，Hn是隐藏神经元的数量。</li><li>通过施加“读取脉冲”（read pulses），输入层的每个像素值都会激活对应的晶体管，从而在隐藏层产生Hn个隐藏神经元的输出，这些输出被称为“读取输出”（read output）。</li></ul></li><li>隐藏层到输出层的转换：<ul><li>隐藏层的输出随后被送入另一个Hn×10的BM-SCO基电解质晶体管交叉阵列，以产生输出层的神经元值。</li><li>这些输出神经元的值范围从0到9，代表图像识别的结果，例如手写数字识别。</li></ul></li><li>训练过程：<ul><li>在训练过程中，通过“编程脉冲”（programming pulses），可以修改交叉阵列中晶体管的电导率，从而调整突触权重。</li><li>这些权重的调整是基于经典的反向传播算法，使用曼哈顿规则进行硬件训练，以提高识别的准确性。<br>原理：</li></ul></li></ol><ul><li>电解质晶体管的门控效应：<ul><li>BM-SCO电解质晶体管的关键在于其门控效应，即通过改变栅极电压（Vg）来控制晶体管的电导率，模拟突触权重的变化。</li><li>这种门控效应允许晶体管模拟突触的长时程增强（LTP）和长时程抑制（LTD），即突触权重的长期增加和减少。</li></ul></li><li>向量矩阵乘法：<ul><li>通过调整每个晶体管的电导率，晶体管交叉阵列可以执行向量矩阵乘法，这是神经网络中前向传播的基本操作。</li><li>每个输入向量与突触权重矩阵的乘积产生了隐藏层的输出向量。</li></ul></li><li>硬件训练：<ul><li>在训练阶段，通过调整栅极电压来改变晶体管的电导率，从而优化突触权重，这是模拟神经网络学习过程的关键。<br>一些解释：</li></ul></li></ul><ol><li>理解“编程脉冲”：<ul><li>“编程脉冲”（programming pulses）是指在人工突触的训练过程中，用于调整突触权重（即晶体管电导率）的一系列电信号。这些脉冲基于学习规则（如反向传播算法）来修改突触权重，以优化网络的性能。</li><li>这些脉冲的施加依据是网络的错误信号，即实际输出与期望输出之间的差异。通过这个差异，可以计算出权重调整的方向和幅度，以减少未来的错误。</li></ul></li><li>理解突触权重：<ul><li>在人工神经网络中，突触权重代表了输入信号对输出信号的影响程度。在BM-SCO基电解质晶体管交叉阵列中，突触权重通过晶体管的电导率来模拟。电导率较高的晶体管表示较强的连接（较大的权重），而电导率较低的晶体管表示较弱的连接（较小的权重）。</li></ul></li><li>通过调整每个晶体管的电导率实现向量矩阵乘法：<ul><li>向量矩阵乘法是神经网络中前向传播的基本操作，它计算输入向量与权重矩阵的乘积以产生输出向量。</li><li>在BM-SCO基电解质晶体管交叉阵列中，每个晶体管的电导率对应于权重矩阵中的一个元素。通过调整每个晶体管的电导率，可以实现权重矩阵与输入向量的乘法运算。具体来说，输入信号（如图像的像素值）激活对应的晶体管，产生不同的栅压，而栅极电压控制的电导率决定了信号的强度，从而模拟了权重与输入的乘积。</li></ul></li><li>“读取脉冲”与晶体管数量的关系：<ul><li>“读取脉冲”（read pulses）是指用于从输入层读取信号并激活对应晶体管的电信号。在这种情况下，每个输入信号（如图像的一个像素值）对应一个晶体管，这意味着晶体管的数量与输入层的像素值数量一致。</li><li>这种一一对应的关系确保了每个输入信号都能独立地影响网络的输出，从而允许网络处理复杂的输入模式，如图像识别。</li></ul></li></ol><p>全流程：<br>步骤1：图像输入</p><ul><li><strong>输入层</strong>：输入数据是手写数字的图像，每个图像被转换成一个数字矩阵，其中每个元素代表一个像素值。</li><li><strong>像素值</strong>：图像中的每个像素值对应于输入层的一个神经元。</li></ul><p>步骤2：输入信号的读取</p><ul><li><strong>读取脉冲</strong>：为了读取输入信号，对每个输入神经元施加“读取脉冲”（read pulses），这实际上是一系列电信号，用于激活与每个输入像素值相对应的晶体管。</li><li><strong>晶体管激活</strong>：每个输入信号（像素值）激活对应的晶体管，产生不同栅压，栅压再调控电导率，晶体管的电导率代表了该输入信号的权重。</li></ul><p>步骤3：向量-矩阵乘法</p><ul><li><strong>突触权重矩阵</strong>：输入层的信号通过BM-SCO基电解质晶体管交叉阵列，这个阵列代表了突触权重矩阵。</li><li><strong>电导率调整</strong>：每个晶体管的电导率被调整以模拟突触权重，这些权重是通过训练过程中的“编程脉冲”（programming pulses）确定的。</li><li><strong>信号加权</strong>：输入信号（像素值）通过各自的晶体管，根据晶体管的电导率（突触权重）进行加权。</li></ul><p>步骤4：隐藏层的计算</p><ul><li><strong>隐藏层输出</strong>：加权后的信号在隐藏层神经元中进行累加，产生隐藏层的输出，这个过程模拟了神经网络中的前向传播。</li><li><strong>非线性激活</strong>：在某些情况下，可能还会应用非线性激活函数来引入非线性特性，增强网络的表达能力。</li></ul><p>步骤5：输出层的计算</p><ul><li><strong>输出层信号传递</strong>：隐藏层的输出信号被传递到另一个BM-SCO基电解质晶体管交叉阵列，这个阵列代表了从隐藏层到输出层的突触权重矩阵。</li><li><strong>最终输出计算</strong>：再次进行向量-矩阵乘法，计算隐藏层输出与输出层权重的乘积，得到最终的输出信号。</li></ul><p>步骤6：输出结果</p><ul><li><strong>输出层神经元</strong>：输出层的神经元数量通常与分类任务的类别数相匹配，例如，手写数字识别可能有10个输出神经元，每个神经元代表一个数字（0到9）。</li><li><strong>识别结果</strong>：输出层神经元的激活值（电导率）决定了最终的识别结果。通常，具有最高激活值的神经元对应的类别被认为是输入图像的识别结果。</li></ul><p>步骤7：训练和优化</p><ul><li><strong>误差反馈</strong>：在训练阶段，网络的输出与真实标签进行比较，计算误差。</li><li><strong>权重更新</strong>：基于误差，使用反向传播算法更新突触权重（晶体管电导率），以减少未来的误差。</li></ul><p>步骤8：迭代学习</p><ul><li><strong>多次迭代</strong>：通过多次迭代训练，网络逐渐学习如何准确地识别手写数字，每次迭代都通过调整突触权重来优化网络的性能。</li></ul><p>通过上述步骤，基于BM-SCO电解质晶体管交叉阵列的硬件实现神经网络能够从图像输入中学习特征，并最终输出识别结果。这种硬件实现利用了材料的电学特性来模拟神经网络的计算过程，为开发低功耗、高效率的神经形态计算系统提供了新的思路。</p><h3 id="PDF展示："><a href="#PDF展示：" class="headerlink" title="PDF展示："></a>PDF展示：</h3><div class="row">    <embed src="/pdf/Gate_Tunable_Anisotropic_Oxygen_Ion_Migration_in_SrCoOx_Toward_Emerging.pdf" width="100%" height="550" type="application/pdf"></div><hr>]]></content>
      
      
      <categories>
          
          <category> 科研笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 毕设 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog搭建的一些知识点</title>
      <link href="/2024/10/22/Blog%E6%90%AD%E5%BB%BA%E7%9A%84%E4%B8%80%E4%BA%9B%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
      <url>/2024/10/22/Blog%E6%90%AD%E5%BB%BA%E7%9A%84%E4%B8%80%E4%BA%9B%E7%9F%A5%E8%AF%86%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>编辑记录</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2024-10-22 第一次编辑</p></div></div><div class='timeline-item-content'><p>设置随机背景和一些小坑</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2024-10-25 第二次编辑</p></div></div><div class='timeline-item-content'><p>其他碎碎念</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2024-11-16 第三次编辑</p></div></div><div class='timeline-item-content'><p>完善音乐界面</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2024-11-23 第四次编辑</p></div></div><div class='timeline-item-content'><p>解决一些bug</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2024-12-09 第五次编辑</p></div></div><div class='timeline-item-content'><p>优化看板娘</p></div></div></div><p>&emsp;&emsp;本文章是作为此次开发个人<strong>Hexo</strong>博客过程遇到的坑及其解决方法的总结。</p><h2 id="怎么设置随机主题背景"><a href="#怎么设置随机主题背景" class="headerlink" title="怎么设置随机主题背景"></a>怎么设置随机主题背景</h2><h3 id="随机文章封面背景"><a href="#随机文章封面背景" class="headerlink" title="随机文章封面背景"></a>随机文章封面背景</h3><p>&emsp;&emsp;随机文章封面的实现使用的是hexo后端静态的js脚本实现，在<code>\themes\butterfly\scripts</code>中新建<code>random_img.js</code>，每当重新hexo三连时，都会执行这里的js，不过是静态的，不能动态变化，即不能刷新网页执行。<br>&emsp;&emsp;该脚本的思路是：通过<code>hexo.theme.config.xxx</code>来读取主题配置文件(<code>_config.butterfly.yml</code>)的对应参数，这里是<code>mytheme</code>，读取之后根据是否有值来决定根据日期随机还是选择某个确定主题。<br>&emsp;&emsp;该脚本不需要<em>inject</em>注入，这里设置文章封面本质还是获取了主题配置文件的<code>cover</code>参数进行封面设置。</p><h3 id="随机小站背景"><a href="#随机小站背景" class="headerlink" title="随机小站背景"></a>随机小站背景</h3><p>&emsp;&emsp;设置随机背景，使用的是前端能动态刷新的js脚本实现，并与后端js进行通信传递参数，在<code>\themes\butterfly\source\js</code>中新建<code>randombg.js</code>，此为前端脚本，负责刷新封面；在<code>\themes\butterfly\scripts</code>中新建<code>setbgtheme.js</code>，此为后端脚本，负责获取主题配置文件参数，并传递到前端js。<br>&emsp;&emsp;<code>setbgtheme.js</code>的代码如下：<br><div class="tabs" id="setbgtheme"><ul class="nav-tabs"><button type="button" class="tab " data-href="setbgtheme-1">setbgtheme 1</button><button type="button" class="tab  active" data-href="setbgtheme-2">setbgtheme 2</button></ul><div class="tab-contents"><div class="tab-item-content" id="setbgtheme-1"><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">hexo.<span class="property">extend</span>.<span class="property">filter</span>.<span class="title function_">register</span>(<span class="string">&#x27;after_render:html&#x27;</span>, <span class="function">(<span class="params">str</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> bgtheme = hexo.<span class="property">theme</span>.<span class="property">config</span>.<span class="property">bgtheme</span>;</span><br><span class="line">    <span class="keyword">return</span> str.<span class="title function_">replace</span>(<span class="string">&#x27;&lt;/head&gt;&#x27;</span>, <span class="string">`</span></span><br><span class="line"><span class="string">        &lt;script&gt;</span></span><br><span class="line"><span class="string">            window.bgtheme = &quot;<span class="subst">$&#123;bgtheme&#125;</span>&quot;;</span></span><br><span class="line"><span class="string">        &lt;/script&gt;</span></span><br><span class="line"><span class="string">    &lt;/head&gt;`</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><div class="tab-item-content active" id="setbgtheme-2"><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">hexo.<span class="property">extend</span>.<span class="property">filter</span>.<span class="title function_">register</span>(<span class="string">&#x27;after_render:html&#x27;</span>, <span class="function">(<span class="params">str</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> bgtheme = hexo.<span class="property">theme</span>.<span class="property">config</span>.<span class="property">Mytheme</span>;</span><br><span class="line">    <span class="keyword">return</span> str.<span class="title function_">replace</span>(<span class="string">&#x27;&lt;/head&gt;&#x27;</span>, <span class="string">`</span></span><br><span class="line"><span class="string">        &lt;script&gt;</span></span><br><span class="line"><span class="string">            window.bgtheme = &quot;<span class="subst">$&#123;bgtheme&#125;</span>&quot;;</span></span><br><span class="line"><span class="string">        &lt;/script&gt;</span></span><br><span class="line"><span class="string">    &lt;/head&gt;`</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><br>作用是在渲染html后，获取主题配置文件的参数<code>bgtheme</code>，并通过<code>window.bgtheme</code>传递到前端脚本。<br>&emsp;&emsp;<code>randombg.js</code>的类似前面随机文章封面，但设置封面是通过<code>F12</code>获取网站对应封面元素，再进行设置，但注意，由于设置封面是使用了<code>url()</code>的形式，其中的图片链接参数的空格会被忽略，因此要加上空格转换为<code>%20</code>的代码<code>const backgroundUrl = backimg.replace(/ /g, &quot;%20&quot;)</code>，此外，要想获取到封面元素，主题配置文件中的参数<code>background</code>必须要设置一个默认封面，网页才能渲染出元素用于脚本获取。（该脚本需要在主题配置文件进行<em>inject</em>注入，每次刷新网页都会进行更新）</p><h3 id="随机磁贴封面背景"><a href="#随机磁贴封面背景" class="headerlink" title="随机磁贴封面背景"></a>随机磁贴封面背景</h3><p>&emsp;&emsp;设置随机背景，使用的是前端能动态刷新的js脚本实现，并与后端js进行通信传递参数，在<code>\themes\butterfly\source\js</code>中新建<code>random_mag_bg.js</code>，此为前端脚本，负责刷新封面；在<code>\themes\butterfly\scripts</code>中新建<code>setmagtheme.js</code>，此为后端脚本，负责获取配置文件(<code>_config.yml</code>)参数，并传递到前端js。<br>&emsp;&emsp;<code>setmagtheme.js</code>的代码如下：<br><div class="tabs" id="setmagtheme"><ul class="nav-tabs"><button type="button" class="tab " data-href="setmagtheme-1">setmagtheme 1</button><button type="button" class="tab  active" data-href="setmagtheme-2">setmagtheme 2</button></ul><div class="tab-contents"><div class="tab-item-content" id="setmagtheme-1"><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">hexo.<span class="property">extend</span>.<span class="property">filter</span>.<span class="title function_">register</span>(<span class="string">&#x27;after_render:html&#x27;</span>, <span class="function">(<span class="params">str</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; config &#125; = hexo;</span><br><span class="line">    <span class="comment">// 读取选定主题</span></span><br><span class="line">    <span class="keyword">const</span> selectedTheme = config.<span class="property">selected_theme</span>; </span><br><span class="line">   </span><br><span class="line">    <span class="keyword">return</span> str.<span class="title function_">replace</span>(<span class="string">&#x27;&lt;/head&gt;&#x27;</span>, <span class="string">`</span></span><br><span class="line"><span class="string">        &lt;script&gt;</span></span><br><span class="line"><span class="string">            window.selectedTheme = &quot;<span class="subst">$&#123;selectedTheme&#125;</span>&quot;;</span></span><br><span class="line"><span class="string">            console.log(&quot;当前mag主题:&quot;, window.selectedTheme);</span></span><br><span class="line"><span class="string">        &lt;/script&gt;</span></span><br><span class="line"><span class="string">    &lt;/head&gt;`</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><div class="tab-item-content active" id="setmagtheme-2"><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">hexo.<span class="property">extend</span>.<span class="property">filter</span>.<span class="title function_">register</span>(<span class="string">&#x27;after_render:html&#x27;</span>, <span class="function">(<span class="params">str</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> selectedTheme = hexo.<span class="property">theme</span>.<span class="property">config</span>.<span class="property">Mytheme</span></span><br><span class="line">    <span class="keyword">return</span> str.<span class="title function_">replace</span>(<span class="string">&#x27;&lt;/head&gt;&#x27;</span>, <span class="string">`</span></span><br><span class="line"><span class="string">        &lt;script&gt;</span></span><br><span class="line"><span class="string">            window.selectedTheme = &quot;<span class="subst">$&#123;selectedTheme&#125;</span>&quot;;</span></span><br><span class="line"><span class="string">            console.log(&quot;当前mag主题:&quot;, window.selectedTheme);</span></span><br><span class="line"><span class="string">        &lt;/script&gt;</span></span><br><span class="line"><span class="string">    &lt;/head&gt;`</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></p><p>由此将配置文件的参数<code>config.selected_theme</code>通过<code>window.selectedTheme</code>传递到前端js。<br>&emsp;&emsp;<code>random_mag_bg.js</code>与<code>randobg.js</code>类似，也是获取网页对应部分元素设置背景图片，不过不需要在配置文件先配置<code>message.cover</code>，但同样需要在主题配置文件注入。</p><div class="tip warning faa-horizontal animated-hover"><p>有空时可以将配置文件的三个theme合为一个</p></div><div class="note success simple"><p>已成功统一参数为Mytheme 2024.10.25</p></div><h2 id="一些小坑"><a href="#一些小坑" class="headerlink" title="一些小坑"></a>一些小坑</h2><h3 id="自动部署遇到问题"><a href="#自动部署遇到问题" class="headerlink" title="自动部署遇到问题"></a>自动部署遇到问题</h3><ul><li>在<code>Github Actions</code>启动自动部署时，发现当按时间触发时，<code>random_img.js</code>并没有按日期更换主题，而当<code>push</code>触发时，却能切换，查找资料，<del>发现原来是因为时间触发时没有清理图片缓存导致没法更新 ，解决方法就是在图片链接后加<code>&#39;?v=&#39; + new Date().getTime()</code>，例如<code>https://cloudflare-imgbed-9os.pages.dev/file/1729429003335_kon_24.webp?v=1729578064697</code>。</del> 这样每次加载图片都会变化，但加上这个字符串并不会影响原来图片的有效性。</li><li>在首次进行自动部署时，需要获取追番信息的话，需要在<code>autodeploy.yml</code>中加入相应代码：<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">生成静态文件</span></span><br><span class="line">  <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    hexo bangumi -u #或者hexo bangumi -u &#x27;SESSDATA&#x27;</span></span><br><span class="line"><span class="string">    hexo clean</span></span><br><span class="line"><span class="string">    hexo generate</span></span><br></pre></td></tr></table></figure></li><li><p><a href="https://akilar.top/posts/f752c86d/"><code>Github Pages</code>全自动部署教程</a></p></li><li><p>10.25更新：重新写一个自动部署程序，前面通过在图片后加日期字符串并不起作用，于是采用<code>hexo deploy</code>的方式进行部署。步骤如下：</p><ul><li><strong>在生成</strong>SSH<strong>密钥时，确保生成 PEM 格式的密钥</strong>：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096 -m PEM -C <span class="string">&quot;your_email@example.com&quot;</span></span><br></pre></td></tr></table></figure></li><li><strong>将 SSH 公钥添加到 GitHub</strong>：<ul><li>打开 GitHub 网站，在你的用户设置中找到 <code>Settings &gt; SSH and GPG keys</code></li><li>点击 <code>New SSH key</code>，将生成的 <code>id_ed25519.pub(假如是id_ed25519)</code> 文件中的内容复制并粘贴到 GitHub 的 SSH 公钥输入框中。</li></ul></li><li><strong>在 GitHub Actions 中添加 SSH 私钥</strong>：<ul><li>进入你的 GitHub 项目页面，点击 <code>Settings &gt; Secrets and variables &gt; Actions</code>。</li><li>添加一个新的 <code>Secret</code>，命名为 <code>ACTIONS_DEPLOY_KEY</code>，并将 <code>id_ed25519</code> 文件的内容复制进去。注意，这里是 SSH 的私钥。</li></ul></li><li><strong>修改 _config.yml 使用 SSH URL</strong>：<ul><li>使用 SSH URL 代替 HTTPS，修改 _config.yml 文件的 deploy 配置，如下所示：<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:ei4869/ei4869.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure></li></ul></li><li><strong>更新 GitHub Actions 工作流以支持 SSH</strong>：<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">自动部署</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">release:</span></span><br><span class="line">    <span class="attr">types:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">published</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">schedule:</span></span><br><span class="line">    <span class="comment"># 每天的0点和3点（北京时间）自动部署</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">cron:</span> <span class="string">&#x27;0 16 * * *&#x27;</span>  <span class="comment"># UTC时间16点对应北京时间0点.</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">cron:</span> <span class="string">&#x27;0 19 * * *&#x27;</span>  <span class="comment"># UTC时间19点对应北京时间3点.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">deploy:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">检查分支</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">ref:</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装</span> <span class="string">Node</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">node-version:</span> <span class="string">&quot;20.x&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">设置时区</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">echo</span> <span class="string">&quot;TZ=&#x27;Asia/Shanghai&#x27;&quot;</span> <span class="string">&gt;&gt;</span> <span class="string">$GITHUB_ENV.</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装</span> <span class="string">Hexo</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        export TZ=&#x27;Asia/Shanghai&#x27;</span></span><br><span class="line"><span class="string">        npm install hexo-cli -g</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">缓存</span> <span class="string">Hexo</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/cache@v1</span></span><br><span class="line">      <span class="attr">id:</span> <span class="string">cache</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">node_modules</span></span><br><span class="line">        <span class="attr">key:</span> <span class="string">$&#123;&#123;</span> <span class="string">runner.OS</span> <span class="string">&#125;&#125;-$&#123;&#123;</span> <span class="string">hashFiles(&#x27;**/package-lock.json&#x27;)</span> <span class="string">&#125;&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装依赖</span></span><br><span class="line">      <span class="attr">if:</span> <span class="string">steps.cache.outputs.cache-hit</span> <span class="type">!=</span> <span class="string">&#x27;true&#x27;</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        npm install --save</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">生成静态文件</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        export TZ=&#x27;Asia/Shanghai&#x27;  # 设置时区</span></span><br><span class="line"><span class="string">        hexo clean</span></span><br><span class="line"><span class="string">        hexo generate</span></span><br><span class="line"><span class="string">        gulp</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">配置</span> <span class="string">Git</span> <span class="string">用户信息和分支</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        git config --global user.name &quot;$&#123;&#123; secrets.GITHUBUSERNAME &#125;&#125;&quot;</span></span><br><span class="line"><span class="string">        git config --global user.email &quot;$&#123;&#123; secrets.GITHUBEMAIL &#125;&#125;&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">设置</span> <span class="string">SSH</span> <span class="string">密钥</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">webfactory/ssh-agent@v0.5.3</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">ssh-private-key:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.ACTIONS_DEPLOY_KEY</span> <span class="string">&#125;&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">部署</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">        <span class="string">hexo</span> <span class="string">deploy</span></span><br></pre></td></tr></table></figure>通过以上，能实现定时自动重启项目，并且随机文章封面能定时更新。<h3 id="hexo-butterfly-categories-card插件bug"><a href="#hexo-butterfly-categories-card插件bug" class="headerlink" title="hexo-butterfly-categories-card插件bug"></a>hexo-butterfly-categories-card插件bug</h3>&emsp;&emsp;该插件bug显示的分类的名字和描述对应不上，于是暂时没有其他方法，只能不设置<code>message.descr</code>参数，即不显示描述。</li></ul></li></ul><h3 id="自定义一个樱花飘落脚本"><a href="#自定义一个樱花飘落脚本" class="headerlink" title="自定义一个樱花飘落脚本"></a>自定义一个樱花飘落脚本</h3><p>&emsp;&emsp;原脚本樱花是全屏飘落，我在<code>gallery\index.md</code>中通过</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">&quot;https://npm.elemecdn.com/tzy-blog/lib/js/other/sakura.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>进行注入，但要想部分区域注入樱花特效的话，我新建了<code>js\sakuraa.js</code>，通过修改获取的网页的元素可进行指定区域内飘落。</p><h3 id="相册界面魔改"><a href="#相册界面魔改" class="headerlink" title="相册界面魔改"></a>相册界面魔改</h3><p>&emsp;&emsp;本质通过外挂标签设置图库集合，在其<code>index.md</code>中添加：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br>但我为了指定单独修改<code>gallery</code>的界面，为其添加了指定的类<code>gallery-page</code>，如下：(10.25，更好的指定class的方法)<br><div class="tabs" id="gallery-page"><ul class="nav-tabs"><button type="button" class="tab " data-href="gallery-page-1">gallery-page 1</button><button type="button" class="tab  active" data-href="gallery-page-2">gallery-page 2</button></ul><div class="tab-contents"><div class="tab-item-content" id="gallery-page-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">body</span> <span class="attr">class</span>=<span class="string">&quot;gallery-page&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure></div><div class="tab-item-content active" id="gallery-page-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="code">    &lt;div class=&quot;gallery-group-main&quot;&gt;</span></span><br><span class="line"><span class="code">    &#123;% galleryGroup name description link img-url %&#125;</span></span><br><span class="line"><span class="code">    &#123;% galleryGroup name description link img-url %&#125;</span></span><br><span class="line"><span class="code">    &#123;% galleryGroup name description link img-url %&#125;</span></span><br><span class="line"><span class="code">    &lt;/div&gt;</span></span><br><span class="line"><span class="code">    &lt;script&gt;</span></span><br><span class="line"><span class="code">    document.addEventListener(&quot;DOMContentLoaded&quot;, function() &#123;</span></span><br><span class="line"><span class="code">        document.body.classList.add(&#x27;gallery-page&#x27;); </span></span><br><span class="line"><span class="code">    &#125;);</span></span><br><span class="line"><span class="code">    &lt;/script&gt;</span></span><br><span class="line"><span class="code">&lt;/body&gt;</span></span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><br>这样该页面就有了一个独立的指明身份的class。<span class='p red'>(使用script脚本注入，动态更改body的class为指定class，不会被其他样式改变，保证class为想要的class)</span>而后续要改动该页面样式，比如去除页面里的文本白框，让放置的图片融于背景，只需调节css样式：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 特定页面（如gallery页面）样式设置 */</span></span><br><span class="line"><span class="selector-class">.gallery-page</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: transparent <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*设置单独相册背景*/</span></span><br><span class="line"><span class="selector-class">.gallery-page</span> <span class="selector-id">#web_bg</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">https://cloudflare-imgbed-9os.pages.dev/file/1729429000558_kon_23.webp</span>) <span class="meta">!important</span>; </span><br><span class="line">  <span class="attribute">background-size</span>: cover <span class="meta">!important</span>; </span><br><span class="line">  <span class="attribute">background-position</span>: center center <span class="meta">!important</span>; </span><br><span class="line">  <span class="attribute">background-repeat</span>: no-repeat <span class="meta">!important</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.gallery-page</span> <span class="selector-class">.page</span> <span class="selector-id">#page-header</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: transparent <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.gallery-page</span> <span class="selector-class">.page</span> <span class="selector-id">#content-inner</span> <span class="selector-id">#page</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: transparent <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">border</span>: none <span class="meta">!important</span>;      <span class="comment">/*去除边框*/</span></span><br><span class="line">  backdrop-<span class="attribute">filter</span>: none <span class="meta">!important</span>; </span><br><span class="line">  <span class="attribute">box-shadow</span>: none <span class="meta">!important</span>;   <span class="comment">/*去除阴影*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.gallery-page</span> <span class="selector-class">.page</span> <span class="selector-id">#footer</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.gallery-page</span> <span class="selector-class">.page</span> <span class="selector-id">#page-header</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: initial <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>之后，要去除子图库的背景白框时，只需要在其md文件中，指定class为<code>gallery-page</code>即可，例如：<br><div class="tabs" id="gallery-page"><ul class="nav-tabs"><button type="button" class="tab " data-href="gallery-page-1">gallery-page 1</button><button type="button" class="tab  active" data-href="gallery-page-2">gallery-page 2</button></ul><div class="tab-contents"><div class="tab-item-content" id="gallery-page-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">body</span> <span class="attr">class</span>=<span class="string">&quot;gallery-page&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% gallery %&#125;</span><br><span class="line">![](<span class="link">https://cloudflare-imgbed-9os.pages.dev/file/1729306187581_kon_12.webp</span>)</span><br><span class="line">&#123;% endgallery %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure></div><div class="tab-item-content active" id="gallery-page-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line">&#123;% gallery %&#125;</span><br><span class="line">![](<span class="link">https://cloudflare-imgbed-9os.pages.dev/file/1729306187581_kon_12.webp</span>)</span><br><span class="line">&#123;% endgallery %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="code">    document.addEventListener(&quot;DOMContentLoaded&quot;, function() &#123;</span></span><br><span class="line"><span class="code">        document.body.classList.add(&#x27;gallery-page&#x27;); // 将类名添加为 music-page</span></span><br><span class="line"><span class="code">    &#125;);</span></span><br><span class="line"><span class="code">&lt;/script&gt;</span></span><br><span class="line"><span class="code">&lt;/body&gt;</span></span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></p><p>&emsp;&emsp;还有个小坑，子图库界面一开始加载时，里面的图片会一直抖动，也就是高一直在微微变化，查找资料发现是因为图片样式没有固定，导致为了适应布局图片会自己一直在变，解决方法是在css中加入固定样式的代码：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 调节相册样式，防止抖动 */</span></span><br><span class="line"><span class="selector-class">.gallery-items</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden; <span class="comment">/* 防止内容溢出 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">348px</span>; <span class="comment">/* 你可以根据需要调整 */</span></span><br><span class="line">  <span class="attribute">height</span>: <span class="number">205px</span>; <span class="comment">/* 确保所有图片区域的大小一致 */</span></span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>; <span class="comment">/* 去掉默认外边距 */</span></span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>; <span class="comment">/* 去掉默认内边距 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.item</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.item</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">object-fit</span>: cover; <span class="comment">/* 确保图片保持比例并覆盖整个容器 */</span></span><br><span class="line">  <span class="attribute">display</span>: block; <span class="comment">/* 去除图片底部的空白空间 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span><span class="selector-class">.gallery-page</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">overflow-x</span>: hidden; <span class="comment">/* 避免水平滚动 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="移动端背景图片样式改进"><a href="#移动端背景图片样式改进" class="headerlink" title="移动端背景图片样式改进"></a>移动端背景图片样式改进</h3><p>&emsp;&emsp;在手机端背景图片会只显示一部分，为了解决这个问题，在css中加入代码，使能容纳完整图片，虽然图片不会充满区域，但观感更好吧(额额，其实cover的话也还行吧)。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 调节背景图片 */</span></span><br><span class="line"><span class="selector-id">#web_bg</span> &#123;</span><br><span class="line">  <span class="attribute">background-size</span>: cover; <span class="comment">/* 确保背景图片覆盖整个容器 */</span></span><br><span class="line">  <span class="attribute">background-position</span>: center center; <span class="comment">/* 将背景图片居中显示 */</span></span><br><span class="line">  <span class="attribute">background-repeat</span>: no-repeat; <span class="comment">/* 防止背景图片重复 */</span></span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100vh</span>; <span class="comment">/* 将背景高度设置为视口高度 */</span></span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100vw</span>; <span class="comment">/* 将背景宽度设置为视口宽度 */</span></span><br><span class="line">  <span class="attribute">overflow</span>: hidden; <span class="comment">/* 确保背景图片不会超出边界 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 针对移动端调整 */</span></span><br><span class="line"><span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">768px</span>) &#123;</span><br><span class="line">  <span class="selector-id">#web_bg</span> &#123;</span><br><span class="line">      <span class="attribute">background-size</span>: contain; <span class="comment">/* 确保移动端背景图片按比例缩放 */</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="Aplayer播放器"><a href="#Aplayer播放器" class="headerlink" title="Aplayer播放器"></a>Aplayer播放器</h3><p>&emsp;&emsp;音乐播放器魔改参考链接：<a href="https://blog.anheyu.com/posts/c3d3.html#%E9%AD%94%E6%94%B9%E6%AD%A5%E9%AA%A4">魔改音乐播放器</a></p><h3 id="Aplayer播放器魔改-自改版本"><a href="#Aplayer播放器魔改-自改版本" class="headerlink" title="Aplayer播放器魔改(自改版本)"></a>Aplayer播放器魔改(自改版本)</h3><p>&emsp;&emsp;为了解决anzhiyu版本的bug，只能自己重写一个界面，不过更简单，但解决了bug。我的播放器用了官方的播放器样式。</p><ul><li><strong>主题配置文件引入js:</strong><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">bottom:</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src=&quot;https://cdn.jsdelivr.net/npm/meting@2/dist/Meting.min.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure></li><li><strong>配置music的md文件</strong><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 音乐馆</span><br><span class="line">date: 2021-04-24 21:41:30</span><br><span class="line"><span class="section"># type: music</span></span><br><span class="line">aplayer: true</span><br><span class="line">top<span class="emphasis">_img: false</span></span><br><span class="line"><span class="emphasis">comments: false</span></span><br><span class="line"><span class="emphasis">aside: false</span></span><br><span class="line"><span class="emphasis">---</span></span><br><span class="line"><span class="emphasis"><span class="language-xml"><span class="tag">&lt;<span class="name">body</span> <span class="attr">class</span>=<span class="string">&quot;music-page&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">&#123;% meting &quot;9224307215&quot; &quot;tencent&quot; &quot;playlist&quot; &quot;autoplay&quot; &quot;mutex:false&quot; &quot;listmaxheight:440px&quot; &quot;preload:none&quot; &quot;theme:#ad7a86&quot;%&#125;</span></span><br><span class="line"><span class="emphasis"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">    document.addEventListener(&quot;DOMContentLoaded&quot;, function() &#123;</span></span><br><span class="line"><span class="emphasis">        document.body.classList.add(&#x27;music-page&#x27;); // 将类名添加为 music-page</span></span><br><span class="line"><span class="emphasis">    &#125;);</span></span><br><span class="line"><span class="emphasis"><span class="language-xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis"> <span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">    // 获取 class 为 page 的第一个元素</span></span><br><span class="line"><span class="emphasis">    const pageElement = document.querySelector(&#x27;.page&#x27;);</span></span><br><span class="line"><span class="emphasis">    if (pageElement) &#123;</span></span><br><span class="line"><span class="emphasis">        // 查找其子元素中是否有 ID 为 page 的元素</span></span><br><span class="line"><span class="emphasis">        const childElement = pageElement.querySelector(&#x27;#page&#x27;);</span></span><br><span class="line"><span class="emphasis">        if (childElement) &#123;</span></span><br><span class="line"><span class="emphasis">                // 修改元素的 ID</span></span><br><span class="line"><span class="emphasis">            childElement.id = &#x27;music-page&#x27;;</span></span><br><span class="line"><span class="emphasis">        &#125;</span></span><br><span class="line"><span class="emphasis">    &#125;</span></span><br><span class="line"><span class="emphasis"><span class="language-xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">  document.addEventListener(&quot;DOMContentLoaded&quot;, function() &#123;</span></span><br><span class="line"><span class="emphasis">    // 获取需要调整的元素</span></span><br><span class="line"><span class="emphasis">    const contentInner = document.getElementById(&quot;content-inner&quot;);</span></span><br><span class="line"><span class="emphasis">    const musicPage = document.getElementById(&quot;music-page&quot;);</span></span><br><span class="line"><span class="emphasis">    const pageTitle = musicPage.querySelector(&quot;.page-title&quot;);</span></span><br><span class="line"><span class="emphasis">    if (pageTitle) &#123;</span></span><br><span class="line"><span class="emphasis">      // 在 content-inner 之后插入标题</span></span><br><span class="line"><span class="emphasis">      contentInner.insertAdjacentElement(&#x27;beforebegin&#x27;, pageTitle);</span></span><br><span class="line"><span class="emphasis">      pageTitle.style.textAlign = &#x27;center&#x27;;</span></span><br><span class="line"><span class="emphasis">      pageTitle.style.marginTop = &#x27;0px&#x27;; // 可以根据需要调整</span></span><br><span class="line"><span class="emphasis">        &#125;</span></span><br><span class="line"><span class="emphasis">    &#125;);</span></span><br><span class="line"><span class="emphasis"><span class="language-xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis"><span class="language-xml"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;universe&quot;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">defer</span> <span class="attr">src</span>=<span class="string">&quot;/js/universe.js&quot;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis"><span class="language-xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span></span><br></pre></td></tr></table></figure>先不管后面的脚本注入，主要是<code>&#123;% meting "9224307215" "tencent" "playlist" "autoplay" "mutex:false" "listmaxheight:440px" "preload:none" "theme:#ad7a86"%&#125;</code>这里使用<code>meting</code>引入播放器，<code>listmaxheight</code>是歌单列表长度，<code>theme</code>是歌曲封面背景色(不是歌单页面背景色)。</li><li><strong>配置music页面特征ID：</strong><br>首先为了和其他页面区分开来，给界面一个独立的<code>class</code>也就是<code>music-page</code>，通过脚本注入:<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;DOMContentLoaded&quot;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;music-page&#x27;</span>); <span class="comment">// 将类名添加为 music-page</span></span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>再给后面的<code>class:page</code>的<code>id:page</code>的子元素重命名为<code>id:music-page</code>：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> &lt;script&gt;</span><br><span class="line">    <span class="comment">// 获取 class 为 page 的第一个元素</span></span><br><span class="line">    <span class="keyword">const</span> pageElement = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.page&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (pageElement) &#123;</span><br><span class="line">        <span class="comment">// 查找其子元素中是否有 ID 为 page 的元素</span></span><br><span class="line">        <span class="keyword">const</span> childElement = pageElement.<span class="title function_">querySelector</span>(<span class="string">&#x27;#page&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (childElement) &#123;</span><br><span class="line">                <span class="comment">// 修改元素的 ID</span></span><br><span class="line">            childElement.<span class="property">id</span> = <span class="string">&#x27;music-page&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>这样能方便指定<code>id</code>调整css样式。</li><li><strong>调整css</strong><br>由于css代码比较多，所以直接新建一个<code>mymusic.css</code>，后续再在主题配置文件注入即可。配置内容为：<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*消除文本框，使用透明背景*/</span></span><br><span class="line"><span class="selector-class">.page</span> <span class="selector-id">#music-page</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: transparent <span class="meta">!important</span>; <span class="comment">/* 设置背景透明 */</span></span><br><span class="line">    <span class="attribute">border</span>: none <span class="meta">!important</span>;            <span class="comment">/* 去除边框 */</span></span><br><span class="line">    <span class="attribute">box-shadow</span>: none <span class="meta">!important</span>;       <span class="comment">/* 去除阴影 */</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-id">#article-container</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>) <span class="meta">!important</span>; <span class="comment">/* 透明背景 */</span></span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.1</span>) <span class="meta">!important</span>; <span class="comment">/* 可选：半透明边框 */</span></span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">80px</span>;   <span class="comment">/*调节整个歌单和顶部的距离*/</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*调节整个歌单的背景色，这里是淡灰色*/</span></span><br><span class="line">  <span class="selector-class">.aplayer</span> &#123;</span><br><span class="line">    <span class="comment">/* opacity: 0.6; */</span></span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">235</span>, <span class="number">224</span>, <span class="number">224</span>, <span class="number">0.395</span>) <span class="meta">!important</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/*固定整个页面，禁止垂直滚动，这里z-index设为auto，防止因为z-index设置不合适导致进度条和音量按钮bug*/</span></span><br><span class="line">  <span class="selector-id">#music-page</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: fixed;   <span class="comment">/* 使其固定在屏幕上 */</span></span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;            <span class="comment">/* 距离顶部 0 */</span></span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;           <span class="comment">/* 距离左侧 0 */</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100vw</span>;      <span class="comment">/* 占满视口的宽度 */</span></span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100vh</span>;     <span class="comment">/* 占满视口的高度 */</span></span><br><span class="line">    <span class="attribute">overflow</span>: hidden;  <span class="comment">/* 禁用内部滚动条 */</span></span><br><span class="line">    <span class="attribute">z-index</span>: auto;     <span class="comment">/* 确保在其他内容之上 */</span></span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ffffff</span>; <span class="comment">/* 可选：设置背景颜色 */</span></span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/* 隐藏整个页面的水平滚动条 */</span></span><br><span class="line">  <span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">overflow-x</span>: hidden;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/*自设music页面单独背景，指定为music-page里的web_bg*/</span></span><br><span class="line">  <span class="selector-class">.music-page</span> <span class="selector-id">#web_bg</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">https://cloudflare-imgbed-9os.pages.dev/file/1729677618289_8b35b49fcc4e3a1c37c128f8c1eff16b558fb1bb.jpg@1256w_708h_!web-article-pic.webp</span>) <span class="meta">!important</span>; </span><br><span class="line">    <span class="attribute">background-size</span>: cover <span class="meta">!important</span>; </span><br><span class="line">    <span class="attribute">background-position</span>: center center <span class="meta">!important</span>; </span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat <span class="meta">!important</span>; </span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/*调整歌曲列表，每行的高度和字体大小，行变宽字体变大*/</span></span><br><span class="line">  <span class="selector-class">.aplayer</span> <span class="selector-class">.aplayer-list</span> <span class="selector-tag">ol</span> <span class="selector-tag">li</span>&#123;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">45px</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">15px</span> <span class="meta">!important</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="selector-class">.aplayer</span><span class="selector-class">.aplayer-withlrc</span> <span class="selector-class">.aplayer-info</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">7px</span> <span class="number">0</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">0px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="selector-class">.page</span> <span class="selector-id">#music-page</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: -<span class="number">10px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/*加粗歌曲标题作者歌词的文字*/</span></span><br><span class="line">  <span class="selector-class">.aplayer</span> <span class="selector-class">.aplayer-info</span> <span class="selector-class">.aplayer-music</span> <span class="selector-class">.aplayer-title</span>,</span><br><span class="line">  <span class="selector-class">.aplayer</span> <span class="selector-class">.aplayer-info</span> <span class="selector-class">.aplayer-music</span> <span class="selector-class">.aplayer-author</span>,</span><br><span class="line">  <span class="selector-class">.aplayer</span> <span class="selector-class">.aplayer-lrc</span> <span class="selector-tag">p</span><span class="selector-class">.aplayer-lrc-current</span> &#123;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold <span class="meta">!important</span>; <span class="comment">/* 加粗文字 */</span></span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#333</span> <span class="meta">!important</span>; </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/*加粗歌曲列表的标题作者索引的文字*/</span></span><br><span class="line">  <span class="selector-class">.aplayer</span> <span class="selector-class">.aplayer-list</span> <span class="selector-tag">ol</span> <span class="selector-tag">li</span> <span class="selector-class">.aplayer-list-title</span>,</span><br><span class="line">  <span class="selector-class">.aplayer</span> <span class="selector-class">.aplayer-list</span> <span class="selector-tag">ol</span> <span class="selector-tag">li</span> <span class="selector-class">.aplayer-list-author</span> &#123;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold <span class="meta">!important</span>; <span class="comment">/* 加粗文字 */</span></span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#333</span> <span class="meta">!important</span>; </span><br><span class="line">  &#125; </span><br><span class="line">  <span class="selector-class">.aplayer</span> <span class="selector-class">.aplayer-list</span> <span class="selector-tag">ol</span> <span class="selector-tag">li</span> <span class="selector-class">.aplayer-list-index</span> &#123;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold <span class="meta">!important</span>; <span class="comment">/* 加粗索引 */</span></span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#333</span> <span class="meta">!important</span>; </span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/*加深显示播放时间颜色*/</span></span><br><span class="line">  <span class="selector-class">.aplayer</span> <span class="selector-class">.aplayer-info</span> <span class="selector-class">.aplayer-controller</span> <span class="selector-class">.aplayer-time</span> <span class="selector-class">.aplayer-time-inner</span>&#123;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold <span class="meta">!important</span>; </span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#333</span> <span class="meta">!important</span>; </span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/*加深显示图标颜色*/</span></span><br><span class="line">  <span class="selector-class">.aplayer</span> <span class="selector-class">.aplayer-info</span> <span class="selector-class">.aplayer-controller</span> <span class="selector-class">.aplayer-time</span> <span class="selector-class">.aplayer-icon</span> <span class="selector-tag">svg</span>&#123;</span><br><span class="line">    <span class="attribute">filter</span>: <span class="built_in">brightness</span>(<span class="number">0.2</span>) <span class="meta">!important</span>; <span class="comment">/*降低填充亮度*/</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.aplayer</span> <span class="selector-class">.aplayer-info</span> <span class="selector-class">.aplayer-controller</span> <span class="selector-class">.aplayer-time</span> <span class="selector-class">.aplayer-icon</span> <span class="selector-tag">svg</span> <span class="selector-tag">path</span>&#123;</span><br><span class="line">    <span class="attribute">stroke</span>: <span class="number">#333</span> <span class="meta">!important</span>;  <span class="comment">/*加深轮廓线条颜色*/</span></span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/*调整歌单列表，每一行的上下边框颜色使其变浅*/</span></span><br><span class="line">  <span class="selector-id">#article-container</span> <span class="selector-class">.aplayer</span> <span class="selector-tag">ol</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">rgba</span>(<span class="number">232</span>, <span class="number">208</span>, <span class="number">208</span>, <span class="number">0.5</span>) <span class="meta">!important</span>; <span class="comment">/* 使用RGBA来设置边框颜色，使其变浅 */</span></span><br><span class="line">    <span class="comment">/* 你可以根据需要调整边框宽度和样式 */</span></span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/*调整歌单最左侧指示条的颜色*/</span></span><br><span class="line">  <span class="selector-class">.aplayer</span> <span class="selector-class">.aplayer-list</span> <span class="selector-tag">ol</span> <span class="selector-tag">li</span><span class="selector-class">.aplayer-list-light</span> <span class="selector-class">.aplayer-list-cur</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#0a1de9</span> <span class="meta">!important</span>; <span class="comment">/* 设置新的背景颜色 */</span></span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">   <span class="comment">/*调整歌单列表当前播放曲目的背景高亮颜色*/</span></span><br><span class="line">  <span class="selector-class">.aplayer</span> <span class="selector-class">.aplayer-list</span> <span class="selector-tag">ol</span> <span class="selector-tag">li</span><span class="selector-class">.aplayer-list-light</span>  &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f2f5ea</span> <span class="meta">!important</span>; </span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/*隐藏版权说明*/</span></span><br><span class="line">  <span class="selector-id">#footer-wrap</span> <span class="selector-class">.copyright</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: none <span class="meta">!important</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/*隐藏模型*/</span></span><br><span class="line">  <span class="selector-class">.music-page</span> <span class="selector-id">#live2d-widget</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none <span class="meta">!important</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/* 适用于移动端的媒体查询 */</span></span><br><span class="line">  <span class="keyword">@media</span> (<span class="attribute">max-width</span>: <span class="number">768px</span>) &#123;</span><br><span class="line">    <span class="comment">/* 适配 #music-page */</span></span><br><span class="line">    <span class="selector-id">#music-page</span> &#123;</span><br><span class="line">      <span class="attribute">position</span>: fixed;</span><br><span class="line">      <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">      <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">100vw</span>;      <span class="comment">/* 占满视口宽度 */</span></span><br><span class="line">      <span class="attribute">height</span>: <span class="number">100vh</span>;     <span class="comment">/* 占满视口高度 */</span></span><br><span class="line">      <span class="attribute">overflow-y</span>: auto;  <span class="comment">/* 启用垂直滚动 */</span></span><br><span class="line">      <span class="attribute">background-color</span>: <span class="number">#ffffff</span>; <span class="comment">/* 可选：背景颜色 */</span></span><br><span class="line">      <span class="attribute">padding</span>: <span class="number">10px</span>;     <span class="comment">/* 为移动端增加内边距 */</span></span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">/* 适配标题，直接隐藏 */</span></span><br><span class="line">    <span class="selector-class">.music-page</span> <span class="selector-tag">h1</span> &#123;</span><br><span class="line">      <span class="attribute">display</span>: none <span class="meta">!important</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">/* 适配 #article-container */</span></span><br><span class="line">    <span class="selector-id">#article-container</span> &#123;</span><br><span class="line">      <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>) <span class="meta">!important</span>;</span><br><span class="line">      <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.1</span>) <span class="meta">!important</span>;</span><br><span class="line">      <span class="attribute">margin-top</span>: <span class="number">60px</span>;</span><br><span class="line">      <span class="attribute">padding</span>: <span class="number">10px</span>;         <span class="comment">/* 增加内边距，使内容更贴合移动端 */</span></span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">/* 适配 APlayer 音乐播放器 */</span></span><br><span class="line">    <span class="selector-class">.aplayer</span> &#123;</span><br><span class="line">      <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">235</span>, <span class="number">224</span>, <span class="number">224</span>, <span class="number">0.5</span>) <span class="meta">!important</span>; <span class="comment">/* 半透明背景 */</span></span><br><span class="line">      <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">/* 调整播放列表的字体和间距 */</span></span><br><span class="line">    <span class="selector-class">.aplayer</span> <span class="selector-class">.aplayer-list</span> <span class="selector-tag">ol</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">      <span class="attribute">line-height</span>: <span class="number">40px</span> <span class="meta">!important</span>;  <span class="comment">/* 调整行高 */</span></span><br><span class="line">      <span class="attribute">font-size</span>: <span class="number">14px</span> <span class="meta">!important</span>;     <span class="comment">/* 调整字体大小 */</span></span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">/* 调整歌词部分 */</span></span><br><span class="line">    <span class="selector-class">.aplayer</span> <span class="selector-class">.aplayer-info</span> <span class="selector-class">.aplayer-music</span> <span class="selector-class">.aplayer-title</span>,</span><br><span class="line">    <span class="selector-class">.aplayer</span> <span class="selector-class">.aplayer-info</span> <span class="selector-class">.aplayer-music</span> <span class="selector-class">.aplayer-author</span>,</span><br><span class="line">    <span class="selector-class">.aplayer</span> <span class="selector-class">.aplayer-lrc</span> <span class="selector-tag">p</span><span class="selector-class">.aplayer-lrc-current</span> &#123;</span><br><span class="line">      <span class="attribute">font-size</span>: <span class="number">14px</span> <span class="meta">!important</span>;    <span class="comment">/* 调整歌词字体大小 */</span></span><br><span class="line">      <span class="attribute">color</span>: <span class="number">#333</span> <span class="meta">!important</span>;        <span class="comment">/* 设置字体颜色 */</span></span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">/* 调整播放时间的显示，更易读 */</span></span><br><span class="line">    <span class="selector-class">.aplayer</span> <span class="selector-class">.aplayer-info</span> <span class="selector-class">.aplayer-controller</span> <span class="selector-class">.aplayer-time</span> <span class="selector-class">.aplayer-time-inner</span> &#123;</span><br><span class="line">      <span class="attribute">font-weight</span>: bold <span class="meta">!important</span>; </span><br><span class="line">      <span class="attribute">color</span>: <span class="number">#333</span> <span class="meta">!important</span>; </span><br><span class="line">      <span class="attribute">font-size</span>: <span class="number">14px</span> <span class="meta">!important</span>;  <span class="comment">/* 调整字体大小，适合移动设备 */</span></span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">/* 针对移动端：调节图标填充亮度 */</span></span><br><span class="line">    <span class="selector-class">.aplayer</span> <span class="selector-class">.aplayer-info</span> <span class="selector-class">.aplayer-controller</span> <span class="selector-class">.aplayer-time</span> <span class="selector-class">.aplayer-icon</span> <span class="selector-tag">svg</span> &#123;</span><br><span class="line">      <span class="attribute">filter</span>: <span class="built_in">brightness</span>(<span class="number">0.3</span>) <span class="meta">!important</span>; <span class="comment">/* 略微减小亮度调节 */</span></span><br><span class="line">      <span class="attribute">width</span>: <span class="number">18px</span> <span class="meta">!important</span>;  <span class="comment">/* 调整图标大小，适合移动端 */</span></span><br><span class="line">      <span class="attribute">height</span>: <span class="number">18px</span> <span class="meta">!important</span>; <span class="comment">/* 确保图标在移动端的可点击性 */</span></span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="comment">/* 针对移动端：加深图标线条颜色 */</span></span><br><span class="line">      <span class="selector-class">.aplayer</span> <span class="selector-class">.aplayer-info</span> <span class="selector-class">.aplayer-controller</span> <span class="selector-class">.aplayer-time</span> <span class="selector-class">.aplayer-icon</span> <span class="selector-tag">svg</span> <span class="selector-tag">path</span> &#123;</span><br><span class="line">        <span class="attribute">stroke</span>: <span class="number">#333</span> <span class="meta">!important</span>;</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">/* 播放器控制按钮适配 */</span></span><br><span class="line">    <span class="selector-class">.aplayer</span> <span class="selector-class">.aplayer-info</span> &#123;</span><br><span class="line">      <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">10px</span> <span class="meta">!important</span>;     <span class="comment">/* 调整内边距 */</span></span><br><span class="line">      <span class="attribute">margin-top</span>: <span class="number">0px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">/* 播放列表项目的边框 */</span></span><br><span class="line">    <span class="selector-id">#article-container</span> <span class="selector-class">.aplayer</span> <span class="selector-tag">ol</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">      <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">rgba</span>(<span class="number">232</span>, <span class="number">208</span>, <span class="number">208</span>, <span class="number">0.5</span>) <span class="meta">!important</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">/* 设置播放列表项目的背景颜色 */</span></span><br><span class="line">    <span class="selector-class">.aplayer</span> <span class="selector-class">.aplayer-list</span> <span class="selector-tag">ol</span> <span class="selector-tag">li</span><span class="selector-class">.aplayer-list-light</span> &#123;</span><br><span class="line">      <span class="attribute">background-color</span>: <span class="number">#f2f5ea</span> <span class="meta">!important</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">/* 隐藏版权信息 */</span></span><br><span class="line">    <span class="selector-id">#footer-wrap</span> <span class="selector-class">.copyright</span> &#123;</span><br><span class="line">      <span class="attribute">display</span>: none <span class="meta">!important</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">/* 设置控制栏和播放列表之间的空隙 */</span></span><br><span class="line">    <span class="selector-class">.aplayer</span> <span class="selector-class">.aplayer-info</span> &#123;</span><br><span class="line">      <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>对于音乐界面标题的处理，直接在md文件注入js，动态调整其位置，使其上升到<code>content-inner</code>级，居中加粗显示:<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;DOMContentLoaded&quot;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 获取需要调整的元素</span></span><br><span class="line">    <span class="keyword">const</span> contentInner = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;content-inner&quot;</span>);</span><br><span class="line">    <span class="keyword">const</span> musicPage = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;music-page&quot;</span>);</span><br><span class="line">    <span class="keyword">const</span> pageTitle = musicPage.<span class="title function_">querySelector</span>(<span class="string">&quot;.page-title&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (pageTitle) &#123;</span><br><span class="line">      <span class="comment">// 在 content-inner 之后插入标题</span></span><br><span class="line">      contentInner.<span class="title function_">insertAdjacentElement</span>(<span class="string">&#x27;beforebegin&#x27;</span>, pageTitle);</span><br><span class="line">      pageTitle.<span class="property">style</span>.<span class="property">textAlign</span> = <span class="string">&#x27;center&#x27;</span>;</span><br><span class="line">      pageTitle.<span class="property">style</span>.<span class="property">marginTop</span> = <span class="string">&#x27;0px&#x27;</span>; <span class="comment">// 可以根据需要调整</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>通过以上，PC端和移动端的音乐界面都能正常显示，没有bug啦!你的名字夜晚飞星的蓝黑天空加上几乎透明浅灰的歌单列表，还是挺适配的。至此，自改的Aplayer播放器还算可以。</li></ul><h3 id="其它碎碎念-10-25"><a href="#其它碎碎念-10-25" class="headerlink" title="其它碎碎念(10.25)"></a>其它碎碎念(10.25)</h3><h4 id="随机磁贴封面的bug"><a href="#随机磁贴封面的bug" class="headerlink" title="随机磁贴封面的bug"></a>随机磁贴封面的bug</h4><p>&emsp;&emsp;昨天还是会出现偶尔磁贴封面图片为null的情况，明明图片链接都有效，明明使用了<code>IntersectionObserver</code>懒加载，而且再次刷新页面大概率就又正常了，今天重新改下代码，<del>加入了获取随机图片时如果获取为null再次获取的代码，看起来稳定了很多，刷了n遍界面都没问题，但不知道还会不会出现，看后续表现吧，贴上改后代码:</del> <span class='p red'>10.25 16:34:</span>呜呜，好像彻底解决了啊，原来是<code>addEventListener(&#39;DOMContentLoaded&#39;,);</code>的问题啊，改用 <code>window.onload</code> 而不是 <code>DOMContentLoaded</code>，能确保所有资源和元素都已加载。贴上再次改进后的完整代码：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>; </span><br><span class="line"><span class="comment">// 在所有资源加载完成后执行脚本</span></span><br><span class="line"><span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 定义主题图片对象</span></span><br><span class="line">    <span class="keyword">const</span> themes = &#123;</span><br><span class="line">        <span class="attr">kon</span>: [</span><br><span class="line">            <span class="string">&quot;https://cloudflare-imgbed-9os.pages.dev/file/1729306198549_kon_5.webp&quot;</span>,</span><br><span class="line">            <span class="string">&quot;https://cloudflare-imgbed-9os.pages.dev/file/1729306191301_kon_7.webp&quot;</span>,</span><br><span class="line">            <span class="string">&quot;https://cloudflare-imgbed-9os.pages.dev/file/1729306191486_kon_6.webp&quot;</span>,</span><br><span class="line">            <span class="string">&quot;https://cloudflare-imgbed-9os.pages.dev/file/1729428993734_kon_18.webp&quot;</span>, </span><br><span class="line">            <span class="string">&quot;https://cloudflare-imgbed-9os.pages.dev/file/1729428993850_kon_19.webp&quot;</span>, </span><br><span class="line">            <span class="string">&quot;https://cloudflare-imgbed-9os.pages.dev/file/1729428996317_kon_20.webp&quot;</span>, </span><br><span class="line">            <span class="string">&quot;https://cloudflare-imgbed-9os.pages.dev/file/1729429001817_kon_21.webp&quot;</span>, </span><br><span class="line">            <span class="string">&quot;https://cloudflare-imgbed-9os.pages.dev/file/1729429002735_kon_22.webp&quot;</span>, </span><br><span class="line">            <span class="string">&quot;https://cloudflare-imgbed-9os.pages.dev/file/1729429000558_kon_23.webp&quot;</span>, </span><br><span class="line">            <span class="string">&quot;https://cloudflare-imgbed-9os.pages.dev/file/1729429003335_kon_24.webp&quot;</span>, </span><br><span class="line">            <span class="string">&quot;https://cloudflare-imgbed-9os.pages.dev/file/1729429007799_kon_25.webp&quot;</span>, </span><br><span class="line">            <span class="string">&quot;https://cloudflare-imgbed-9os.pages.dev/file/1729428998336_kon_26.webp&quot;</span>, </span><br><span class="line">            <span class="string">&quot;https://cloudflare-imgbed-9os.pages.dev/file/1729429009566_kon_27.webp&quot;</span>, </span><br><span class="line">            <span class="string">&quot;https://cloudflare-imgbed-9os.pages.dev/file/1729429003993_kon_28.webp&quot;</span>, </span><br><span class="line">            <span class="string">&quot;https://cloudflare-imgbed-9os.pages.dev/file/1729429003878_kon_29.webp&quot;</span>, </span><br><span class="line">            <span class="string">&quot;https://cloudflare-imgbed-9os.pages.dev/file/1729429010529_kon_30.webp&quot;</span>, </span><br><span class="line">            <span class="string">&quot;https://cloudflare-imgbed-9os.pages.dev/file/1729429007853_kon_31.webp&quot;</span>, </span><br><span class="line">            <span class="string">&quot;https://cloudflare-imgbed-9os.pages.dev/file/1729429008008_kon_32.webp&quot;</span>, </span><br><span class="line">            <span class="string">&quot;https://cloudflare-imgbed-9os.pages.dev/file/1729429010316_kon_33.webp&quot;</span>, </span><br><span class="line">            <span class="string">&quot;https://cloudflare-imgbed-9os.pages.dev/file/1729429013647_kon_15.webp&quot;</span>, </span><br><span class="line">            <span class="string">&quot;https://cloudflare-imgbed-9os.pages.dev/file/1729429006011_kon_16.webp&quot;</span>, </span><br><span class="line">            <span class="string">&quot;https://cloudflare-imgbed-9os.pages.dev/file/1729429018278_kon_17.webp&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">sp</span>: [</span><br><span class="line">            <span class="string">&quot;https://cloudflare-imgbed-9os.pages.dev/file/1729306222386_summer pockets_1.webp&quot;</span>,</span><br><span class="line">            <span class="string">&quot;https://cloudflare-imgbed-9os.pages.dev/file/1729306218357_summer pockets_12.webp&quot;</span>,</span><br><span class="line">            <span class="string">&quot;https://cloudflare-imgbed-9os.pages.dev/file/1729306217685_summer pockets_3.webp&quot;</span></span><br><span class="line">        ]</span><br><span class="line">        <span class="comment">// 可以在此添加更多主题</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取随机图片的函数</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">getRandomCoverImage</span>(<span class="params">theme</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> themeImages = themes[theme];</span><br><span class="line">        <span class="keyword">if</span> (themeImages &amp;&amp; themeImages.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">let</span> coverImage = <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">let</span> attempt = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">const</span> maxAttempts = <span class="number">10</span>; <span class="comment">// 最大尝试次数</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (!coverImage &amp;&amp; attempt &lt; maxAttempts) &#123;</span><br><span class="line">                <span class="keyword">const</span> randomIndex = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * themeImages.<span class="property">length</span>);</span><br><span class="line">                coverImage = themeImages[randomIndex];</span><br><span class="line">                attempt++;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (!coverImage) &#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">&quot;获取图片失败，重新尝试...&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 如果仍然没有有效图片，返回一个默认图片</span></span><br><span class="line">            <span class="keyword">return</span> coverImage || <span class="string">&quot;https://cloudflare-imgbed-9os.pages.dev/file/1729429018278_kon_17.webp&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">&quot;Theme not defined or no images available.&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;https://cloudflare-imgbed-9os.pages.dev/file/1729429018278_kon_17.webp&quot;</span>; <span class="comment">// 默认图片链接</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取当天的主题</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">getDailyTheme</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> today = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">        <span class="keyword">const</span> dayOfYear = <span class="title class_">Math</span>.<span class="title function_">floor</span>((today - <span class="keyword">new</span> <span class="title class_">Date</span>(today.<span class="title function_">getFullYear</span>(), <span class="number">0</span>, <span class="number">0</span>)) / <span class="number">86400000</span>);</span><br><span class="line">        <span class="keyword">const</span> themeNames = <span class="title class_">Object</span>.<span class="title function_">keys</span>(themes);</span><br><span class="line">        <span class="keyword">const</span> themeIndex = dayOfYear % themeNames.<span class="property">length</span>;</span><br><span class="line">        <span class="keyword">return</span> themeNames[themeIndex];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">updateCategoryBarCover</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> theme = <span class="variable language_">window</span>.<span class="property">selectedTheme</span> === <span class="string">&#x27;&#x27;</span> ? <span class="title function_">getDailyTheme</span>() : <span class="variable language_">window</span>.<span class="property">selectedTheme</span>;</span><br><span class="line">        <span class="keyword">const</span> categoryItems = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;.categoryBar-list-item&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!categoryItems || categoryItems.<span class="property">length</span> === <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">&quot;未找到任何分类项元素，确保页面结构正确。&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;当前磁贴主题:&quot;</span>, theme);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;选中的分类项数量:&quot;</span>, categoryItems.<span class="property">length</span>);</span><br><span class="line">    </span><br><span class="line">        <span class="comment">// 使用 IntersectionObserver 进行懒加载</span></span><br><span class="line">        <span class="keyword">const</span> observer = <span class="keyword">new</span> <span class="title class_">IntersectionObserver</span>(<span class="function">(<span class="params">entries</span>) =&gt;</span> &#123;</span><br><span class="line">            entries.<span class="title function_">forEach</span>(<span class="function"><span class="params">entry</span> =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (entry.<span class="property">isIntersecting</span>) &#123;</span><br><span class="line">                    <span class="keyword">const</span> item = entry.<span class="property">target</span>;</span><br><span class="line">                    <span class="keyword">const</span> coverImage = <span class="title function_">getRandomCoverImage</span>(theme).<span class="title function_">replace</span>(<span class="regexp">/ /g</span>, <span class="string">&quot;%20&quot;</span>);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (coverImage) &#123;</span><br><span class="line">                        item.<span class="property">style</span>.<span class="property">backgroundImage</span> = <span class="string">`url(<span class="subst">$&#123;coverImage&#125;</span>)`</span>;</span><br><span class="line">                        item.<span class="property">style</span>.<span class="property">backgroundSize</span> = <span class="string">&quot;cover&quot;</span>;</span><br><span class="line">                        item.<span class="property">style</span>.<span class="property">backgroundRepeat</span> = <span class="string">&quot;no-repeat&quot;</span>;</span><br><span class="line">                        item.<span class="property">style</span>.<span class="property">backgroundPosition</span> = <span class="string">&quot;center center&quot;</span>;</span><br><span class="line">                        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;已设置封面图片:&quot;</span>, coverImage);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;未能获取有效的封面图片&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// 停止观察已加载的元素</span></span><br><span class="line">                    observer.<span class="title function_">unobserve</span>(item);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">    </span><br><span class="line">        categoryItems.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">            observer.<span class="title function_">observe</span>(item);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 执行更新操作</span></span><br><span class="line">    <span class="title function_">updateCategoryBarCover</span>();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><h4 id="阅读进度按钮问题"><a href="#阅读进度按钮问题" class="headerlink" title="阅读进度按钮问题"></a>阅读进度按钮问题</h4><p><a href="https://www.fomal.cc/posts/2d7ac914.html">参考链接</a>，但实际使用有bug，目前涉及的需要修改的文件的代码都已更新，解决了bug。</p><h4 id="夜间模式切换"><a href="#夜间模式切换" class="headerlink" title="夜间模式切换"></a>夜间模式切换</h4><p><a href="https://www.fomal.cc/posts/d739261b.html">参考链接</a>。先按<code>1.0</code>操作再到<code>2.0</code>替换部分<code>1.0</code>内容才能实现。</p><h4 id="gulp全局资源压缩"><a href="#gulp全局资源压缩" class="headerlink" title="gulp全局资源压缩"></a>gulp全局资源压缩</h4><p><a href="https://akilar.top/posts/49b73b87/">参考链接</a>。但注意，要生成<code>\public</code>文件夹，需要使用<code>hexo generate</code>命令，而不能使用<code>hexo g</code>，真是离谱啊。</p><h4 id="源码连接仓库"><a href="#源码连接仓库" class="headerlink" title="源码连接仓库"></a>源码连接仓库</h4><ul><li><strong>创建存放源码的私有仓库</strong><br>创建仓库存放源码，设为私密。创建完成后，需要把博客的源码<code>push</code>到这里。首先获取远程仓库地址，此处虽然SSH和HTTPS均可。SSH在绑定过<code>ssh key</code>的设备上无需再输入密码，HTTPS则需要输入密码。</li><li><strong>在[Blogroot]路径下<code>右键-&gt;Git Bash Here</code></strong>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init <span class="comment"># 初始化git</span></span><br></pre></td></tr></table></figure>  这一步会在你的博客目录下新建一个<code>.git</code>文件夹。因为是隐藏文件夹，所以需要你先确保当前目录下隐藏文件夹可见才能看到它。</li><li><strong>添加屏蔽项</strong><br>在远端提交前，我们需要先调整一下屏蔽项，能够使用指令进行安装的内容不包括在需要提交的源码内，这样可以显著减少需要提交的文件量和加快提交速度。打开[Blogroot]/.gitignore（也是隐藏文件）,输入以下内容：  <figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.log</span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br><span class="line">.deploy_git*/</span><br><span class="line">.idea</span><br><span class="line">themes/butterfly/.git</span><br></pre></td></tr></table></figure>  如果不是<code>butterfly</code>主题，记得替换最后一行内容为你自己当前使用的主题。</li><li><strong>第一次push到远程仓库</strong><br><code>右键-&gt;Git Bash Here</code>:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add . <span class="comment"># 添加文件到本地仓库</span></span><br><span class="line">git commit -m <span class="string">&quot;自定义内容即可&quot;</span> <span class="comment"># 添加文件描述信息</span></span><br><span class="line">git remote add origin git@github.com:username/YourRepositoryName.git <span class="comment">#链接远程仓库地址，创建主分支</span></span><br></pre></td></tr></table></figure></li><li>偶尔会遇到一些与远端内容不一致的问题，一般是因为在创建远程仓库时点选了生成<code>README.md</code>或者<code>license</code>的选项，输入指令：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 要是提示origin已经存在，那么执行</span></span><br><span class="line">git remote <span class="built_in">rm</span> origin</span><br><span class="line"><span class="comment"># 然后再重新尝试</span></span><br><span class="line">git remote add origin git@github.com:username/YourRepositoryName.git</span><br><span class="line"></span><br><span class="line">git pull origin YourBranchName <span class="comment"># 把远程仓库的新增的内容覆盖到本地仓库</span></span><br><span class="line"></span><br><span class="line">git push -u origin YourBranchName -f</span><br><span class="line"><span class="comment"># 把本地仓库的文件推送到远程仓库的主分支，</span></span><br><span class="line"><span class="comment">#YourBranchName记得替换成分支名，一般是master。</span></span><br><span class="line"><span class="comment">#2020年10月后github新建仓库默认分支改为main</span></span><br><span class="line"><span class="comment"># -f 是强制提交，主要是因为前后版本不一致造成的。</span></span><br><span class="line"><span class="comment"># 然后执行以下指令生成网站并部署到 GitHub 上。</span></span><br><span class="line"><span class="comment">#(Hexo部署网站是根据_config.yml内的配置，所以不受影响)</span></span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure></li><li><strong>后续更新仓库</strong><br>只需要在本地bash执行git三连即可推送代码改动到仓库，若添加了自动部署，则可自动在推送的同时更新网站。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;...&quot;</span></span><br><span class="line">git push</span><br><span class="line"><span class="comment"># 将改动推送到 GitHub</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="小知识"><a href="#小知识" class="headerlink" title="小知识"></a>小知识</h4><ul><li><code>\public</code>文件夹是网站展示的内容的文件夹，<code>\source</code>则是存放数据的文件夹，包括发布的文章，页面的md文件等等。而配置网站主题样式之类的一般在<code>\theme\butterfly</code>里面操作，可以添加<code>js、css、img</code>以及其他比如<code>pug</code>等文件吧。</li><li>要改变页面的样式，若需要脚本注入，可在md文件里用<code>script</code>标签进行动态修改，其他简单的不需要用到函数什么的只需要修改样式，可以<code>F12</code>查找要修改的网页元素，然后使用css进行修改，一般可以用一个通用的<code>custom.css</code>在主题配置文件注入即可。</li><li><code>\theme\butterfly\script</code>里的js文件是后端文件，是静态的，需要重启项目才能执行，刷新网页并不会执行，不需要注入，会直接调用，也能直接读取配置文件的参数；<code>\theme\butterfly\source\js</code>里的js文件是前端文件，是动态的，会随着网页刷新再次执行，需要在主题配置文件<em>inject</em>，要获取到配置文件的参数，可以在<code>\theme\butterfly\script</code>创建后端文件，通过<code>window.参数</code>传递配置文件的参数，前端文件再通过<code>window.参数</code>获取到参数。可以利用这一点读取参数进行一些动态刷新操作。</li><li>一般本地资源的调用路径都是以<code>\theme\butterfly\source</code>为根路径吧，比如注入js时路径用<code>\js\xxx.js</code>即可，引用图片时用<code>\img\xxx.jpg</code>即可。</li><li>网页元素，在css中，一般是<code>.class</code>,<code>#id</code>的方式。要想直接改变目标元素的样式，可以<code>F12</code>检查，找到对应元素所在位置，一般双击它在下面栏的样式表会有它和其他元素的依赖关系，直接复制在css中使用即可。如图：<br><p align="center"><img src="/img/style.jpg" alt="示例图片" style="zoom:50%;" /></p><div class="note info modern"><p>注意：这里使用html语法设置图片时，用的本地图片的话，本地图片需要存到themes/butterfly/source/img里，但是src路径引用的路径需要为/img/xxx.jpg </p></div></li><li>为了防止在PC端顶部菜单栏有时会收起而不是展开状态，在主题配置文件使用了脚本注入，保证在PC端保持展开状态。<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">bottom:</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">&lt;script&gt;</span></span><br><span class="line">    <span class="string">document.addEventListener(&quot;DOMContentLoaded&quot;,</span> <span class="string">function()</span> &#123;</span><br><span class="line">        <span class="string">var</span> <span class="string">nav</span> <span class="string">=</span> <span class="string">document.getElementById(&quot;nav&quot;);</span></span><br><span class="line">        <span class="string">if</span> <span class="string">(window.innerWidth</span> <span class="string">&gt;=</span> <span class="number">768</span><span class="string">)</span> &#123;</span><br><span class="line">        <span class="string">nav.classList.remove(&quot;hide-menu&quot;);</span></span><br><span class="line">        <span class="string">nav.classList.add(&quot;show&quot;);</span></span><br><span class="line">        <span class="string">console.log(&quot;nav</span> <span class="string">show</span> <span class="string">on</span> <span class="string">PC&quot;);</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="string">);</span></span><br><span class="line">   <span class="string">&lt;/script&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="完善音乐界面-11-16"><a href="#完善音乐界面-11-16" class="headerlink" title="完善音乐界面(11.16)"></a>完善音乐界面(11.16)</h2><p>&emsp;&emsp;在音乐界面增加卡片，用于选择对应主题的歌单。具体实现为：</p><ul><li><p>修改<code>music</code>文件夹里的<code>index.md</code>文件内容，使用外挂标签设置链接卡片，修改后的文件内容为：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 音乐馆</span><br><span class="line"><span class="section"># type: music</span></span><br><span class="line">aplayer: true</span><br><span class="line">top<span class="emphasis">_img: false</span></span><br><span class="line"><span class="emphasis">comments: false</span></span><br><span class="line"><span class="emphasis">aside: false</span></span><br><span class="line"><span class="emphasis">---</span></span><br><span class="line"><span class="emphasis"><span class="language-xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">&#123;% sitegroup %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% site KON, url=/music/kon, screenshot=https://cloudflare-imgbed-9os.pages.dev/file/1729429000558_</span>kon<span class="emphasis">_23.webp, description=轻音永不毕业! %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% site Summer Pockets, url=/music/sp, screenshot=https://cloudflare-imgbed-9os.pages.dev/file/1729919005838_</span>summer pockets<span class="emphasis">_3.webp, description=唯有那份眩目，未曾忘记... %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% site Eva, url=/music/eva, screenshot=https://cloudflare-imgbed-9os.pages.dev/file/1729915127264_</span>EVA<span class="emphasis">_5.webp, description=梦是现实的延续，现实是梦的终结。 %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% site Ghibli, url=/music/ghibli, screenshot=https://cloudflare-imgbed-9os.pages.dev/file/1730449515623_</span>ghibli<span class="emphasis">_22.webp, description=只要有想见的人，自己就不再是孤单一人。 %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% site love, url=/music/love, screenshot=https://cloudflare-imgbed-9os.pages.dev/file/1729765205778_</span>1729764735768.webp, description=心灵补给站。 %&#125;</span><br><span class="line">&#123;% endsitegroup %&#125;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="code">    document.addEventListener(&quot;DOMContentLoaded&quot;, function() &#123;</span></span><br><span class="line"><span class="code">        document.body.classList.add(&#x27;musiccard-page&#x27;); </span></span><br><span class="line"><span class="code">    &#125;);</span></span><br><span class="line"><span class="code">&lt;/script&gt;</span></span><br><span class="line"><span class="code">&lt;/body&gt;</span></span><br></pre></td></tr></table></figure><p>其中，为该页面设置了class为”musiccard-page”，用于调整该页面的css样式。</p></li><li><p>设置该页面的css样式如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.site-card</span> <span class="selector-class">.img</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span> <span class="meta">!important</span>; <span class="comment">/* 设置高度 */</span></span><br><span class="line">  <span class="attribute">overflow</span>: hidden <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.site-card</span> <span class="selector-class">.img</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">object-fit</span>: cover <span class="meta">!important</span>; <span class="comment">/* 图片适应容器 */</span></span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.info</span> <span class="selector-class">.title</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1.2rem</span> <span class="meta">!important</span>; <span class="comment">/* 设置标题字体大小 */</span></span><br><span class="line">  <span class="attribute">font-weight</span>: bold <span class="meta">!important</span>; <span class="comment">/* 加粗标题字体 */</span></span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">18</span>, <span class="number">188</span>, <span class="number">240</span>) <span class="meta">!important</span>; <span class="comment">/* 使标题字体颜色更加醒目，采用鲜艳颜色 */</span></span><br><span class="line">  <span class="attribute">text-shadow</span>: <span class="number">2px</span> <span class="number">2px</span> <span class="number">4px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.5</span>) <span class="meta">!important</span>; <span class="comment">/* 为标题添加阴影效果，增强对比 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.info</span> <span class="selector-class">.desc</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1.2rem</span> <span class="meta">!important</span>; <span class="comment">/* 设置描述字体大小 */</span></span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">500</span> <span class="meta">!important</span>; <span class="comment">/* 为描述设置较轻的粗细 */</span></span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span> <span class="meta">!important</span>; <span class="comment">/* 白色字体 */</span></span><br><span class="line">  <span class="attribute">text-shadow</span>: <span class="number">1px</span> <span class="number">1px</span> <span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.3</span>) <span class="meta">!important</span>; <span class="comment">/* 轻微阴影增强可读性 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.musiccard-page</span> <span class="selector-class">.page</span> <span class="selector-id">#content-inner</span> <span class="selector-id">#page</span> <span class="selector-id">#article-container</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: none <span class="meta">!important</span>;  <span class="comment">/* 移除边框 */</span></span><br><span class="line">  <span class="attribute">box-shadow</span>: none <span class="meta">!important</span>;  <span class="comment">/* 移除阴影效果 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 特定页面（如gallery页面）样式设置 */</span></span><br><span class="line"><span class="selector-class">.musiccard-page</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: transparent <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.musiccard-page</span> <span class="selector-id">#web_bg</span> &#123;</span><br><span class="line">  <span class="attribute">filter</span>: <span class="built_in">blur</span>(<span class="number">5px</span>) <span class="meta">!important</span>; <span class="comment">/* 添加模糊效果，8px 是模糊的强度 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.musiccard-page</span> <span class="selector-id">#web_bg</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.3</span>); <span class="comment">/* 调整背景透明度，0.5 为 50% 透明度 */</span></span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">1</span>; <span class="comment">/* 使透明覆盖层位于背景图上方 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.musiccard-page</span> <span class="selector-class">.page</span> <span class="selector-id">#page-header</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: transparent <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.musiccard-page</span> <span class="selector-class">.page</span> <span class="selector-id">#content-inner</span> <span class="selector-id">#page</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: transparent <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">border</span>: none <span class="meta">!important</span>;    <span class="comment">/*去除边框*/</span></span><br><span class="line">  backdrop-<span class="attribute">filter</span>: none <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: none <span class="meta">!important</span>;  <span class="comment">/*去除阴影*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.musiccard-page</span> <span class="selector-class">.page</span> <span class="selector-id">#footer</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.musiccard-page</span> <span class="selector-class">.page</span> <span class="selector-id">#page-header</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: initial <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主要就是去除背景，使边框透明等，还有就是对背景进行适当模糊和透明度处理，去除页脚等。并对每个卡片图片的大小，以及标题描述的文字进行适当处理，使更加醒目。</p></li><li><p>在<code>music</code>文件夹新建存储主题歌单的<code>page</code>界面，这里包括<code>kon</code>、<code>sp</code>等，这些页面里的<code>index.md</code>沿用原本音乐界面格式，歌单id不同，这样就形成了不同卡片主题有着不同歌单。</p></li></ul><h2 id="修改bug-11-23"><a href="#修改bug-11-23" class="headerlink" title="修改bug(11.23)"></a>修改bug(11.23)</h2><ol><li>发现在博客里的公式渲染后出现问题，例如$SrCoO_x$的’_’会被识别为强调文本的作用，实际应表示下标。查找资料后解决如下：最终还是使用已经安装的<code>hexo-renderer-kramed</code>，但需要先执行： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-renderer-marked</span><br></pre></td></tr></table></figure> 然后主题配置文件里开启mathjax支持，enable置为true。之后在<code>博客目录\node_modules\kramed\lib\rules\inline.js</code>中做如下变动： <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// em: /^\b<span class="emphasis">_((?:<span class="strong">__|[\s\S])+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,</span></span></span><br><span class="line"><span class="strong"><span class="emphasis">em: /^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,</span></span></span><br></pre></td></tr></table></figure> 原先的正则表达式会识别_和$并用于强调文本，修改后_不会被识别，此后$ $的行内表达式正常渲染。<br> 但要进行自动部署，由于是自动重新安装依赖项，所以需要在自动部署代码加入自动修改inline.js内容的脚本。于是在博客根目录创建<code>fix_kramed.js</code>，内容为： <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> inlineRulesPath = path.<span class="title function_">join</span>(</span><br><span class="line">    __dirname,</span><br><span class="line">    <span class="string">&#x27;node_modules&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;kramed&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;lib&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;rules&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;inline.js&#x27;</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">fs.<span class="title function_">readFile</span>(inlineRulesPath, <span class="string">&#x27;utf8&#x27;</span>, <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Failed to read inline.js:&#x27;</span>, err);</span><br><span class="line">        process.<span class="title function_">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 原有的 em 规则字符串</span></span><br><span class="line">    <span class="keyword">const</span> originalEmRuleStr = <span class="string">&quot;em: /^\\b_((?:__|[\\s\\S])+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/&quot;</span>;</span><br><span class="line">    <span class="comment">// 新的 em 规则字符串</span></span><br><span class="line">    <span class="keyword">const</span> newEmRuleStr = <span class="string">&quot;em: /^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查找原有的 em 规则并替换</span></span><br><span class="line">    <span class="keyword">const</span> index = data.<span class="title function_">indexOf</span>(originalEmRuleStr);</span><br><span class="line">    <span class="keyword">if</span> (index !== -<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="comment">// 替换原有的 em 规则</span></span><br><span class="line">        <span class="keyword">const</span> updatedData = data.<span class="title function_">substring</span>(<span class="number">0</span>, index) + newEmRuleStr + data.<span class="title function_">substring</span>(index + originalEmRuleStr.<span class="property">length</span>);</span><br><span class="line">        fs.<span class="title function_">writeFile</span>(inlineRulesPath, updatedData, <span class="string">&#x27;utf8&#x27;</span>, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (err) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Failed to update inline.js:&#x27;</span>, err);</span><br><span class="line">                process.<span class="title function_">exit</span>(<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Successfully updated Kramed rules.&#x27;</span>);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Updated Rule:&#x27;</span>, newEmRuleStr);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Original em rule not found.&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure> 原本采用正则表达式匹配原规则再用新规则替换，但一直匹配不到，最后采用字符串替换的方法成功替换了em规则。`autodeploy.yml增加内容： <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装依赖</span></span><br><span class="line">  <span class="attr">if:</span> <span class="string">steps.cache.outputs.cache-hit</span> <span class="type">!=</span> <span class="string">&#x27;true&#x27;</span></span><br><span class="line">  <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    npm install --save</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">修改</span> <span class="string">Kramed</span> <span class="string">规则</span></span><br><span class="line">  <span class="attr">run:</span> <span class="string">node</span> <span class="string">fix_kramed.js</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">生成静态文件</span></span><br></pre></td></tr></table></figure> 注意，调试时，可在自动部署代码中加入： <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Debug</span> <span class="string">File</span> <span class="string">Path</span></span><br><span class="line">  <span class="attr">run:</span> <span class="string">ls</span> <span class="string">node_modules/kramed/lib/rules</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Output</span> <span class="string">Kramed</span> <span class="string">Rules</span> <span class="string">for</span> <span class="string">Debugging</span></span><br><span class="line">  <span class="attr">run:</span> <span class="string">cat</span> <span class="string">node_modules/kramed/lib/rules/inline.js</span></span><br></pre></td></tr></table></figure> 用于检查<code>inline.js</code>路径和文件内容，检查是否成功替换。这些操作后，规则修改，自动部署后也能正常渲染行内公式了。</li><li>文章里pdf显示问题解决方法：安装<code>hexo-pdf</code>: <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-pdf</span><br></pre></td></tr></table></figure> 可以在存放静态资源的<code>source</code>文件夹里新建<code>pdf</code>文件夹用于存放pdf资源，在文章里，要显示pdf时，使用命令： <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% pdf /pdf/xxx.pdf %&#125;</span><br></pre></td></tr></table></figure> 注意文件名不要含特殊字符。</li><li>音乐播放界面的歌单发现bug，歌单底部歌曲鼠标点击不触发，减小歌单列表长度能解决一点，但后面发现是底部footer元素阻挡，原先只是隐藏但仍存在会影响点击，于是使用脚本自动删除footer后解决，在每个音乐界面的md文件后加入： <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span></span><br><span class="line">document.addEventListener(&#x27;DOMContentLoaded&#x27;, () =&gt; &#123;</span><br><span class="line">  const footer = document.getElementById(&#x27;footer&#x27;);</span><br><span class="line">  if (footer) &#123;</span><br><span class="line"><span class="code">    footer.remove(); // 删除 footer 元素</span></span><br><span class="line"><span class="code">  &#125;</span></span><br><span class="line"><span class="code">&#125;);</span></span><br><span class="line"><span class="code">&lt;/script&gt;</span></span><br></pre></td></tr></table></figure> 之后歌单所有歌曲点击正常。</li></ol><h2 id="优化看板娘-12-09"><a href="#优化看板娘-12-09" class="headerlink" title="优化看板娘(12.09)"></a>优化看板娘(12.09)</h2><p>&emsp;&emsp;原来的看板娘不能随时关闭，而且比较单调，于是在<a href="https://github.com/stevenjoezhang/live2d-widget.git">这里</a>进行参考，重新设置了看板娘样式。具体步骤为：</p><ol><li>Fork原项目，并在本地<code>git clone</code>fork的项目，为了保持代码清晰和便于回退，保留原分支，创建新分支： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/yourusername/repository-name.git</span><br><span class="line"><span class="built_in">cd</span> repository-name</span><br><span class="line">git checkout -b new-branch-name</span><br></pre></td></tr></table></figure> 将<code>new-branch-name</code>替换为要新建的分支名。</li><li>在本地进行代码修改，然后推送到新分支： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .;git commit -m <span class="string">&quot;update on 24.12.08&quot;</span>;git push origin customize</span><br></pre></td></tr></table></figure> <code>customize</code>为示例分支。</li><li>由于仓库的资源使用jsdelivr CDN加载，而jsdelivr的缓存机制会导致修改的内容无法及时更新，折腾半天，采用不断打新标签的方式更新代码内容。当有新的代码改动提交时，创建新标签并推送，然后只需要更改链接即可。 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .;git commit -m <span class="string">&quot;update on 24.12.08&quot;</span>;git push origin customize;git tag -a v1.0.6 -m <span class="string">&quot;更新代码&quot;</span>;git push origin v1.0.6</span><br></pre></td></tr></table></figure> 每次修改代码后，使用上述命令推送内容到仓库，并创建新标签和推送内容。<br> 相应地，修改<code>autoload.js</code>的路径链接： <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// live2d_path 参数建议使用绝对路径</span></span><br><span class="line"><span class="keyword">const</span> live2d_path = <span class="string">&quot;https://fastly.jsdelivr.net/gh/ei4869/live2d-widget-fork@v1.0.6/&quot;</span>;</span><br></pre></td></tr></table></figure> <code>ei4869</code>和<code>live2d-widget-fork</code>分别为用户名和仓库，新的标签<code>@v1.0.6</code>能刷新缓存，同步更新CDN内容。<br> 要想删除某个tag时，采用以下命令： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git tag -d v1.0.0;git push origin --delete v1.0.0</span><br></pre></td></tr></table></figure> 要想删除除了某个tag(如v1.0.6)外的其他tag时，采用以下命令： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git tag | grep -v <span class="string">&#x27;v1.0.6&#x27;</span> | xargs git tag -d;</span><br><span class="line">git ls-remote --tags origin | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> | grep -v <span class="string">&#x27;v1.0.6&#x27;</span> | sed <span class="string">&#x27;s|refs/tags/||&#x27;</span> | xargs -I &#123;&#125; git push origin --delete &#123;&#125;</span><br></pre></td></tr></table></figure></li><li>自定义看板娘样式，可以修改<code>live2d-widget-fork</code>里的以下内容：<code>waifu.css</code>用于修改具体网页里呈现的样式，我这里修改了原来的大小(#live2d)，位置(#waifu)，文字框高度(#waifu-tips)等，最主要的<code>autoload.js</code>用来设置主函数，可以修改里面的代码： <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">  <span class="title function_">initWidget</span>(&#123;</span><br><span class="line"><span class="attr">waifuPath</span>: live2d_path + <span class="string">&quot;waifu-tips.json&quot;</span>,</span><br><span class="line"><span class="comment">//apiPath: &quot;https://live2d.fghrsh.net/api/&quot;,</span></span><br><span class="line"><span class="attr">cdnPath</span>: <span class="string">&quot;https://fastly.jsdelivr.net/gh/fghrsh/live2d_api/&quot;</span>,</span><br><span class="line"><span class="attr">tools</span>: [<span class="string">&quot;hitokoto&quot;</span>, <span class="string">&quot;switch-model&quot;</span>, <span class="string">&quot;switch-texture&quot;</span>, <span class="string">&quot;photo&quot;</span>, <span class="string">&quot;quit&quot;</span>]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure> 我这里把功能按钮(<code>tools</code>)减少了两个(纸飞机游戏和模型信息)。通过修改<code>apiPath</code>或<code>cdnPath</code>里的资源可以增添喜欢的模型，这里还没深入了解(这两个只需配置一个即可)。另外<code>waifu-tips.json</code> 中定义了触发条件（selector，CSS 选择器）和触发时显示的文字（text）可以根据需要修改(主要就是改变一些动作触发的对话)，而<code>src/waifu-tips.js</code> 包含了按钮和对话框的逻辑，可以根据代码一步步分析进行个性化配置(还没深入并修改)。目前就只改了tools和css里的配置。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 整活探索 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
